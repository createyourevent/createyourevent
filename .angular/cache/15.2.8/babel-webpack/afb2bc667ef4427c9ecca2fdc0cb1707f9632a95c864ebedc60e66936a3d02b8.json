{"ast":null,"code":"/*!\n * @license\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n/**\n * Validation, extraction and creation of IBAN, BBAN, BIC/SWIFT numbers plus some other helpful stuff\n * @packageDocumentation\n * @author Saša Jovanić\n * @module ibantools\n * @version 3.3.1\n * @license MPL-2.0\n * @preferred\n */\n'use strict';\n\n/**\n * Validate IBAN\n * ```\n * // returns true\n * ibantools.isValidIBAN(\"NL91ABNA0517164300\");\n * ```\n * ```\n * // returns false\n * ibantools.isValidIBAN(\"NL92ABNA0517164300\");\n * ```\nv */\nexport function isValidIBAN(iban) {\n  if (iban !== undefined && iban !== null) {\n    var reg = new RegExp('^[0-9]{2}$', '');\n    var spec = countrySpecs[iban.slice(0, 2)];\n    if (spec !== undefined && spec.bban_regexp && spec.bban_regexp !== null && spec.chars && spec.chars === iban.length && reg.test(iban.slice(2, 4)) && checkFormatBBAN(iban.slice(4), spec.bban_regexp) && isValidIBANChecksum(iban)) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * IBAM validation errors\n */\nexport var ValidationErrorsIBAN = /*#__PURE__*/(() => {\n  (function (ValidationErrorsIBAN) {\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"NoIBANProvided\"] = 0] = \"NoIBANProvided\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"NoIBANCountry\"] = 1] = \"NoIBANCountry\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongBBANLength\"] = 2] = \"WrongBBANLength\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongBBANFormat\"] = 3] = \"WrongBBANFormat\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"ChecksumNotNumber\"] = 4] = \"ChecksumNotNumber\";\n    ValidationErrorsIBAN[ValidationErrorsIBAN[\"WrongIBANChecksum\"] = 5] = \"WrongIBANChecksum\";\n  })(ValidationErrorsIBAN || (ValidationErrorsIBAN = {}));\n  return ValidationErrorsIBAN;\n})();\n/**\n * validateIBAN\n * ```\n * // returns {errorCodes: [], valid: true}\n * ibantools.validateIBAN(\"NL91 ABNA 0417 1643 00\");\n * ```\n */\nexport function validateIBAN(iban) {\n  var result = {\n    errorCodes: [],\n    valid: true\n  };\n  if (iban !== undefined && iban !== null && iban !== '') {\n    var spec = countrySpecs[iban.slice(0, 2)];\n    if (!spec || !(spec.bban_regexp || spec.chars)) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsIBAN.NoIBANCountry);\n    }\n    if (spec && spec.chars && spec.chars !== iban.length) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsIBAN.WrongBBANLength);\n    }\n    if (spec && spec.bban_regexp && !checkFormatBBAN(iban.slice(4), spec.bban_regexp)) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsIBAN.WrongBBANFormat);\n    }\n    var reg = new RegExp('^[0-9]{2}$', '');\n    if (!reg.test(iban.slice(2, 4))) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsIBAN.ChecksumNotNumber);\n    }\n    if (!isValidIBANChecksum(iban)) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsIBAN.WrongIBANChecksum);\n    }\n  } else {\n    result.valid = false;\n    result.errorCodes.push(ValidationErrorsIBAN.NoIBANProvided);\n  }\n  return result;\n}\n/**\n * Validate BBAN\n *\n * ```\n * // returns true\n * ibantools.isValidBBAN(\"ABNA0517164300\", \"NL\");\n * ```\n * ```\n * // returns false\n * ibantools.isValidBBAN(\"A7NA0517164300\", \"NL\");\n * ```\n */\nexport function isValidBBAN(bban, countryCode) {\n  if (bban !== undefined && bban !== null && countryCode !== undefined && countryCode !== null) {\n    var spec = countrySpecs[countryCode];\n    if (spec !== undefined && spec !== null && spec.bban_regexp && spec.bban_regexp !== null && spec.chars && spec.chars !== null && spec.chars - 4 === bban.length && checkFormatBBAN(bban, spec.bban_regexp)) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Validate if country code is from a SEPA country\n * ```\n * // returns true\n * ibantools.isSEPACountry(\"NL\");\n * ```\n * ```\n * // returns false\n * ibantools.isSEPACountry(\"PK\");\n * ```\n */\nexport function isSEPACountry(countryCode) {\n  if (countryCode !== undefined && countryCode !== null) {\n    var spec = countrySpecs[countryCode];\n    if (spec !== undefined) {\n      return spec.SEPA ? spec.SEPA : false;\n    }\n  }\n  return false;\n}\n/**\n * composeIBAN\n *\n * ```\n * // returns NL91ABNA0417164300\n * ibantools.composeIBAN({ countryCode: \"NL\", bban: \"ABNA0417164300\" });\n * ```\n */\nexport function composeIBAN(params) {\n  var formated_bban = electronicFormatIBAN(params.bban) || '';\n  if (params.countryCode === null || params.countryCode === undefined) {\n    return null;\n  }\n  var spec = countrySpecs[params.countryCode];\n  if (formated_bban !== '' && spec !== undefined && spec.chars && spec.chars !== null && spec.chars === formated_bban.length + 4 && spec.bban_regexp && spec.bban_regexp !== null && checkFormatBBAN(formated_bban, spec.bban_regexp)) {\n    var checksom = mod9710(params.countryCode + '00' + formated_bban);\n    return params.countryCode + ('0' + (98 - checksom)).slice(-2) + formated_bban;\n  }\n  return null;\n}\n/**\n * extractIBAN\n * ```\n * // returns {iban: \"NL91ABNA0417164300\", bban: \"ABNA0417164300\", countryCode: \"NL\", valid: true}\n * ibantools.extractIBAN(\"NL91 ABNA 0417 1643 00\");\n * ```\n */\nexport function extractIBAN(iban) {\n  var result = {};\n  result.iban = iban;\n  if (isValidIBAN(iban)) {\n    result.bban = iban.slice(4);\n    result.countryCode = iban.slice(0, 2);\n    result.valid = true;\n  } else {\n    result.valid = false;\n  }\n  return result;\n}\n/**\n * Check BBAN format\n *\n * @ignore\n */\nfunction checkFormatBBAN(bban, bformat) {\n  var reg = new RegExp(bformat, '');\n  return reg.test(bban);\n}\n/**\n * Get IBAN in electronic format (no spaces)\n * IBAN validation is not performed.\n * When non-string value for IBAN is provided, returns null.\n * ```\n * // returns \"NL91ABNA0417164300\"\n * ibantools.electronicFormatIBAN(\"NL91 ABNA 0417 1643 00\");\n * ```\n */\nexport function electronicFormatIBAN(iban) {\n  if (typeof iban !== 'string') {\n    return null;\n  }\n  return iban.replace(/[-\\ ]/g, '').toUpperCase();\n}\n/**\n * Get IBAN in friendly format (separated after every 4 characters)\n * IBAN validation is not performed.\n * When non-string value for IBAN is provided, returns null.\n * ```\n * // returns \"NL91 ABNA 0417 1643 00\"\n * ibantools.friendlyFormatIBAN(\"NL91ABNA0417164300\");\n * ```\n * ```\n * // returns \"NL91-ABNA-0417-1643-00\"\n * ibantools.friendlyFormatIBAN(\"NL91ABNA0417164300\",\"-\");\n * ```\n */\nexport function friendlyFormatIBAN(iban, separator) {\n  if (typeof iban !== 'string') {\n    return null;\n  }\n  if (separator === undefined || separator === null) {\n    separator = ' ';\n  }\n  var electronic_iban = electronicFormatIBAN(iban);\n  /* istanbul ignore if */\n  if (electronic_iban === null) {\n    return null;\n  }\n  return electronic_iban.replace(/(.{4})(?!$)/g, '$1' + separator);\n}\n/**\n * Calculate checksum of IBAN and compares it with checksum provided in IBAN Registry\n *\n * @ignore\n */\nfunction isValidIBANChecksum(iban) {\n  var providedChecksum = parseInt(iban.slice(2, 4), 10);\n  var temp = iban.slice(3) + iban.slice(0, 2) + '00';\n  var validationString = '';\n  for (var n = 1; n < temp.length; n++) {\n    var c = temp.charCodeAt(n);\n    if (c >= 65) {\n      validationString += (c - 55).toString();\n    } else {\n      validationString += temp[n];\n    }\n  }\n  while (validationString.length > 2) {\n    var part = validationString.slice(0, 6);\n    validationString = (parseInt(part, 10) % 97).toString() + validationString.slice(part.length);\n  }\n  var rest = parseInt(validationString, 10) % 97;\n  return 98 - rest === providedChecksum;\n}\n/**\n * MOD-97-10\n *\n * @ignore\n */\nfunction mod9710(iban) {\n  iban = iban.slice(3) + iban.slice(0, 4);\n  var validationString = '';\n  for (var n = 1; n < iban.length; n++) {\n    var c = iban.charCodeAt(n);\n    if (c >= 65) {\n      validationString += (c - 55).toString();\n    } else {\n      validationString += iban[n];\n    }\n  }\n  while (validationString.length > 2) {\n    var part = validationString.slice(0, 6);\n    validationString = (parseInt(part, 10) % 97).toString() + validationString.slice(part.length);\n  }\n  return parseInt(validationString, 10) % 97;\n}\n/**\n * Returns specifications for all countries, even those who are not\n * members of IBAN registry. `IBANRegistry` field indicates if country\n * is member of not.\n *\n * ```\n * // Validating IBAN form field after user selects his country\n * // <select id=\"countries\">\n * //   ...\n * //   <option value=\"NL\">Netherlands</option>\n * //   ...\n * // </select>\n * $(\"#countries\").select(function() {\n *   // Find country\n *   let country = ibantools.getCountrySpecifications()[$(this).val()];\n *   // Add country code letters to IBAN form field\n *   $(\"input#iban\").value($(this).val());\n *   // Add New value to \"pattern\" attribute to #iban input text field\n *   $(\"input#iban\").attr(\"pattern\", $(this).val() + \"[0-9]{2}\" + country.bban_regexp.slice(1).replace(\"$\",\"\"));\n * });\n * ```\n */\nexport function getCountrySpecifications() {\n  var countyMap = {};\n  for (var countyCode in countrySpecs) {\n    var county = countrySpecs[countyCode];\n    countyMap[countyCode] = {\n      chars: county.chars ? county.chars : null,\n      bban_regexp: county.bban_regexp ? county.bban_regexp : null,\n      IBANRegistry: county.IBANRegistry ? county.IBANRegistry : false,\n      SEPA: county.SEPA ? county.SEPA : false\n    };\n  }\n  return countyMap;\n}\n/**\n * Validate BIC/SWIFT\n *\n * ```\n * // returns true\n * ibantools.isValidBIC(\"ABNANL2A\");\n *\n * // returns true\n * ibantools.isValidBIC(\"NEDSZAJJXXX\");\n *\n * // returns false\n * ibantools.isValidBIC(\"ABN4NL2A\");\n *\n * // returns false\n * ibantools.isValidBIC(\"ABNA NL 2A\");\n * ```\n */\nexport function isValidBIC(bic) {\n  if (!bic) {\n    return false;\n  }\n  var reg = new RegExp('^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$', '');\n  var spec = countrySpecs[bic.toUpperCase().slice(4, 6)];\n  return reg.test(bic) && spec !== undefined;\n}\n/**\n * BIC validation errors\n */\nexport var ValidationErrorsBIC = /*#__PURE__*/(() => {\n  (function (ValidationErrorsBIC) {\n    ValidationErrorsBIC[ValidationErrorsBIC[\"NoBICProvided\"] = 0] = \"NoBICProvided\";\n    ValidationErrorsBIC[ValidationErrorsBIC[\"NoBICCountry\"] = 1] = \"NoBICCountry\";\n    ValidationErrorsBIC[ValidationErrorsBIC[\"WrongBICFormat\"] = 2] = \"WrongBICFormat\";\n  })(ValidationErrorsBIC || (ValidationErrorsBIC = {}));\n  return ValidationErrorsBIC;\n})();\n/**\n * validateBIC\n * ```\n * // returns {errorCodes: [], valid: true}\n * ibantools.validateBIC(\"NEDSZAJJXXX\");\n * ```\n */\nexport function validateBIC(bic) {\n  var result = {\n    errorCodes: [],\n    valid: true\n  };\n  if (bic !== undefined && bic !== null && bic !== '') {\n    var spec = countrySpecs[bic.toUpperCase().slice(4, 6)];\n    if (spec === undefined) {\n      result.valid = false;\n      result.errorCodes.push(ValidationErrorsBIC.NoBICCountry);\n    } else {\n      var reg = new RegExp('^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$', '');\n      if (!reg.test(bic)) {\n        result.valid = false;\n        result.errorCodes.push(ValidationErrorsBIC.WrongBICFormat);\n      }\n    }\n  } else {\n    result.valid = false;\n    result.errorCodes.push(ValidationErrorsBIC.NoBICProvided);\n  }\n  return result;\n}\n/**\n * extractBIC\n * ```\n * // returns {bankCode: \"ABNA\", countryCode: \"NL\", locationCode: \"2A\", branchCode: null, testBIC: flase, valid: true}\n * ibantools.extractBIC(\"ABNANL2A\");\n * ```\n */\nexport function extractBIC(inputBic) {\n  var result = {};\n  var bic = inputBic.toUpperCase();\n  if (isValidBIC(bic)) {\n    result.bankCode = bic.slice(0, 4);\n    result.countryCode = bic.slice(4, 6);\n    result.locationCode = bic.slice(6, 8);\n    result.testBIC = result.locationCode[1] === '0' ? true : false;\n    result.branchCode = bic.length > 8 ? bic.slice(8) : '619';\n    result.valid = true;\n  } else {\n    result.valid = false;\n  }\n  return result;\n}\n/**\n * Country specifications\n */\nexport var countrySpecs = {\n  AD: {\n    chars: 24,\n    bban_regexp: '^[0-9]{8}[A-Z0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  AE: {\n    chars: 23,\n    bban_regexp: '^[0-9]{3}[0-9]{16}$',\n    IBANRegistry: true\n  },\n  AF: {},\n  AG: {},\n  AI: {},\n  AL: {\n    chars: 28,\n    bban_regexp: '^[0-9]{8}[A-Z0-9]{16}$',\n    IBANRegistry: true\n  },\n  AM: {},\n  AO: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$'\n  },\n  AQ: {},\n  AR: {},\n  AS: {},\n  AT: {\n    chars: 20,\n    bban_regexp: '^[0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  AU: {},\n  AW: {},\n  AX: {\n    chars: 18,\n    bban_regexp: '^[0-9]{14}$',\n    IBANRegistry: true\n  },\n  AZ: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{20}$',\n    IBANRegistry: true\n  },\n  BA: {\n    chars: 20,\n    bban_regexp: '^[0-9]{16}$',\n    IBANRegistry: true\n  },\n  BB: {},\n  BD: {},\n  BE: {\n    chars: 16,\n    bban_regexp: '^[0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  BF: {\n    chars: 28,\n    bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$'\n  },\n  BG: {\n    chars: 22,\n    bban_regexp: '^[A-Z]{4}[0-9]{6}[A-Z0-9]{8}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  BH: {\n    chars: 22,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{14}$',\n    IBANRegistry: true\n  },\n  BI: {\n    chars: 16,\n    bban_regexp: '^[0-9]{12}$'\n  },\n  BJ: {\n    chars: 28,\n    bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$'\n  },\n  BL: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  BM: {},\n  BN: {},\n  BO: {},\n  BQ: {},\n  BR: {\n    chars: 29,\n    bban_regexp: '^[0-9]{23}[A-Z]{1}[A-Z0-9]{1}$',\n    IBANRegistry: true\n  },\n  BS: {},\n  BT: {},\n  BV: {},\n  BW: {},\n  BY: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$',\n    IBANRegistry: true\n  },\n  BZ: {},\n  CA: {},\n  CC: {},\n  CD: {},\n  CF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  CG: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  CH: {\n    chars: 21,\n    bban_regexp: '^[0-9]{5}[A-Z0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  CI: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{1}[0-9]{23}$'\n  },\n  CK: {},\n  CL: {},\n  CM: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  CN: {},\n  CO: {},\n  CR: {\n    chars: 22,\n    bban_regexp: '^[0-9]{18}$',\n    IBANRegistry: true\n  },\n  CU: {},\n  CV: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$'\n  },\n  CW: {},\n  CX: {},\n  CY: {\n    chars: 28,\n    bban_regexp: '^[0-9]{8}[A-Z0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  CZ: {\n    chars: 24,\n    bban_regexp: '^[0-9]{20}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  DE: {\n    chars: 22,\n    bban_regexp: '^[0-9]{18}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  DJ: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  DK: {\n    chars: 18,\n    bban_regexp: '^[0-9]{14}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  DM: {},\n  DO: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n    IBANRegistry: true\n  },\n  DZ: {\n    chars: 26,\n    bban_regexp: '^[0-9]{22}$'\n  },\n  EC: {},\n  EE: {\n    chars: 20,\n    bban_regexp: '^[0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  EG: {\n    chars: 29,\n    bban_regexp: '^[0-9]{25}',\n    IBANRegistry: true\n  },\n  EH: {},\n  ER: {},\n  ES: {\n    chars: 24,\n    bban_regexp: '^[0-9]{20}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  ET: {},\n  FI: {\n    chars: 18,\n    bban_regexp: '^[0-9]{14}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  FJ: {},\n  FK: {},\n  FM: {},\n  FO: {\n    chars: 18,\n    bban_regexp: '^[0-9]{14}$',\n    IBANRegistry: true\n  },\n  FR: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  GA: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  GB: {\n    chars: 22,\n    bban_regexp: '^[A-Z]{4}[0-9]{14}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  GD: {},\n  GE: {\n    chars: 22,\n    bban_regexp: '^[A-Z0-9]{2}[0-9]{16}$',\n    IBANRegistry: true\n  },\n  GF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  GG: {},\n  GH: {},\n  GI: {\n    chars: 23,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{15}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  GL: {\n    chars: 18,\n    bban_regexp: '^[0-9]{14}$',\n    IBANRegistry: true\n  },\n  GM: {},\n  GN: {},\n  GP: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  GQ: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  GR: {\n    chars: 27,\n    bban_regexp: '^[0-9]{7}[A-Z0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  GS: {},\n  GT: {\n    chars: 28,\n    bban_regexp: '^[A-Z0-9]{24}$',\n    IBANRegistry: true\n  },\n  GU: {},\n  GW: {\n    chars: 25,\n    bban_regexp: '^[A-Z]{2}[0-9]{19}$'\n  },\n  GY: {},\n  HK: {},\n  HM: {},\n  HN: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{4}[0-9]{20}$'\n  },\n  HR: {\n    chars: 21,\n    bban_regexp: '^[0-9]{17}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  HT: {},\n  HU: {\n    chars: 28,\n    bban_regexp: '^[0-9]{24}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  ID: {},\n  IE: {\n    chars: 22,\n    bban_regexp: '^[A-Z0-9]{4}[0-9]{14}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  IL: {\n    chars: 23,\n    bban_regexp: '^[0-9]{19}$',\n    IBANRegistry: true\n  },\n  IM: {},\n  IN: {},\n  IO: {},\n  IQ: {\n    chars: 23,\n    bban_regexp: '^[A-Z]{4}[0-9]{15}$',\n    IBANRegistry: true\n  },\n  IR: {\n    chars: 26,\n    bban_regexp: '^[0-9]{22}$'\n  },\n  IS: {\n    chars: 26,\n    bban_regexp: '^[0-9]{22}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  IT: {\n    chars: 27,\n    bban_regexp: '^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  JE: {},\n  JM: {},\n  JO: {\n    chars: 30,\n    bban_regexp: '^[A-Z]{4}[0-9]{4}[A-Z0-9]{18}$',\n    IBANRegistry: true\n  },\n  JP: {},\n  KE: {},\n  KG: {},\n  KH: {},\n  KI: {},\n  KM: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  KN: {},\n  KP: {},\n  KR: {},\n  KW: {\n    chars: 30,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{22}$',\n    IBANRegistry: true\n  },\n  KY: {},\n  KZ: {\n    chars: 20,\n    bban_regexp: '^[0-9]{3}[A-Z0-9]{13}$',\n    IBANRegistry: true\n  },\n  LA: {},\n  LB: {\n    chars: 28,\n    bban_regexp: '^[0-9]{4}[A-Z0-9]{20}$',\n    IBANRegistry: true\n  },\n  LC: {\n    chars: 32,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{24}$',\n    IBANRegistry: true\n  },\n  LI: {\n    chars: 21,\n    bban_regexp: '^[0-9]{5}[A-Z0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  LK: {},\n  LR: {},\n  LS: {},\n  LT: {\n    chars: 20,\n    bban_regexp: '^[0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  LU: {\n    chars: 20,\n    bban_regexp: '^[0-9]{3}[A-Z0-9]{13}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  LV: {\n    chars: 21,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{13}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  LY: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$',\n    IBANRegistry: true\n  },\n  MA: {\n    chars: 28,\n    bban_regexp: '^[0-9]{24}$'\n  },\n  MC: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  MD: {\n    chars: 24,\n    bban_regexp: '^[A-Z0-9]{2}[A-Z0-9]{18}$',\n    IBANRegistry: true\n  },\n  ME: {\n    chars: 22,\n    bban_regexp: '^[0-9]{18}$',\n    IBANRegistry: true\n  },\n  MF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  MG: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  MH: {},\n  MK: {\n    chars: 19,\n    bban_regexp: '^[0-9]{3}[A-Z0-9]{10}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  ML: {\n    chars: 28,\n    bban_regexp: '^[A-Z0-9]{2}[0-9]{22}$'\n  },\n  MM: {},\n  MN: {},\n  MO: {},\n  MP: {},\n  MQ: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  MR: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$',\n    IBANRegistry: true\n  },\n  MS: {},\n  MT: {\n    chars: 31,\n    bban_regexp: '^[A-Z]{4}[0-9]{5}[A-Z0-9]{18}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  MU: {\n    chars: 30,\n    bban_regexp: '^[A-Z]{4}[0-9]{19}[A-Z]{3}$',\n    IBANRegistry: true\n  },\n  MV: {},\n  MW: {},\n  MX: {},\n  MY: {},\n  MZ: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$'\n  },\n  NA: {},\n  NC: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  NE: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{2}[0-9]{22}$'\n  },\n  NF: {},\n  NG: {},\n  NI: {\n    chars: 32,\n    bban_regexp: '^[A-Z]{4}[0-9]{24}$'\n  },\n  NL: {\n    chars: 18,\n    bban_regexp: '^[A-Z]{4}[0-9]{10}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  NO: {\n    chars: 15,\n    bban_regexp: '^[0-9]{11}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  NP: {},\n  NR: {},\n  NU: {},\n  NZ: {},\n  OM: {},\n  PA: {},\n  PE: {},\n  PF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  PG: {},\n  PH: {},\n  PK: {\n    chars: 24,\n    bban_regexp: '^[A-Z0-9]{4}[0-9]{16}$',\n    IBANRegistry: true\n  },\n  PL: {\n    chars: 28,\n    bban_regexp: '^[0-9]{24}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  PM: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  PN: {},\n  PR: {},\n  PS: {\n    chars: 29,\n    bban_regexp: '^[A-Z0-9]{4}[0-9]{21}$',\n    IBANRegistry: true\n  },\n  PT: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  PW: {},\n  PY: {},\n  QA: {\n    chars: 29,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{21}$',\n    IBANRegistry: true\n  },\n  RE: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  RO: {\n    chars: 24,\n    bban_regexp: '^[A-Z]{4}[A-Z0-9]{16}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  RS: {\n    chars: 22,\n    bban_regexp: '^[0-9]{18}$',\n    IBANRegistry: true\n  },\n  RU: {},\n  RW: {},\n  SA: {\n    chars: 24,\n    bban_regexp: '^[0-9]{2}[A-Z0-9]{18}$',\n    IBANRegistry: true\n  },\n  SB: {},\n  SC: {\n    chars: 31,\n    bban_regexp: '^[A-Z]{4}[0-9]{20}[A-Z]{3}$',\n    IBANRegistry: true\n  },\n  SD: {},\n  SE: {\n    chars: 24,\n    bban_regexp: '^[0-9]{20}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  SG: {},\n  SH: {},\n  SI: {\n    chars: 19,\n    bban_regexp: '^[0-9]{15}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  SJ: {},\n  SK: {\n    chars: 24,\n    bban_regexp: '^[0-9]{20}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  SL: {},\n  SM: {\n    chars: 27,\n    bban_regexp: '^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$',\n    IBANRegistry: true,\n    SEPA: true\n  },\n  SN: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{1}[0-9]{23}$'\n  },\n  SO: {},\n  SR: {},\n  SS: {},\n  ST: {\n    chars: 25,\n    bban_regexp: '^[0-9]{21}$',\n    IBANRegistry: true\n  },\n  SV: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{4}[0-9]{20}$',\n    IBANRegistry: true\n  },\n  SX: {},\n  SY: {},\n  SZ: {},\n  TC: {},\n  TD: {\n    chars: 27,\n    bban_regexp: '^[0-9]{23}$'\n  },\n  TF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  TG: {\n    chars: 28,\n    bban_regexp: '^[A-Z]{2}[0-9]{22}$'\n  },\n  TH: {},\n  TJ: {},\n  TK: {},\n  TL: {\n    chars: 23,\n    bban_regexp: '^[0-9]{19}$',\n    IBANRegistry: true\n  },\n  TM: {},\n  TN: {\n    chars: 24,\n    bban_regexp: '^[0-9]{20}$',\n    IBANRegistry: true\n  },\n  TO: {},\n  TR: {\n    chars: 26,\n    bban_regexp: '^[0-9]{5}[A-Z0-9]{17}$',\n    IBANRegistry: true\n  },\n  TT: {},\n  TV: {},\n  TW: {},\n  TZ: {},\n  UA: {\n    chars: 29,\n    bban_regexp: '^[0-9]{6}[A-Z0-9]{19}$',\n    IBANRegistry: true\n  },\n  UG: {},\n  UM: {},\n  US: {},\n  UY: {},\n  UZ: {},\n  VA: {\n    chars: 22,\n    bban_regexp: '^[0-9]{18}',\n    IBANRegistry: true\n  },\n  VC: {},\n  VE: {},\n  VG: {\n    chars: 24,\n    bban_regexp: '^[A-Z0-9]{4}[0-9]{16}$',\n    IBANRegistry: true\n  },\n  VI: {},\n  VN: {},\n  VU: {},\n  WF: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  WS: {},\n  XK: {\n    chars: 20,\n    bban_regexp: '^[0-9]{16}$',\n    IBANRegistry: true\n  },\n  YE: {},\n  YT: {\n    chars: 27,\n    bban_regexp: '^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$',\n    IBANRegistry: true\n  },\n  ZA: {},\n  ZM: {},\n  ZW: {}\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}