{"ast":null,"code":"import { FieldType } from '@ngx-formly/core';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nimport * as i5 from \"ngx-quill\";\nconst _c0 = function () {\n  return {\n    \"height\": \"400px\"\n  };\n};\nconst _c1 = function () {\n  return {\n    height: \"350px\"\n  };\n};\nexport let FormlyFieldEditorComponent = /*#__PURE__*/(() => {\n  class FormlyFieldEditorComponent extends FieldType {\n    constructor(messageService, translate) {\n      super();\n      this.messageService = messageService;\n      this.translate = translate;\n      this.modules = {};\n      this.maxUploadFileSize = 500000;\n      this.imageHandler = (image, callback) => {\n        const input = document.getElementById('fileInputField');\n        document.getElementById('fileInputField').onchange = () => {\n          const file = input.files[0];\n          // file type is only image.\n          if (/^image\\//.test(file.type)) {\n            if (file.size > this.maxUploadFileSize) {\n              this.messageService.add({\n                severity: 'error',\n                summary: this.translate.instant('register-shop.filesize.error'),\n                detail: this.translate.instant('register-shop.filesize.error.info')\n              });\n            } else {\n              const reader = new FileReader();\n              reader.onload = () => {\n                const range = this.quillEditorRef.getSelection();\n                const img = '<img src=\"' + reader.result + '\" />';\n                this.quillEditorRef.clipboard.dangerouslyPasteHTML(range.index, img);\n              };\n              reader.readAsDataURL(file);\n            }\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translate.instant('register-shop.filetype.error'),\n              detail: this.translate.instant('register-shop.filetype.error.info')\n            });\n          }\n        };\n        input.click();\n      };\n      this.modules = {\n        toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n          header: 1\n        }, {\n          header: 2\n        }], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], [{\n          script: 'sub'\n        }, {\n          script: 'super'\n        }], [{\n          indent: '-1'\n        }, {\n          indent: '+1'\n        }], [{\n          direction: 'rtl'\n        }], [{\n          size: ['small', false, 'large', 'huge']\n        }], [{\n          header: [2, 3, 4, 5, 6, false]\n        }], [{\n          color: []\n        }, {\n          background: []\n        }], [{\n          font: []\n        }], [{\n          align: []\n        }], ['clean'], ['link', 'image', 'video'] // link and image, video\n        ]\n      };\n    }\n\n    getEditorInstance(editorInstance) {\n      this.quillEditorRef = editorInstance;\n      const toolbar = editorInstance.getModule('toolbar');\n      toolbar.addHandler('image', this.imageHandler);\n    }\n  }\n  FormlyFieldEditorComponent.ɵfac = function FormlyFieldEditorComponent_Factory(t) {\n    return new (t || FormlyFieldEditorComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.TranslateService));\n  };\n  FormlyFieldEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormlyFieldEditorComponent,\n    selectors: [[\"jhi-formly-field-editor\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 13,\n    vars: 16,\n    consts: [[3, \"for\"], [3, \"styles\", \"id\", \"placeholder\", \"formControl\", \"formlyAttributes\", \"modules\", \"onEditorCreated\"], [\"type\", \"file\", \"id\", \"fileInputField\", 2, \"display\", \"none\"], [1, \"form-text\", \"text-muted\"]],\n    template: function FormlyFieldEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"label\", 0);\n        i0.ɵɵtext(1, \"\\n    \");\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \"\\n    \");\n        i0.ɵɵelementStart(6, \"quill-editor\", 1);\n        i0.ɵɵlistener(\"onEditorCreated\", function FormlyFieldEditorComponent_Template_quill_editor_onEditorCreated_6_listener($event) {\n          return ctx.getEditorInstance($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\n    \");\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵtext(9, \"\\n    \");\n        i0.ɵɵelementStart(10, \"small\", 3);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"for\", ctx.id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.to.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\\n        \", ctx.to.required ? \"*\" : \"\", \"\\n    \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c0));\n        i0.ɵɵclassProp(\"is-invalid\", ctx.showError);\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n        i0.ɵɵproperty(\"styles\", i0.ɵɵpureFunction0(15, _c1))(\"placeholder\", ctx.to.placeholder)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"modules\", ctx.modules);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.to.description);\n      }\n    },\n    dependencies: [i3.NgControlStatus, i3.FormControlDirective, i4.FormlyAttributes, i5.QuillEditorComponent],\n    encapsulation: 2\n  });\n  return FormlyFieldEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}