{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/event/service/event.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/general.service\";\nimport * as i4 from \"app/entities/event-comment/service/event-comment.service\";\nimport * as i5 from \"@fortawesome/angular-fontawesome\";\nimport * as i6 from \"../../../../shared/language/translate.directive\";\nimport * as i7 from \"../../../comment-box/admin/admin-comment-box.component\";\nimport * as i8 from \"../../admin-comments/admin-comments-event.component\";\nexport class CommentsComponent {\n  constructor(eventService, route, generalService, eventCommentService) {\n    _defineProperty(this, \"eventService\", void 0);\n    _defineProperty(this, \"route\", void 0);\n    _defineProperty(this, \"generalService\", void 0);\n    _defineProperty(this, \"eventCommentService\", void 0);\n    _defineProperty(this, \"eventId\", void 0);\n    _defineProperty(this, \"jhiEvent\", void 0);\n    _defineProperty(this, \"user\", void 0);\n    _defineProperty(this, \"likes\", []);\n    _defineProperty(this, \"dislikes\", []);\n    _defineProperty(this, \"comments\", []);\n    _defineProperty(this, \"commentsProductComment\", void 0);\n    this.eventService = eventService;\n    this.route = route;\n    this.generalService = generalService;\n    this.eventCommentService = eventCommentService;\n  }\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\n      this.eventId = params['eventId'];\n      this.eventService.find(this.eventId).subscribe(ev => {\n        this.jhiEvent = ev.body;\n        this.generalService.findWidthAuthorities().subscribe(user => {\n          this.user = user.body;\n          this.generalService.findEventCommentByEventId(this.jhiEvent.id).subscribe(res => {\n            this.comments = res.body;\n          });\n        });\n      });\n    });\n  }\n  onDelete(id) {\n    this.eventCommentService.delete(id).subscribe(() => {\n      this.comments.forEach(ele => {\n        const z = ele.eventComments.findIndex(e => e.id === id);\n        if (z > -1) {\n          ele.eventComments.splice(z, 1);\n        }\n      });\n    });\n  }\n  previousState() {\n    window.history.back();\n  }\n}\n_defineProperty(CommentsComponent, \"\\u0275fac\", function CommentsComponent_Factory(t) {\n  return new (t || CommentsComponent)(i0.ɵɵdirectiveInject(i1.EventService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GeneralService), i0.ɵɵdirectiveInject(i4.EventCommentService));\n});\n_defineProperty(CommentsComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentsComponent,\n  selectors: [[\"jhi-comments\"]],\n  decls: 36,\n  vars: 2,\n  consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [\"jhiTranslate\", \"dashboard-event.comments-feedback-title\"], [\"jhiTranslate\", \"dashboard-event.comments-feedback-info\"], [3, \"comments\", \"deleted\"], [3, \"jhiEvent\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"btn-cancel\"], [\"type\", \"button\", \"id\", \"cancel-save\", 1, \"btn\", \"btn-secondary\", \"btn-cancel\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"]],\n  template: function CommentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"h2\", 1);\n      i0.ɵɵtext(3, \"Comments and feedback to this event\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵelementStart(5, \"p\", 2);\n      i0.ɵɵtext(6, \"\\n        Below you can see all likes / dislikes that have been given for this product of each individual user. You will also find the email address of the user who has liked there. You can also contact them if you have any questions about the decision.\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\");\n      i0.ɵɵelement(9, \"hr\");\n      i0.ɵɵtext(10, \"\\n  \");\n      i0.ɵɵelementStart(11, \"jhi-admin-comment-box\", 3);\n      i0.ɵɵlistener(\"deleted\", function CommentsComponent_Template_jhi_admin_comment_box_deleted_11_listener($event) {\n        return ctx.onDelete($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n  \");\n      i0.ɵɵelement(13, \"hr\");\n      i0.ɵɵtext(14, \"\\n  \");\n      i0.ɵɵelement(15, \"jhi-admin-comments-event\", 4);\n      i0.ɵɵtext(16, \"\\n\\n  \");\n      i0.ɵɵelementStart(17, \"div\", 5);\n      i0.ɵɵtext(18, \"\\n    \");\n      i0.ɵɵelementStart(19, \"div\", 6);\n      i0.ɵɵtext(20, \"\\n        \");\n      i0.ɵɵelement(21, \"hr\");\n      i0.ɵɵtext(22, \"\\n        \");\n      i0.ɵɵelementStart(23, \"div\", 7);\n      i0.ɵɵtext(24, \"\\n            \");\n      i0.ɵɵelementStart(25, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function CommentsComponent_Template_button_click_25_listener() {\n        return ctx.previousState();\n      });\n      i0.ɵɵtext(26, \"\\n              \");\n      i0.ɵɵelement(27, \"fa-icon\", 9);\n      i0.ɵɵtext(28, \"\\u00A0\");\n      i0.ɵɵelementStart(29, \"span\", 10);\n      i0.ɵɵtext(30, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"comments\", ctx.comments);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"jhiEvent\", ctx.jhiEvent);\n    }\n  },\n  dependencies: [i5.FaIconComponent, i6.TranslateDirective, i7.AdminCommentBoxComponent, i8.AdminCommentsEventComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));","map":{"version":3,"mappings":";;;;;;;;;;AAeA,OAAM,MAAOA,iBAAiB;EAS5BC,YACUC,YAA0B,EAC1BC,KAAqB,EACrBC,cAA8B,EAC9BC,mBAAwC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA,+BATnC,EAAE;IAAA,kCACC,EAAE;IAAA,kCACF,EAAE;IAAA;IAIV,iBAAY,GAAZH,YAAY;IACZ,UAAK,GAALC,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;EAC1B;EAGHC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAO,CAACC,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MAC3C,IAAI,CAACE,OAAO,GAAGF,MAAM,CAAC,SAAS,CAAC;MAEhC,IAAI,CAACN,YAAY,CAACS,IAAI,CAAC,IAAI,CAACD,OAAO,CAAC,CAACD,SAAS,CAACG,EAAE,IAAG;QAClD,IAAI,CAACC,QAAQ,GAAGD,EAAE,CAACE,IAAK;QAExB,IAAI,CAACV,cAAc,CAACW,oBAAoB,EAAE,CAACN,SAAS,CAACO,IAAI,IAAG;UAC1D,IAAI,CAACA,IAAI,GAAGA,IAAI,CAACF,IAAK;UAEtB,IAAI,CAACV,cAAc,CAACa,yBAAyB,CAAC,IAAI,CAACJ,QAAQ,CAACK,EAAG,CAAC,CAACT,SAAS,CAACU,GAAG,IAAG;YAC/E,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACL,IAAK;UAC3B,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAO,QAAQ,CAACH,EAAU;IACjB,IAAI,CAACb,mBAAmB,CAACiB,MAAM,CAACJ,EAAE,CAAC,CAACT,SAAS,CAAC,MAAK;MACjD,IAAI,CAACW,QAAQ,CAACG,OAAO,CAAEC,GAAkB,IAAI;QAC3C,MAAMC,CAAC,GAAGD,GAAG,CAACE,aAAa,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;QACvD,IAAGO,CAAC,GAAG,CAAC,CAAC,EAAE;UACTD,GAAG,CAACE,aAAa,CAACG,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;;MAElC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAK,aAAa;IACXC,MAAM,CAACC,OAAO,CAACC,IAAI,EAAE;EACvB;;gBAhDWjC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAA,gBAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf9BC,8BAA2C;MACvCA;MAAAA,6BAA2D;MAAAA,mDAAmC;MAAAA,iBAAK;MACnGA;MAAAA,4BAAyD;MACrDA,mRACJ;MAAAA,iBAAI;MACRA;MAAAA,iBAAM;MACNA;MAAAA,qBAAK;MACHA;MAAAA,iDAA0E;MAA7BA;QAAA,OAAWC,oBAAgB;MAAA,EAAC;MAACD,iBAAwB;MAClGA;MAAAA,sBAAK;MACLA;MAAAA,+CAA2E;MAE3EA;MAAAA,+BAAiB;MACfA;MAAAA,+BAAuB;MACnBA;MAAAA,sBAAK;MACLA;MAAAA,+BAAwB;MACpBA;MAAAA,kCAAsG;MAA1BA;QAAA,OAASC,mBAAe;MAAA,EAAC;MACnGD;MAAAA,8BAA8B;MAAAA,uBAAM;MAAAA,iCAA0C;MAAAA,uBAAM;MAAAA,iBAAO;MAC/FA;MAAAA,iBAAS;MACXA;MAAAA,iBAAM;MACVA;MAAAA,iBAAM;MACVA;MAAAA,iBAAM;MACNA;;;MAdyBA,gBAAqB;MAArBA,uCAAqB;MAElBA,eAAqB;MAArBA,uCAAqB","names":["CommentsComponent","constructor","eventService","route","generalService","eventCommentService","ngOnInit","parent","params","subscribe","eventId","find","ev","jhiEvent","body","findWidthAuthorities","user","findEventCommentByEventId","id","res","comments","onDelete","delete","forEach","ele","z","eventComments","findIndex","e","splice","previousState","window","history","back","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/event/dashboard-event/comments/comments.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/event/dashboard-event/comments/comments.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { IEventComment } from \"app/entities/event-comment/event-comment.model\";\nimport { EventCommentService } from \"app/entities/event-comment/service/event-comment.service\";\nimport { IEvent } from \"app/entities/event/event.model\";\nimport { EventService } from \"app/entities/event/service/event.service\";\nimport { IUser } from \"app/entities/user/user.model\";\nimport { GeneralService } from \"app/general.service\";\n\n\n@Component({\n  selector: 'jhi-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnInit {\n  eventId!: number;\n  jhiEvent!: IEvent;\n  user!: IUser;\n  likes: any[] = [];\n  dislikes: any[] = [];\n  comments: any[] = [];\n  commentsProductComment!: IEventComment[];\n\n  constructor(\n    private eventService: EventService,\n    private route: ActivatedRoute,\n    private generalService: GeneralService,\n    private eventCommentService: EventCommentService,\n  ) {}\n\n\n  ngOnInit(): void {\n    this.route.parent!.params.subscribe(params => {\n      this.eventId = params['eventId'];\n\n      this.eventService.find(this.eventId).subscribe(ev => {\n        this.jhiEvent = ev.body!;\n\n        this.generalService.findWidthAuthorities().subscribe(user => {\n          this.user = user.body!;\n\n          this.generalService.findEventCommentByEventId(this.jhiEvent.id!).subscribe(res => {\n            this.comments = res.body!;\n          });\n        });\n      });\n    });\n  }\n\n  onDelete(id: number): void {\n    this.eventCommentService.delete(id).subscribe(() => {\n      this.comments.forEach((ele: IEventComment) => {\n        const z = ele.eventComments.findIndex(e => e.id === id);\n        if(z > -1) {\n          ele.eventComments.splice(z, 1);\n        }\n      });\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n}\n","<div class=\"alert alert-info\" role=\"alert\">\n    <h2 jhiTranslate=\"dashboard-event.comments-feedback-title\">Comments and feedback to this event</h2>\n    <p jhiTranslate=\"dashboard-event.comments-feedback-info\">\n        Below you can see all likes / dislikes that have been given for this product of each individual user. You will also find the email address of the user who has liked there. You can also contact them if you have any questions about the decision.\n    </p>\n</div>\n<hr/>\n  <jhi-admin-comment-box [comments]=\"comments\" (deleted)=\"onDelete($event)\"></jhi-admin-comment-box>\n  <hr/>\n  <jhi-admin-comments-event [jhiEvent]=\"jhiEvent\"></jhi-admin-comments-event>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n        <hr/>\n        <div class=\"btn-cancel\">\n            <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary btn-cancel\" (click)=\"previousState()\">\n              <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n          </button>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}