{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { EventWithContent } from 'app/core/util/event-manager.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/util/event-manager.service\";\nexport let ErrorHandlerInterceptor = /*#__PURE__*/(() => {\n  class ErrorHandlerInterceptor {\n    constructor(eventManager) {\n      this.eventManager = eventManager;\n    }\n    intercept(request, next) {\n      return next.handle(request).pipe(tap({\n        error: err => {\n          if (!(err.status === 401 && (err.message === '' || err.url?.includes('api/account')))) {\n            this.eventManager.broadcast(new EventWithContent('createyoureventApp.httpError', err));\n          }\n        }\n      }));\n    }\n  }\n  ErrorHandlerInterceptor.ɵfac = function ErrorHandlerInterceptor_Factory(t) {\n    return new (t || ErrorHandlerInterceptor)(i0.ɵɵinject(i1.EventManager));\n  };\n  ErrorHandlerInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorHandlerInterceptor,\n    factory: ErrorHandlerInterceptor.ɵfac\n  });\n  return ErrorHandlerInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}