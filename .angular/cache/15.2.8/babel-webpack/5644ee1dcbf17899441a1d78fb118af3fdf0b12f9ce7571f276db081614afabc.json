{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/organisator/organisator.service\";\nexport class TotalTicketsPipe {\n  constructor(generalService, organisatorService) {\n    this.generalService = generalService;\n    this.organisatorService = organisatorService;\n  }\n  transform(eventId, args) {\n    return new Promise((resolve, reject) => {\n      this.generalService.findEventById(eventId).subscribe(e => {\n        this.organisatorService.findReservationsByEventId(e.body.id).subscribe(r => {\n          const element = e.body;\n          element.reservations = r.body;\n          if (element.reservations === null) {\n            element.reservations = [];\n          }\n          let total = 0;\n          element.reservations.forEach(res => {\n            total += res.ticket.amount;\n          });\n          resolve(total);\n        });\n      });\n    });\n  }\n}\nTotalTicketsPipe.ɵfac = function TotalTicketsPipe_Factory(t) {\n  return new (t || TotalTicketsPipe)(i0.ɵɵdirectiveInject(i1.GeneralService, 16), i0.ɵɵdirectiveInject(i2.OrganisatorService, 16));\n};\nTotalTicketsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"totalTickets\",\n  type: TotalTicketsPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,cAA8B,EAAUC,kBAAsC;IAA9E,mBAAc,GAAdD,cAAc;IAA0B,uBAAkB,GAAlBC,kBAAkB;EAAuB;EAErGC,SAAS,CAACC,OAAe,EAAEC,IAAU;IACnC,OAAO,IAAIC,OAAO,CAAM,CAACC,OAAO,EAAEC,MAAM,KAAI;MAC1C,IAAI,CAACP,cAAc,CAACQ,aAAa,CAACL,OAAO,CAAC,CAACM,SAAS,CAACC,CAAC,IAAG;QACvD,IAAI,CAACT,kBAAkB,CAACU,yBAAyB,CAACD,CAAC,CAACE,IAAI,CAACC,EAAE,CAAC,CAACJ,SAAS,CAACK,CAAC,IAAG;UAEzE,MAAMC,OAAO,GAAGL,CAAC,CAACE,IAAI;UACtBG,OAAO,CAACC,YAAY,GAAGF,CAAC,CAACF,IAAI;UAE7B,IAAGG,OAAO,CAACC,YAAY,KAAK,IAAI,EAAE;YAChCD,OAAO,CAACC,YAAY,GAAG,EAAE;;UAE3B,IAAIC,KAAK,GAAG,CAAC;UACbF,OAAO,CAACC,YAAY,CAACE,OAAO,CAACC,GAAG,IAAG;YACjCF,KAAK,IAAIE,GAAG,CAACC,MAAM,CAACC,MAAM;UAC5B,CAAC,CAAC;UACFf,OAAO,CAACW,KAAK,CAAC;QAChB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;;mBAvBWnB,gBAAgB;AAAA;;;QAAhBA,gBAAgB;EAAAwB;AAAA","names":["TotalTicketsPipe","constructor","generalService","organisatorService","transform","eventId","args","Promise","resolve","reject","findEventById","subscribe","e","findReservationsByEventId","body","id","r","element","reservations","total","forEach","res","ticket","amount","pure"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/pipes/totalTickets.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { GeneralService } from 'app/general.service';\nimport { OrganisatorService } from 'app/organisator/organisator.service';\n\n@Pipe({\n  name: 'totalTickets'\n})\nexport class TotalTicketsPipe implements PipeTransform {\n\n  constructor(private generalService: GeneralService, private organisatorService: OrganisatorService) {}\n\n  transform(eventId: number, args?: any): any {\n    return new Promise<any>((resolve, reject) => {\n      this.generalService.findEventById(eventId).subscribe(e => {\n        this.organisatorService.findReservationsByEventId(e.body.id).subscribe(r => {\n\n          const element = e.body;\n          element.reservations = r.body;\n\n          if(element.reservations === null) {\n            element.reservations = [];\n          }\n          let total = 0;\n          element.reservations.forEach(res => {\n            total += res.ticket.amount;\n          });\n          resolve(total);\n        });\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}