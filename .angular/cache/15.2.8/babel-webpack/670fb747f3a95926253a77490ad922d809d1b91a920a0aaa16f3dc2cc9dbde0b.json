{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Product } from \"app/entities/product/product.model\";\nimport { JhiResolvePagingParams } from \"ng-jhipster\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { DashboardOrganisatorComponent } from \"./dashboard_organisator.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/product/service/product.service\";\nimport * as i2 from \"@angular/router\";\nexport class ProductIdResolve {\n  constructor(service, router) {\n    _defineProperty(this, \"service\", void 0);\n    _defineProperty(this, \"router\", void 0);\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['productId'];\n    if (id) {\n      return this.service.find(id).pipe(flatMap(product => {\n        if (product.body) {\n          return of(product.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new Product());\n  }\n}\n_defineProperty(ProductIdResolve, \"\\u0275fac\", function ProductIdResolve_Factory(t) {\n  return new (t || ProductIdResolve)(i0.ɵɵinject(i1.ProductService), i0.ɵɵinject(i2.Router));\n});\n_defineProperty(ProductIdResolve, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductIdResolve,\n  factory: ProductIdResolve.ɵfac,\n  providedIn: 'root'\n}));\nexport const DashboardRoute = [{\n  path: '',\n  component: DashboardOrganisatorComponent,\n  resolve: {\n    pagingParams: JhiResolvePagingParams\n  },\n  data: {\n    pageTitle: 'routes.title.dashboard.organisator'\n  }\n}];","map":{"version":3,"mappings":";AAGA,SAAmBA,OAAO,QAAQ,oCAAoC;AAEtE,SAASC,sBAAsB,QAAQ,aAAa;AACpD,SAAqBC,EAAE,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,6BAA6B,QAAQ,mCAAmC;;;;AAGjF,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,OAAuB,EAAUC,MAAc;IAAA;IAAA;IAA/C,YAAO,GAAPD,OAAO;IAA0B,WAAM,GAANC,MAAM;EAAW;EAEtEC,OAAO,CAACC,KAA6B;IACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAAC,WAAW,CAAC;IACpC,IAAID,EAAE,EAAE;MACN,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAACF,EAAE,CAAC,CAACG,IAAI,CAC/BX,OAAO,CAAEY,OAA8B,IAAI;QACzC,IAAIA,OAAO,CAACC,IAAI,EAAE;UAChB,OAAOf,EAAE,CAACc,OAAO,CAACC,IAAI,CAAC;SACxB,MAAM;UACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAOf,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAEH,OAAOD,EAAE,CAAC,IAAIF,OAAO,EAAE,CAAC;EAC1B;;gBAlBWM,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAA,gBAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAa,SAAhBb,gBAAgB;EAAAc,YADH;AAAM;AAsBhC,OAAO,MAAMC,cAAc,GAAW,CACpC;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAElB,6BAA6B;EACxCK,OAAO,EAAE;IACPc,YAAY,EAAEvB;GACf;EACDwB,IAAI,EAAE;IACJC,SAAS,EAAE;;CAEd,CACF","names":["Product","JhiResolvePagingParams","of","EMPTY","flatMap","DashboardOrganisatorComponent","ProductIdResolve","constructor","service","router","resolve","route","id","params","find","pipe","product","body","navigate","factory","providedIn","DashboardRoute","path","component","pagingParams","data","pageTitle"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/dashboard_organisator/dashboard_organisator.route.ts"],"sourcesContent":["import { HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRouteSnapshot, Routes } from \"@angular/router\";\nimport { IProduct, Product } from \"app/entities/product/product.model\";\nimport { ProductService } from \"app/entities/product/service/product.service\";\nimport { JhiResolvePagingParams } from \"ng-jhipster\";\nimport { Observable, of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { DashboardOrganisatorComponent } from \"./dashboard_organisator.component\";\n\n@Injectable({ providedIn: 'root' })\nexport class ProductIdResolve implements Resolve<IProduct> {\n  constructor(private service: ProductService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IProduct> | Observable<never> {\n    const id = route.params['productId'];\n    if (id) {\n      return this.service.find(id).pipe(\n        flatMap((product: HttpResponse<Product>) => {\n          if (product.body) {\n            return of(product.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Product());\n  }\n}\n\nexport const DashboardRoute: Routes = [\n  {\n    path: '',\n    component: DashboardOrganisatorComponent,\n    resolve: {\n      pagingParams: JhiResolvePagingParams\n    },\n    data: {\n      pageTitle: 'routes.title.dashboard.organisator'\n    }\n  }\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}