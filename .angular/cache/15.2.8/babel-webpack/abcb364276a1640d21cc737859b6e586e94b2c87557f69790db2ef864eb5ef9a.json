{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Validators } from '@angular/forms';\nimport { LANGUAGES } from 'app/config/language.constants';\nimport { ADDRESS_REGEX } from 'app/constants';\nimport { ibanValidator } from 'ngx-iban';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/general.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/language/translate.directive\";\nimport * as i5 from \"../../shared/alert/alert-error.component\";\nimport * as i6 from \"ngx-google-places-autocomplete\";\nimport * as i7 from \"@ngx-translate/core\";\nconst _c0 = function (a0) {\n  return {\n    username: a0\n  };\n};\nfunction SettingsComponent_h2_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 9);\n    i0.ɵɵtext(1, \"User settings for [\");\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"]\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.user.login));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.user.login);\n  }\n}\nfunction SettingsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Settings saved!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_13_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n                            Address1 is required.\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_13_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 31);\n    i0.ɵɵtext(1, \"\\n                            Address-pattern wrong\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtemplate(2, SettingsComponent_form_18_div_13_small_2_Template, 2, 0, \"small\", 28);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵtemplate(4, SettingsComponent_form_18_div_13_small_4_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.settingsForm.get(\"address\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.settingsForm.get(\"address\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern);\n  }\n}\nfunction SettingsComponent_form_18_div_24_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 33);\n    i0.ɵɵtext(1, \"\\n                            Phone is required.\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtemplate(2, SettingsComponent_form_18_div_24_small_2_Template, 2, 0, \"small\", 32);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.settingsForm.get(\"phone\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction SettingsComponent_form_18_div_40_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 38);\n    i0.ɵɵtext(1, \"\\n                        IBAN is required.\\n                      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_40_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 39);\n    i0.ɵɵtext(1, \"\\n                        IBAN is invalid\\n                      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_40_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"\\n                        IBAN is valid.\\n                      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"\\n\\n                      \");\n    i0.ɵɵtemplate(2, SettingsComponent_form_18_div_40_small_2_Template, 2, 0, \"small\", 35);\n    i0.ɵɵtext(3, \"\\n                      \");\n    i0.ɵɵtemplate(4, SettingsComponent_form_18_div_40_small_4_Template, 2, 0, \"small\", 36);\n    i0.ɵɵtext(5, \"\\n\\n                      \");\n    i0.ɵɵtemplate(6, SettingsComponent_form_18_div_40_small_6_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtext(7, \"\\n\\n                  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.settingsForm.get(\"iban\")) == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r5.settingsForm.get(\"iban\")) == null ? null : tmp_1_0.errors.iban);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r5.settingsForm.get(\"iban\")) == null ? null : tmp_2_0.valid) && (((tmp_2_0 = ctx_r5.settingsForm.get(\"iban\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx_r5.settingsForm.get(\"iban\")) == null ? null : tmp_2_0.touched)));\n  }\n}\nfunction SettingsComponent_form_18_div_51_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"\\n                        Bankname is required.\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵtemplate(2, SettingsComponent_form_18_div_51_small_2_Template, 2, 0, \"small\", 41);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.settingsForm.get(\"bankname\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction SettingsComponent_form_18_div_65_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n                        Address1 is required.\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_65_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 31);\n    i0.ɵɵtext(1, \"\\n                        Address-pattern wrong\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_form_18_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵtemplate(2, SettingsComponent_form_18_div_65_small_2_Template, 2, 0, \"small\", 28);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵtemplate(4, SettingsComponent_form_18_div_65_small_4_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.settingsForm.get(\"bankaddress\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.settingsForm.get(\"bankaddress\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.pattern);\n  }\n}\nfunction SettingsComponent_form_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_form_18_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.save());\n    });\n    i0.ɵɵtext(1, \"\\n\\n\\n                \");\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵelementStart(4, \"label\", 13);\n    i0.ɵɵtext(5, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵelementStart(7, \"input\", 14);\n    i0.ɵɵlistener(\"onAddressChange\", function SettingsComponent_form_18_Template_input_onAddressChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.addressChange($event));\n    });\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                    \");\n    i0.ɵɵelementStart(10, \"small\", 15);\n    i0.ɵɵtext(11, \"\\n                    Please enter the address in the following format: '(street house-number, zip-code city, country)'. Example: (Musterstrasse 165, 8200 Schaffhausen, Switzerland)\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵtemplate(13, SettingsComponent_form_18_div_13_Template, 6, 2, \"div\", 16);\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n\\n                \");\n    i0.ɵɵelementStart(16, \"div\", 12);\n    i0.ɵɵtext(17, \"\\n                    \");\n    i0.ɵɵelementStart(18, \"label\", 17);\n    i0.ɵɵtext(19, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵelement(21, \"input\", 18);\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵtext(23, \"\\n\\n                    \");\n    i0.ɵɵtemplate(24, SettingsComponent_form_18_div_24_Template, 4, 1, \"div\", 16);\n    i0.ɵɵtext(25, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n\\n                \");\n    i0.ɵɵelementStart(27, \"div\", 19);\n    i0.ɵɵtext(28, \"\\n                  \");\n    i0.ɵɵelementStart(29, \"h2\", 20);\n    i0.ɵɵtext(30, \"Banking informations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n\\n                \");\n    i0.ɵɵelementStart(32, \"div\", 12);\n    i0.ɵɵtext(33, \"\\n                  \");\n    i0.ɵɵelementStart(34, \"label\", 21);\n    i0.ɵɵtext(35, \"IBAN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                  \");\n    i0.ɵɵelement(37, \"input\", 22);\n    i0.ɵɵpipe(38, \"translate\");\n    i0.ɵɵtext(39, \"\\n                      \");\n    i0.ɵɵtemplate(40, SettingsComponent_form_18_div_40_Template, 8, 3, \"div\", 23);\n    i0.ɵɵtext(41, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n\\n\\n              \");\n    i0.ɵɵelementStart(43, \"div\", 12);\n    i0.ɵɵtext(44, \"\\n                \");\n    i0.ɵɵelementStart(45, \"label\", 24);\n    i0.ɵɵtext(46, \"Bankname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                \");\n    i0.ɵɵelement(48, \"input\", 25);\n    i0.ɵɵpipe(49, \"translate\");\n    i0.ɵɵtext(50, \"\\n\\n                \");\n    i0.ɵɵtemplate(51, SettingsComponent_form_18_div_51_Template, 4, 1, \"div\", 16);\n    i0.ɵɵtext(52, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(53, \"\\n\\n\\n\\n              \");\n    i0.ɵɵelementStart(54, \"div\", 12);\n    i0.ɵɵtext(55, \"\\n                \");\n    i0.ɵɵelementStart(56, \"label\", 13);\n    i0.ɵɵtext(57, \"Bankaddress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(58, \"\\n                \");\n    i0.ɵɵelementStart(59, \"input\", 26);\n    i0.ɵɵlistener(\"onAddressChange\", function SettingsComponent_form_18_Template_input_onAddressChange_59_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.bankaddressChange($event));\n    });\n    i0.ɵɵpipe(60, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(61, \"\\n\\n                \");\n    i0.ɵɵelementStart(62, \"small\", 15);\n    i0.ɵɵtext(63, \"\\n                Please enter the address in the following format: '(street house-number, zip-code city, country)'. Example: (Musterstrasse 165, 8200 Schaffhausen, Switzerland)\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(64, \"\\n                \");\n    i0.ɵɵtemplate(65, SettingsComponent_form_18_div_65_Template, 6, 2, \"div\", 16);\n    i0.ɵɵtext(66, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(67, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(68, \"\\n\\n                \");\n    i0.ɵɵelementStart(69, \"button\", 27);\n    i0.ɵɵtext(70, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(71, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_6_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.settingsForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(8, 12, \"settings.form.address.placeholder\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"address\").invalid && (ctx_r2.settingsForm.get(\"address\").dirty || ctx_r2.settingsForm.get(\"address\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(22, 14, \"settings-cye.phone\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"phone\").invalid && (ctx_r2.settingsForm.get(\"phone\").dirty || ctx_r2.settingsForm.get(\"phone\").touched));\n    i0.ɵɵadvance(13);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(38, 16, \"settings-cye.iban\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r2.settingsForm.get(\"iban\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx_r2.settingsForm.get(\"iban\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx_r2.settingsForm.get(\"iban\")) == null ? null : tmp_6_0.touched)));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(49, 18, \"settings-cye.bankname\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"bankname\").invalid && (ctx_r2.settingsForm.get(\"bankname\").dirty || ctx_r2.settingsForm.get(\"bankname\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(60, 20, \"settings-cye.bankaddress\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"bankaddress\").invalid && (ctx_r2.settingsForm.get(\"bankaddress\").dirty || ctx_r2.settingsForm.get(\"bankaddress\").touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.settingsForm.invalid);\n  }\n}\nexport class SettingsComponent {\n  constructor(fb, generalService) {\n    _defineProperty(this, \"fb\", void 0);\n    _defineProperty(this, \"generalService\", void 0);\n    _defineProperty(this, \"success\", false);\n    _defineProperty(this, \"languages\", LANGUAGES);\n    _defineProperty(this, \"formatedAddress\", '');\n    _defineProperty(this, \"user\", void 0);\n    _defineProperty(this, \"settingsForm\", this.fb.group({\n      address: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(250), Validators.pattern(ADDRESS_REGEX)]],\n      phone: [undefined, [Validators.required]],\n      iban: [undefined, [Validators.required, ibanValidator()]],\n      bankname: [undefined, [Validators.required]],\n      bankaddress: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(250), Validators.pattern(ADDRESS_REGEX)]]\n    }));\n    this.fb = fb;\n    this.generalService = generalService;\n  }\n  ngOnInit() {\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body;\n      this.generalService.findWidthAuthoritiesWidthId(this.user.id).subscribe(r => {\n        this.user = r.body;\n        if (this.user) {\n          this.settingsForm.patchValue({\n            address: this.user.address,\n            phone: this.user.phone,\n            iban: this.user.iban,\n            bankname: this.user.bankname,\n            bankaddress: this.user.bankaddress\n          });\n        }\n      });\n    });\n  }\n  addressChange(address) {\n    this.settingsForm.patchValue({\n      address: address.formatted_address\n    });\n  }\n  bankaddressChange(address) {\n    this.settingsForm.patchValue({\n      bankaddress: address.formatted_address\n    });\n  }\n  save() {\n    this.success = false;\n    this.generalService.findWidthAuthorities().subscribe(usr => {\n      const user = usr.body;\n      user.address = this.settingsForm.get('address').value;\n      user.phone = this.settingsForm.get('phone').value;\n      user.iban = this.settingsForm.get('iban').value;\n      user.bankname = this.settingsForm.get('bankname').value;\n      user.bankaddress = this.settingsForm.get('bankaddress').value;\n      this.generalService.updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser(user.id, user.address, user.phone, user.iban, user.bankname, user.bankaddress).subscribe(() => {\n        this.success = true;\n      });\n    });\n  }\n}\n_defineProperty(SettingsComponent, \"\\u0275fac\", function SettingsComponent_Factory(t) {\n  return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.GeneralService));\n});\n_defineProperty(SettingsComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SettingsComponent,\n  selectors: [[\"jhi-settings\"]],\n  decls: 30,\n  vars: 3,\n  consts: [[1, \"row\", \"justify-content-center\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [\"jhiTranslate\", \"cye-settings.info\"], [1, \"col-md-8\"], [\"jhiTranslate\", \"settings.title\", 3, \"translateValues\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", \"jhiTranslate\", \"settings.messages.success\", 4, \"ngIf\"], [\"name\", \"form\", \"role\", \"form\", \"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [2, \"text-align\", \"center\"], [\"src\", \"../../../content/images/ssl_https.png\"], [\"jhiTranslate\", \"settings.title\", 3, \"translateValues\"], [\"jhiTranslate\", \"settings.messages.success\", 1, \"alert\", \"alert-success\"], [\"name\", \"form\", \"role\", \"form\", \"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"address\", \"jhiTranslate\", \"fieldnames.address\", 1, \"form-control-label\"], [\"ngx-google-places-autocomplete\", \"\", \"autocomplete\", \"off\", \"list\", \"autocompleteOff\", \"type\", \"text\", \"id\", \"address\", \"name\", \"address\", \"formControlName\", \"address\", 1, \"form-control\", 3, \"placeholder\", \"onAddressChange\"], [\"jhiTranslate\", \"fieldnames.address.info\", 1, \"form-text\"], [4, \"ngIf\"], [\"for\", \"phone\", \"jhiTranslate\", \"settings-cye.phone\", 1, \"form-control-label\"], [\"type\", \"text\", \"id\", \"phone\", \"autocomplete\", \"off\", \"list\", \"autocompleteOff\", \"name\", \"phone\", \"formControlName\", \"phone\", 1, \"form-control\", 3, \"placeholder\"], [1, \"bank-info\", \"box_green\"], [\"jhiTranslate\", \"settings-cye.bank-infos\"], [\"for\", \"iban\", \"jhiTranslate\", \"settings-cye.iban\", 1, \"form-control-label\"], [\"type\", \"text\", \"id\", \"iban\", \"autocomplete\", \"off\", \"list\", \"autocompleteOff\", \"name\", \"iban\", \"formControlName\", \"iban\", 1, \"form-control\", 3, \"placeholder\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"bankname\", \"jhiTranslate\", \"settings-cye.bankname\", 1, \"form-control-label\"], [\"type\", \"text\", \"id\", \"bankname\", \"autocomplete\", \"off\", \"list\", \"autocompleteOff\", \"name\", \"bankname\", \"formControlName\", \"bankname\", 1, \"form-control\", 3, \"placeholder\"], [\"ngx-google-places-autocomplete\", \"\", \"autocomplete\", \"off\", \"list\", \"autocompleteOff\", \"type\", \"text\", \"id\", \"bankaddress\", \"name\", \"bankaddress\", \"formControlName\", \"bankaddress\", 1, \"form-control\", 3, \"placeholder\", \"onAddressChange\"], [\"type\", \"submit\", \"jhiTranslate\", \"settings.form.button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"settings.messages.validate.address.required\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"settings.messages.validate.address.pattern\", 4, \"ngIf\"], [\"jhiTranslate\", \"settings.messages.validate.address.required\", 1, \"form-text\", \"text-danger\"], [\"jhiTranslate\", \"settings.messages.validate.address.pattern\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"settings-cye.phone-required\", 4, \"ngIf\"], [\"jhiTranslate\", \"settings-cye.phone-required\", 1, \"form-text\", \"text-danger\"], [1, \"alert\", \"alert-danger\"], [\"jhiTranslate\", \"settings-cye.iban-required\", 4, \"ngIf\"], [\"jhiTranslate\", \"settings-cye.iban-invalid\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"jhiTranslate\", \"settings-cye.iban-valid\", 4, \"ngIf\"], [\"jhiTranslate\", \"settings-cye.iban-required\"], [\"jhiTranslate\", \"settings-cye.iban-invalid\"], [\"jhiTranslate\", \"settings-cye.iban-valid\", 1, \"alert\", \"alert-danger\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"settings-cye.bankname-required\", 4, \"ngIf\"], [\"jhiTranslate\", \"settings-cye.bankname-required\", 1, \"form-text\", \"text-danger\"]],\n  template: function SettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"\\n\\n        \");\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵtext(7, \"\\n                Please fill out the form below completely. We will not pass the data on to third parties, nor will we misuse them for marketing purposes.\\n\\n                However, our platform needs all the information to guarantee you a perfect surfing experience and all functions to do their job. We hope you can understand.\\n\\n                Sincerely yours\\n                Your www.createyourevent.org team with all users\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n\\n        \");\n      i0.ɵɵelementStart(10, \"div\", 3);\n      i0.ɵɵtext(11, \"\\n            \");\n      i0.ɵɵtemplate(12, SettingsComponent_h2_12_Template, 5, 4, \"h2\", 4);\n      i0.ɵɵtext(13, \"\\n\\n            \");\n      i0.ɵɵtemplate(14, SettingsComponent_div_14_Template, 5, 0, \"div\", 5);\n      i0.ɵɵtext(15, \"\\n\\n            \");\n      i0.ɵɵelement(16, \"jhi-alert-error\");\n      i0.ɵɵtext(17, \"\\n\\n            \");\n      i0.ɵɵtemplate(18, SettingsComponent_form_18_Template, 72, 22, \"form\", 6);\n      i0.ɵɵtext(19, \"\\n            \");\n      i0.ɵɵelement(20, \"hr\");\n      i0.ɵɵtext(21, \"\\n            \");\n      i0.ɵɵelementStart(22, \"div\", 7);\n      i0.ɵɵtext(23, \"\\n              \");\n      i0.ɵɵelement(24, \"img\", 8);\n      i0.ɵɵtext(25, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.success);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i3.NgIf, i1.FormGroupDirective, i1.FormControlName, i4.TranslateDirective, i5.AlertErrorComponent, i6.GooglePlaceDirective, i7.TranslatePipe],\n  encapsulation: 2\n}));","map":{"version":3,"mappings":"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","names":["Validators","LANGUAGES","ADDRESS_REGEX","ibanValidator","i0","SettingsComponent","constructor","fb","generalService","group","address","undefined","required","minLength","maxLength","pattern","phone","iban","bankname","bankaddress","ngOnInit","findWidthAuthorities","subscribe","u","user","body","findWidthAuthoritiesWidthId","id","r","settingsForm","patchValue","addressChange","formatted_address","bankaddressChange","save","success","usr","get","value","updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/account/settings/settings.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/account/settings/settings.component.html"],"sourcesContent":["import { UserService } from './../../entities/user/user.service';\n\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Validators, UntypedFormBuilder } from '@angular/forms';\nimport { LANGUAGES } from 'app/config/language.constants';\nimport { ADDRESS_REGEX } from 'app/constants';\nimport { GeneralService } from 'app/general.service';\nimport { IUser } from 'app/entities/user/user.model';\nimport { ibanValidator } from 'ngx-iban';\n\n@Component({\n  selector: 'jhi-settings',\n  templateUrl: './settings.component.html',\n})\nexport class SettingsComponent implements OnInit {\n  success = false;\n  languages = LANGUAGES;\n  formatedAddress = '';\n  user!: IUser;\n\n  settingsForm = this.fb.group({\n    address: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(250), Validators.pattern(ADDRESS_REGEX)]],\n    phone: [undefined, [Validators.required]],\n    iban: [undefined, [Validators.required, ibanValidator()]],\n    bankname: [undefined, [Validators.required]],\n    bankaddress: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(250), Validators.pattern(ADDRESS_REGEX)]],\n  });\n\n  constructor(private fb: UntypedFormBuilder, private generalService: GeneralService) {}\n\n  ngOnInit(): void {\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body;\n      this.generalService.findWidthAuthoritiesWidthId(this.user.id).subscribe(r => {\n        this.user = r.body;\n        if (this.user) {\n          this.settingsForm.patchValue({\n            address: this.user.address,\n            phone: this.user.phone,\n            iban: this.user.iban,\n            bankname: this.user.bankname,\n            bankaddress: this.user.bankaddress,\n          });\n        }\n      });\n    });\n  }\n\n  public addressChange(address: any): void {\n    this.settingsForm.patchValue({ address: address.formatted_address });\n  }\n\n  public bankaddressChange(address: any): void {\n    this.settingsForm.patchValue({ bankaddress: address.formatted_address });\n  }\n\n  save(): void {\n    this.success = false;\n    this.generalService.findWidthAuthorities().subscribe(usr => {\n      const user = usr.body!;\n      user.address = this.settingsForm.get('address')!.value;\n      user.phone = this.settingsForm.get('phone')!.value;\n      user.iban = this.settingsForm.get('iban')!.value;\n      user.bankname = this.settingsForm.get('bankname')!.value;\n      user.bankaddress = this.settingsForm.get('bankaddress')!.value;\n      this.generalService\n        .updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser(\n          user.id,\n          user.address,\n          user.phone,\n          user.iban,\n          user.bankname,\n          user.bankaddress\n        )\n        .subscribe(() => {\n          this.success = true;\n        });\n    });\n  }\n}\n","<div>\n    <div class=\"row justify-content-center\">\n\n        <div class=\"alert alert-info\" role=\"alert\">\n            <div jhiTranslate=\"cye-settings.info\">\n                Please fill out the form below completely. We will not pass the data on to third parties, nor will we misuse them for marketing purposes.\n\n                However, our platform needs all the information to guarantee you a perfect surfing experience and all functions to do their job. We hope you can understand.\n\n                Sincerely yours\n                Your www.createyourevent.org team with all users\n            </div>\n          </div>\n\n        <div class=\"col-md-8\">\n            <h2 jhiTranslate=\"settings.title\" [translateValues]=\"{ username:user.login }\" *ngIf=\"user\">User settings for [<b>{{ user.login }}</b>]</h2>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"settings.messages.success\">\n                <strong>Settings saved!</strong>\n            </div>\n\n            <jhi-alert-error></jhi-alert-error>\n\n            <form name=\"form\" role=\"form\" autocomplete='off' (ngSubmit)=\"save()\"  [formGroup]=\"settingsForm\" *ngIf=\"user\" novalidate>\n\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"address\" jhiTranslate=\"fieldnames.address\">Address</label>\n                    <input ngx-google-places-autocomplete autocomplete=\"off\" list=\"autocompleteOff\"  type=\"text\" class=\"form-control\" id=\"address\" name=\"address\" placeholder=\"{{ 'settings.form.address.placeholder' | translate }}\"\n                           formControlName=\"address\" (onAddressChange)=\"addressChange($event)\">\n\n                    <small class=\"form-text\"\n                    jhiTranslate=\"fieldnames.address.info\">\n                    Please enter the address in the following format: '(street house-number, zip-code city, country)'. Example: (Musterstrasse 165, 8200 Schaffhausen, Switzerland)\n                    </small>\n                    <div *ngIf=\"settingsForm.get('address')!.invalid && (settingsForm.get('address')!.dirty || settingsForm.get('address')!.touched)\">\n                        <small class=\"form-text text-danger\"\n                               *ngIf=\"settingsForm.get('address')?.errors?.required\"\n                               jhiTranslate=\"settings.messages.validate.address.required\">\n                            Address1 is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                            *ngIf=\"settingsForm.get('address')?.errors?.pattern\"\n                            jhiTranslate=\"settings.messages.validate.address.pattern\">\n                            Address-pattern wrong\n                        </small>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"phone\" jhiTranslate=\"settings-cye.phone\">Phone</label>\n                    <input type=\"text\" class=\"form-control\" id=\"phone\" autocomplete=\"off\" list=\"autocompleteOff\"  name=\"phone\" placeholder=\"{{ 'settings-cye.phone' | translate }}\"\n                           formControlName=\"phone\">\n\n                    <div *ngIf=\"settingsForm.get('phone')!.invalid && (settingsForm.get('phone')!.dirty || settingsForm.get('phone')!.touched)\">\n                        <small class=\"form-text text-danger\"\n                               *ngIf=\"settingsForm.get('phone')?.errors?.required\"\n                               jhiTranslate=\"settings-cye.phone-required\">\n                            Phone is required.\n                        </small>\n                    </div>\n                </div>\n\n                <div class=\"bank-info box_green\">\n                  <h2 jhiTranslate=\"settings-cye.bank-infos\">Banking informations</h2>\n\n                <div class=\"form-group\">\n                  <label class=\"form-control-label\" for=\"iban\" jhiTranslate=\"settings-cye.iban\">IBAN</label>\n                  <input type=\"text\" class=\"form-control\" id=\"iban\" autocomplete=\"off\" list=\"autocompleteOff\"  name=\"iban\" placeholder=\"{{ 'settings-cye.iban' | translate }}\"\n                         formControlName=\"iban\">\n                      <div *ngIf=\"settingsForm.get('iban')?.invalid && (settingsForm.get('iban')?.dirty || settingsForm.get('iban')?.touched)\"\n                         class=\"alert alert-danger\">\n\n                      <small *ngIf=\"settingsForm.get('iban')?.errors.required\"\n                              jhiTranslate=\"settings-cye.iban-required\">\n                        IBAN is required.\n                      </small>\n                      <small *ngIf=\"settingsForm.get('iban')?.errors.iban\"\n                              jhiTranslate=\"settings-cye.iban-invalid\">\n                        IBAN is invalid\n                      </small>\n\n                      <small *ngIf=\"settingsForm.get('iban')?.valid && (settingsForm.get('iban')?.dirty || settingsForm.get('iban')?.touched)\"\n                          class=\"alert alert-danger\"\n                          jhiTranslate=\"settings-cye.iban-valid\">\n                        IBAN is valid.\n                      </small>\n\n                  </div>\n              </div>\n\n\n              <div class=\"form-group\">\n                <label class=\"form-control-label\" for=\"bankname\" jhiTranslate=\"settings-cye.bankname\">Bankname</label>\n                <input type=\"text\" class=\"form-control\" id=\"bankname\" autocomplete=\"off\" list=\"autocompleteOff\"  name=\"bankname\" placeholder=\"{{ 'settings-cye.bankname' | translate }}\"\n                       formControlName=\"bankname\">\n\n                <div *ngIf=\"settingsForm.get('bankname')!.invalid && (settingsForm.get('bankname')!.dirty || settingsForm.get('bankname')!.touched)\">\n                    <small class=\"form-text text-danger\"\n                           *ngIf=\"settingsForm.get('bankname')?.errors?.required\"\n                           jhiTranslate=\"settings-cye.bankname-required\">\n                        Bankname is required.\n                    </small>\n                </div>\n            </div>\n\n\n\n              <div class=\"form-group\">\n                <label class=\"form-control-label\" for=\"address\" jhiTranslate=\"fieldnames.address\">Bankaddress</label>\n                <input ngx-google-places-autocomplete autocomplete=\"off\" list=\"autocompleteOff\"  type=\"text\" class=\"form-control\" id=\"bankaddress\" name=\"bankaddress\" placeholder=\"{{ 'settings-cye.bankaddress' | translate }}\"\n                       formControlName=\"bankaddress\" (onAddressChange)=\"bankaddressChange($event)\">\n\n                <small class=\"form-text\"\n                jhiTranslate=\"fieldnames.address.info\">\n                Please enter the address in the following format: '(street house-number, zip-code city, country)'. Example: (Musterstrasse 165, 8200 Schaffhausen, Switzerland)\n                </small>\n                <div *ngIf=\"settingsForm.get('bankaddress')!.invalid && (settingsForm.get('bankaddress')!.dirty || settingsForm.get('bankaddress')!.touched)\">\n                    <small class=\"form-text text-danger\"\n                           *ngIf=\"settingsForm.get('bankaddress')?.errors?.required\"\n                           jhiTranslate=\"settings.messages.validate.address.required\">\n                        Address1 is required.\n                    </small>\n                    <small class=\"form-text text-danger\"\n                        *ngIf=\"settingsForm.get('bankaddress')?.errors?.pattern\"\n                        jhiTranslate=\"settings.messages.validate.address.pattern\">\n                        Address-pattern wrong\n                    </small>\n                </div>\n            </div>\n          </div>\n\n                <button type=\"submit\" [disabled]=\"settingsForm.invalid\" class=\"btn btn-primary\" jhiTranslate=\"settings.form.button\">Save</button>\n            </form>\n            <hr/>\n            <div style=\"text-align: center;\">\n              <img src=\"../../../content/images/ssl_https.png\" />\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}