{"ast":null,"code":"import { SERVER_API_URL } from \"app/app.constants\";\nimport { createRequestOption } from \"app/core/request/request-util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrganisatorService {\n  constructor(http) {\n    this.http = http;\n    this.resourceUrl_shop = SERVER_API_URL + 'api/shops';\n    this.resourceUrl_product = SERVER_API_URL + 'api/products';\n    this.resourceUrl_reservation = SERVER_API_URL + 'api/reservations';\n  }\n  queryShopsWithProductTypeAndActive(type, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_shop}/${type}/producttype`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  queryProductsWithShopIdAndActive(shopId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_product}/${shopId}/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findReservationByUserIdAndEventId(userId, eventId) {\n    return this.http.get(`${this.resourceUrl_reservation}/${userId}/${eventId}/getReservationByUserIdAndEventId`, {\n      observe: 'response'\n    });\n  }\n  findReservationsByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_reservation}/${eventId}/getReservationsByEventId`, {\n      observe: 'response'\n    });\n  }\n}\nOrganisatorService.ɵfac = function OrganisatorService_Factory(t) {\n  return new (t || OrganisatorService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrganisatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrganisatorService,\n  factory: OrganisatorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAASC,mBAAmB,QAAQ,+BAA+B;;;AASnE,OAAM,MAAOC,kBAAkB;EAK7BC,YAAsBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJnB,qBAAgB,GAAGJ,cAAc,GAAG,WAAW;IAC/C,wBAAmB,GAAGA,cAAc,GAAG,cAAc;IACrD,4BAAuB,GAAGA,cAAc,GAAG,kBAAkB;EAE3B;EAEzCK,kCAAkC,CAACC,IAAiB,EAAEC,GAAS;IAC7D,MAAMC,OAAO,GAAGP,mBAAmB,CAACM,GAAG,CAAC;IACxC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACC,gBAAgB,IAAIJ,IAAI,cAAc,EAAE;MAAEK,MAAM,EAAEH,OAAO;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EACzH;EAEAC,gCAAgC,CAACC,MAAc,EAAEP,GAAS;IACxD,MAAMC,OAAO,GAAGP,mBAAmB,CAACM,GAAG,CAAC;IACxC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAa,GAAG,IAAI,CAACM,mBAAmB,IAAID,MAAM,SAAS,EAAE;MAAEH,MAAM,EAAEH,OAAO;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EAC5H;EAEAI,iCAAiC,CAACC,MAAc,EAAEC,OAAe;IAC/D,OAAO,IAAI,CAACd,IAAI,CAACK,GAAG,CAAiB,GAAG,IAAI,CAACU,uBAAuB,IAAIF,MAAM,IAAIC,OAAO,mCAAmC,EAAE;MAC5HN,OAAO,EAAE;KACV,CAAC;EACJ;EAEAQ,yBAAyB,CAACF,OAAe;IACvC,OAAO,IAAI,CAACd,IAAI,CAACK,GAAG,CAAiB,GAAG,IAAI,CAACU,uBAAuB,IAAID,OAAO,2BAA2B,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EACtI;;;mBAzBWV,kBAAkB;AAAA;;SAAlBA,kBAAkB;EAAAmB,SAAlBnB,kBAAkB;EAAAoB,YADL;AAAM","names":["SERVER_API_URL","createRequestOption","OrganisatorService","constructor","http","queryShopsWithProductTypeAndActive","type","req","options","get","resourceUrl_shop","params","observe","queryProductsWithShopIdAndActive","shopId","resourceUrl_product","findReservationByUserIdAndEventId","userId","eventId","resourceUrl_reservation","findReservationsByEventId","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/organisator.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { SERVER_API_URL } from \"app/app.constants\";\nimport { createRequestOption } from \"app/core/request/request-util\";\nimport { ProductType } from \"app/entities/enumerations/product-type.model\";\nimport { IProduct } from \"app/entities/product/product.model\";\nimport { IReservation } from \"app/entities/reservation/reservation.model\";\nimport { IShop } from \"app/entities/shop/shop.model\";\nimport { Observable } from \"rxjs\";\n\n\n@Injectable({ providedIn: 'root' })\nexport class OrganisatorService {\n  public resourceUrl_shop = SERVER_API_URL + 'api/shops';\n  public resourceUrl_product = SERVER_API_URL + 'api/products';\n  public resourceUrl_reservation = SERVER_API_URL + 'api/reservations';\n\n  constructor(protected http: HttpClient) {}\n\n  queryShopsWithProductTypeAndActive(type: ProductType, req?: any): Observable<HttpResponse<IShop[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IShop[]>(`${this.resourceUrl_shop}/${type}/producttype`, { params: options, observe: 'response' });\n  }\n\n  queryProductsWithShopIdAndActive(shopId: number, req?: any): Observable<HttpResponse<IProduct[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IProduct[]>(`${this.resourceUrl_product}/${shopId}/active`, { params: options, observe: 'response' });\n  }\n\n  findReservationByUserIdAndEventId(userId: string, eventId: number): Observable<HttpResponse<IReservation[]>> {\n    return this.http.get<IReservation[]>(`${this.resourceUrl_reservation}/${userId}/${eventId}/getReservationByUserIdAndEventId`, {\n      observe: 'response'\n    });\n  }\n\n  findReservationsByEventId(eventId: number): Observable<HttpResponse<IReservation[]>> {\n    return this.http.get<IReservation[]>(`${this.resourceUrl_reservation}/${eventId}/getReservationsByEventId`, { observe: 'response' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}