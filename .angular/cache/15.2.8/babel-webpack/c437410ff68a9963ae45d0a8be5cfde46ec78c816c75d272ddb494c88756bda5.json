{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as dayjs from \"dayjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/google-geocode.service\";\nimport * as i3 from \"./../../entities/location/service/location.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../shared/language/translate.directive\";\nimport * as i6 from \"../../views/boxes/event_slider/event__slider.component\";\nimport * as i7 from \"primeng/knob\";\nexport class DistanceComponent {\n  constructor(generalService, googleGeocoderService, locationService) {\n    _defineProperty(this, \"generalService\", void 0);\n    _defineProperty(this, \"googleGeocoderService\", void 0);\n    _defineProperty(this, \"locationService\", void 0);\n    _defineProperty(this, \"user\", void 0);\n    _defineProperty(this, \"allEvents\", void 0);\n    _defineProperty(this, \"eventsWithDistance\", []);\n    _defineProperty(this, \"distance\", 0);\n    this.generalService = generalService;\n    this.googleGeocoderService = googleGeocoderService;\n    this.locationService = locationService;\n  }\n  ngOnInit() {\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body;\n    });\n  }\n  changeSliderRadius(e) {\n    this.allEvents = [];\n    this.eventsWithDistance = [];\n    let latUser = 0;\n    let lngUser = 0;\n    let posUser;\n    const queryParam = this.user.address.replace(' ', '+');\n    this.googleGeocoderService.getFromAddress(queryParam).subscribe(res => {\n      const geocoder = res.body['results'];\n      const geometry = geocoder[0].geometry;\n      latUser = geometry.location.lat;\n      lngUser = geometry.location.lng;\n      posUser = new google.maps.LatLng(latUser, lngUser);\n      const now = dayjs();\n      this.generalService.findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter(now).subscribe(events => {\n        this.allEvents = events.body;\n        let i = 0;\n        this.allEvents.forEach(element => {\n          i++;\n          this.locationService.find(element.location.id).subscribe(l => {\n            element.location = l.body;\n            const lat = element.location.address.lat;\n            const lng = element.location.address.lng;\n            const posEvent = new google.maps.LatLng(lat, lng);\n            const distance = google.maps.geometry.spherical.computeDistanceBetween(posUser, posEvent);\n            const maxDistance = this.distance * 1000;\n            if (maxDistance > distance) {\n              this.eventsWithDistance.push(element);\n            }\n            if (i === this.allEvents.length) {\n              this.eventsWithDistance = [].concat(this.eventsWithDistance);\n            }\n          });\n        });\n      });\n    });\n  }\n}\n_defineProperty(DistanceComponent, \"\\u0275fac\", function DistanceComponent_Factory(t) {\n  return new (t || DistanceComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.GoogleGeocodeService), i0.ɵɵdirectiveInject(i3.LocationService));\n});\n_defineProperty(DistanceComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DistanceComponent,\n  selectors: [[\"jhi-distance\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\"], [\"jhiTranslate\", \"distance.distance\"], [1, \"slider\", 3, \"ngModel\", \"step\", \"ngModelChange\", \"onChange\"], [1, \"col-md-12\"], [\"orientation\", \"horizontal\", \"numVisible\", \"4\", \"numScroll\", \"1\", \"circular\", \"true\", \"verticalViewPortHeight\", \"600\", \"autoplayInterval\", \"3000\", 3, \"events\"]],\n  template: function DistanceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\\t\");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n\\t\\t\");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"\\n\\t\\t\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\\t\\t\");\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵtext(8, \"\\n            \");\n      i0.ɵɵelementStart(9, \"h5\");\n      i0.ɵɵelement(10, \"span\", 3);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n            \");\n      i0.ɵɵelementStart(13, \"p-knob\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function DistanceComponent_Template_p_knob_ngModelChange_13_listener($event) {\n        return ctx.distance = $event;\n      })(\"onChange\", function DistanceComponent_Template_p_knob_onChange_13_listener($event) {\n        return ctx.changeSliderRadius($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n        \");\n      i0.ɵɵelementStart(16, \"div\", 2);\n      i0.ɵɵtext(17, \"\\n\\t\\t\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n\\t\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n\\t\");\n      i0.ɵɵelementStart(20, \"div\", 1);\n      i0.ɵɵtext(21, \"\\n\\t\\t\");\n      i0.ɵɵelementStart(22, \"div\", 5);\n      i0.ɵɵtext(23, \"\\n        \");\n      i0.ɵɵelement(24, \"jhi-event-slider\", 6);\n      i0.ɵɵtext(25, \"\\n\\t\\t\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n\\t\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n\\n\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate1(\"\", ctx.distance, \" Km\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.distance)(\"step\", 5);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"events\", ctx.eventsWithDistance);\n    }\n  },\n  dependencies: [i4.NgControlStatus, i4.NgModel, i5.TranslateDirective, i6.EventSliderComponent, i7.Knob],\n  styles: [\".slider[_ngcontent-%COMP%] {\\n  width: 250px;\\n  margin: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvbWFwL2Rpc3RhbmNlL2Rpc3RhbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFlBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zbGlkZXIge1xuICB3aWR0aDogMjUwcHg7XG4gIG1hcmdpbjogMjVweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n}));","map":{"version":3,"mappings":"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","names":["dayjs","DistanceComponent","constructor","generalService","googleGeocoderService","locationService","ngOnInit","findWidthAuthorities","subscribe","u","user","body","changeSliderRadius","e","allEvents","eventsWithDistance","latUser","lngUser","posUser","queryParam","address","replace","getFromAddress","res","geocoder","geometry","location","lat","lng","google","maps","LatLng","now","findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter","events","i","forEach","element","find","id","l","posEvent","distance","spherical","computeDistanceBetween","maxDistance","push","length","concat","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/map/distance/distance.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/map/distance/distance.component.html"],"sourcesContent":["import { LocationService } from './../../entities/location/service/location.service';\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { IEvent } from \"app/entities/event/event.model\";\nimport { IUser } from \"app/entities/user/user.model\";\nimport { GeneralService } from \"app/general.service\";\nimport { GoogleGeocodeService } from \"app/google-geocode.service\";\nimport * as dayjs from \"dayjs\";\n\n@Component({\n  selector: 'jhi-distance',\n  templateUrl: './distance.component.html',\n  styleUrls: ['distance.component.scss']\n})\nexport class DistanceComponent implements OnInit {\n  user!: IUser;\n  allEvents!: IEvent[];\n  eventsWithDistance: IEvent[] = [];\n  distance = 0;\n\n  constructor(private generalService: GeneralService,\n              private googleGeocoderService: GoogleGeocodeService,\n              private locationService: LocationService) {}\n\n  ngOnInit(): void {\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body!;\n    });\n  }\n\n  changeSliderRadius(e: any): void {\n    this.allEvents = [];\n    this.eventsWithDistance = [];\n    let latUser = 0;\n    let lngUser = 0;\n    let posUser: google.maps.LatLng;\n    const queryParam = this.user.address!.replace(' ', '+');\n    this.googleGeocoderService.getFromAddress(queryParam).subscribe((res: any) => {\n      const geocoder = res.body!['results'];\n      const geometry = geocoder[0].geometry;\n      latUser = geometry.location.lat;\n      lngUser = geometry.location.lng;\n      posUser = new google.maps.LatLng(latUser, lngUser);\n\n      const now = dayjs();\n      this.generalService.findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter(now).subscribe(events => {\n        this.allEvents = events.body!;\n\n        let i = 0;\n        this.allEvents.forEach(element => {\n          i++;\n          this.locationService.find(element.location.id).subscribe(l => {\n            element.location = l.body;\n            const lat: number = element.location.address.lat;\n            const lng: number = element.location.address.lng;\n            const posEvent = new google.maps.LatLng(lat, lng);\n            const distance = google.maps.geometry.spherical.computeDistanceBetween(posUser, posEvent);\n            const maxDistance = this.distance * 1000;\n            if (maxDistance > distance) {\n              this.eventsWithDistance.push(element);\n            }\n            if(i === this.allEvents.length) {\n              this.eventsWithDistance = [].concat(this.eventsWithDistance);\n            }\n          });\n        });\n      });\n    });\n  }\n}\n","<div class=\"container-fluid\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-4\">\n\t\t</div>\n\t\t<div class=\"col-md-4\">\n            <h5><span jhiTranslate=\"distance.distance\"></span>{{ distance }} Km</h5>\n            <p-knob [(ngModel)]=\"distance\" [step]=\"5\" (onChange)=\"changeSliderRadius($event)\" class=\"slider\"></p-knob>\n        </div>\n        <div class=\"col-md-4\">\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n        <jhi-event-slider   orientation=\"horizontal\" numVisible=\"4\" numScroll=\"1\" circular=\"true\" verticalViewPortHeight=\"600\" autoplayInterval=\"3000\" [events]=\"eventsWithDistance\"></jhi-event-slider>\n\t\t</div>\n\t</div>\n</div>\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}