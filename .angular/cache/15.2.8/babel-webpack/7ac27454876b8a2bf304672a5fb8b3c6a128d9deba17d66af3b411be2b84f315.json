{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { finalize, map } from 'rxjs/operators';\nimport { ChipsCollection } from '../chips-collection.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/chips-collection.service\";\nimport * as i2 from \"app/entities/user/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@fortawesome/angular-fontawesome\";\nimport * as i7 from \"../../../shared/language/translate.directive\";\nimport * as i8 from \"../../../shared/alert/alert-error.component\";\nfunction ChipsCollectionUpdateComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userOption_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", userOption_r1.id === (ctx_r0.editForm.get(\"user\").value == null ? null : ctx_r0.editForm.get(\"user\").value.id) ? ctx_r0.editForm.get(\"user\").value : userOption_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", userOption_r1.id, \"\\n            \");\n  }\n}\nexport class ChipsCollectionUpdateComponent {\n  constructor(chipsCollectionService, userService, activatedRoute, fb) {\n    _defineProperty(this, \"chipsCollectionService\", void 0);\n    _defineProperty(this, \"userService\", void 0);\n    _defineProperty(this, \"activatedRoute\", void 0);\n    _defineProperty(this, \"fb\", void 0);\n    _defineProperty(this, \"isSaving\", false);\n    _defineProperty(this, \"usersSharedCollection\", []);\n    _defineProperty(this, \"editForm\", this.fb.group({\n      id: [],\n      user: []\n    }));\n    this.chipsCollectionService = chipsCollectionService;\n    this.userService = userService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({\n      chipsCollection\n    }) => {\n      this.updateForm(chipsCollection);\n      this.loadRelationshipsOptions();\n    });\n  }\n  previousState() {\n    window.history.back();\n  }\n  save() {\n    this.isSaving = true;\n    const chipsCollection = this.createFromForm();\n    if (chipsCollection.id !== undefined) {\n      this.subscribeToSaveResponse(this.chipsCollectionService.update(chipsCollection));\n    } else {\n      this.subscribeToSaveResponse(this.chipsCollectionService.create(chipsCollection));\n    }\n  }\n  trackUserById(index, item) {\n    return item.id;\n  }\n  subscribeToSaveResponse(result) {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n  }\n  onSaveSuccess() {\n    this.previousState();\n  }\n  onSaveError() {\n    // Api for inheritance.\n  }\n  onSaveFinalize() {\n    this.isSaving = false;\n  }\n  updateForm(chipsCollection) {\n    this.editForm.patchValue({\n      id: chipsCollection.id,\n      user: chipsCollection.user\n    });\n    this.usersSharedCollection = this.userService.addUserToCollectionIfMissing(this.usersSharedCollection, chipsCollection.user);\n  }\n  loadRelationshipsOptions() {\n    this.userService.query().pipe(map(res => res.body ?? [])).pipe(map(users => this.userService.addUserToCollectionIfMissing(users, this.editForm.get('user').value))).subscribe(users => this.usersSharedCollection = users);\n  }\n  createFromForm() {\n    return {\n      ...new ChipsCollection(),\n      id: this.editForm.get(['id']).value,\n      user: this.editForm.get(['user']).value\n    };\n  }\n}\n_defineProperty(ChipsCollectionUpdateComponent, \"\\u0275fac\", function ChipsCollectionUpdateComponent_Factory(t) {\n  return new (t || ChipsCollectionUpdateComponent)(i0.ɵɵdirectiveInject(i1.ChipsCollectionService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder));\n});\n_defineProperty(ChipsCollectionUpdateComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChipsCollectionUpdateComponent,\n  selectors: [[\"jhi-chips-collection-update\"]],\n  decls: 57,\n  vars: 7,\n  consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-chips-collection-heading\", \"data-cy\", \"ChipsCollectionCreateUpdateHeading\", \"jhiTranslate\", \"createyoureventApp.chipsCollection.home.createOrEditLabel\"], [1, \"form-group\", 3, \"hidden\"], [\"jhiTranslate\", \"global.field.id\", \"for\", \"field_id\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"id\", \"id\", \"field_id\", \"data-cy\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.chipsCollection.user\", \"for\", \"field_user\", 1, \"form-control-label\"], [\"id\", \"field_user\", \"data-cy\", \"user\", \"name\", \"user\", \"formControlName\", \"user\", 1, \"form-control\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"type\", \"button\", \"id\", \"cancel-save\", \"data-cy\", \"entityCreateCancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", \"data-cy\", \"entityCreateSaveButton\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"]],\n  template: function ChipsCollectionUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ChipsCollectionUpdateComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"h2\", 3);\n      i0.ɵɵtext(7, \"\\n        Create or edit a Chips Collection\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n      \");\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelement(11, \"jhi-alert-error\");\n      i0.ɵɵtext(12, \"\\n\\n        \");\n      i0.ɵɵelementStart(13, \"div\", 4);\n      i0.ɵɵtext(14, \"\\n          \");\n      i0.ɵɵelementStart(15, \"label\", 5);\n      i0.ɵɵtext(16, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n          \");\n      i0.ɵɵelement(18, \"input\", 6);\n      i0.ɵɵtext(19, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n        \");\n      i0.ɵɵelementStart(21, \"div\", 7);\n      i0.ɵɵtext(22, \"\\n          \");\n      i0.ɵɵelementStart(23, \"label\", 8);\n      i0.ɵɵtext(24, \"User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n          \");\n      i0.ɵɵelementStart(26, \"select\", 9);\n      i0.ɵɵtext(27, \"\\n            \");\n      i0.ɵɵelement(28, \"option\", 10);\n      i0.ɵɵtext(29, \"\\n            \");\n      i0.ɵɵtemplate(30, ChipsCollectionUpdateComponent_option_30_Template, 2, 2, \"option\", 11);\n      i0.ɵɵtext(31, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\\n      \");\n      i0.ɵɵelementStart(35, \"div\");\n      i0.ɵɵtext(36, \"\\n        \");\n      i0.ɵɵelementStart(37, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function ChipsCollectionUpdateComponent_Template_button_click_37_listener() {\n        return ctx.previousState();\n      });\n      i0.ɵɵtext(38, \"\\n          \");\n      i0.ɵɵelement(39, \"fa-icon\", 13);\n      i0.ɵɵtext(40, \"\\u00A0\");\n      i0.ɵɵelementStart(41, \"span\", 14);\n      i0.ɵɵtext(42, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \"\\n\\n        \");\n      i0.ɵɵelementStart(45, \"button\", 15);\n      i0.ɵɵtext(46, \"\\n          \");\n      i0.ɵɵelement(47, \"fa-icon\", 16);\n      i0.ɵɵtext(48, \"\\u00A0\");\n      i0.ɵɵelementStart(49, \"span\", 17);\n      i0.ɵɵtext(50, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(54, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"hidden\", ctx.editForm.get(\"id\").value == null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"readonly\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.usersSharedCollection)(\"ngForTrackBy\", ctx.trackUserById);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i5.NgForOf, i6.FaIconComponent, i4.FormGroupDirective, i4.FormControlName, i7.TranslateDirective, i8.AlertErrorComponent],\n  encapsulation: 2\n}));","map":{"version":3,"mappings":"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","names":["finalize","map","ChipsCollection","i0","ChipsCollectionUpdateComponent","constructor","chipsCollectionService","userService","activatedRoute","fb","group","id","user","ngOnInit","data","subscribe","chipsCollection","updateForm","loadRelationshipsOptions","previousState","window","history","back","save","isSaving","createFromForm","undefined","subscribeToSaveResponse","update","create","trackUserById","index","item","result","pipe","onSaveFinalize","onSaveSuccess","onSaveError","editForm","patchValue","usersSharedCollection","addUserToCollectionIfMissing","query","res","body","users","get","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/chips-collection/update/chips-collection-update.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/chips-collection/update/chips-collection-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\n\nimport { IChipsCollection, ChipsCollection } from '../chips-collection.model';\nimport { ChipsCollectionService } from '../service/chips-collection.service';\nimport { IUser } from 'app/entities/user/user.model';\nimport { UserService } from 'app/entities/user/user.service';\n\n@Component({\n  selector: 'jhi-chips-collection-update',\n  templateUrl: './chips-collection-update.component.html',\n})\nexport class ChipsCollectionUpdateComponent implements OnInit {\n  isSaving = false;\n\n  usersSharedCollection: IUser[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    user: [],\n  });\n\n  constructor(\n    protected chipsCollectionService: ChipsCollectionService,\n    protected userService: UserService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: UntypedFormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ chipsCollection }) => {\n      this.updateForm(chipsCollection);\n\n      this.loadRelationshipsOptions();\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const chipsCollection = this.createFromForm();\n    if (chipsCollection.id !== undefined) {\n      this.subscribeToSaveResponse(this.chipsCollectionService.update(chipsCollection));\n    } else {\n      this.subscribeToSaveResponse(this.chipsCollectionService.create(chipsCollection));\n    }\n  }\n\n  trackUserById(index: number, item: IUser): string {\n    return item.id!;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IChipsCollection>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(chipsCollection: IChipsCollection): void {\n    this.editForm.patchValue({\n      id: chipsCollection.id,\n      user: chipsCollection.user,\n    });\n\n    this.usersSharedCollection = this.userService.addUserToCollectionIfMissing(this.usersSharedCollection, chipsCollection.user);\n  }\n\n  protected loadRelationshipsOptions(): void {\n    this.userService\n      .query()\n      .pipe(map((res: HttpResponse<IUser[]>) => res.body ?? []))\n      .pipe(map((users: IUser[]) => this.userService.addUserToCollectionIfMissing(users, this.editForm.get('user')!.value)))\n      .subscribe((users: IUser[]) => (this.usersSharedCollection = users));\n  }\n\n  protected createFromForm(): IChipsCollection {\n    return {\n      ...new ChipsCollection(),\n      id: this.editForm.get(['id'])!.value,\n      user: this.editForm.get(['user'])!.value,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2\n        id=\"jhi-chips-collection-heading\"\n        data-cy=\"ChipsCollectionCreateUpdateHeading\"\n        jhiTranslate=\"createyoureventApp.chipsCollection.home.createOrEditLabel\"\n      >\n        Create or edit a Chips Collection\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.chipsCollection.user\" for=\"field_user\">User</label>\n          <select class=\"form-control\" id=\"field_user\" data-cy=\"user\" name=\"user\" formControlName=\"user\">\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"userOption.id === editForm.get('user')!.value?.id ? editForm.get('user')!.value : userOption\"\n              *ngFor=\"let userOption of usersSharedCollection; trackBy: trackUserById\"\n            >\n              {{ userOption.id }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}