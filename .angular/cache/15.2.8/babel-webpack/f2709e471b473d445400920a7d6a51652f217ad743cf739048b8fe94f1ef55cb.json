{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getSlotListPlumIdentifier } from '../slot-list-plum.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let SlotListPlumService = /*#__PURE__*/(() => {\n  class SlotListPlumService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/slot-list-plums');\n    }\n    create(slotListPlum) {\n      return this.http.post(this.resourceUrl, slotListPlum, {\n        observe: 'response'\n      });\n    }\n    update(slotListPlum) {\n      return this.http.put(`${this.resourceUrl}/${getSlotListPlumIdentifier(slotListPlum)}`, slotListPlum, {\n        observe: 'response'\n      });\n    }\n    partialUpdate(slotListPlum) {\n      return this.http.patch(`${this.resourceUrl}/${getSlotListPlumIdentifier(slotListPlum)}`, slotListPlum, {\n        observe: 'response'\n      });\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addSlotListPlumToCollectionIfMissing(slotListPlumCollection, ...slotListPlumsToCheck) {\n      const slotListPlums = slotListPlumsToCheck.filter(isPresent);\n      if (slotListPlums.length > 0) {\n        const slotListPlumCollectionIdentifiers = slotListPlumCollection.map(slotListPlumItem => getSlotListPlumIdentifier(slotListPlumItem));\n        const slotListPlumsToAdd = slotListPlums.filter(slotListPlumItem => {\n          const slotListPlumIdentifier = getSlotListPlumIdentifier(slotListPlumItem);\n          if (slotListPlumIdentifier == null || slotListPlumCollectionIdentifiers.includes(slotListPlumIdentifier)) {\n            return false;\n          }\n          slotListPlumCollectionIdentifiers.push(slotListPlumIdentifier);\n          return true;\n        });\n        return [...slotListPlumsToAdd, ...slotListPlumCollection];\n      }\n      return slotListPlumCollection;\n    }\n  }\n  SlotListPlumService.ɵfac = function SlotListPlumService_Factory(t) {\n    return new (t || SlotListPlumService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  SlotListPlumService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SlotListPlumService,\n    factory: SlotListPlumService.ɵfac,\n    providedIn: 'root'\n  });\n  return SlotListPlumService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}