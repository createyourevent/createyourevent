{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\nimport { Contact } from '../contact.model';\nimport { EventWithContent } from 'app/core/util/event-manager.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/util/data-util.service\";\nimport * as i2 from \"app/core/util/event-manager.service\";\nimport * as i3 from \"../service/contact.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../../shared/language/translate.directive\";\nimport * as i9 from \"../../../shared/alert/alert-error.component\";\nfunction ContactUpdateComponent_div_28_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_28_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.editForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ContactUpdateComponent_div_38_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_38_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.editForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ContactUpdateComponent_div_48_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_48_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.editForm.get(\"message\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nexport class ContactUpdateComponent {\n  constructor(dataUtils, eventManager, contactService, activatedRoute, fb) {\n    this.dataUtils = dataUtils;\n    this.eventManager = eventManager;\n    this.contactService = contactService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.isSaving = false;\n    this.editForm = this.fb.group({\n      id: [],\n      name: [null, [Validators.required]],\n      email: [null, [Validators.required]],\n      message: [null, [Validators.required]],\n      date: []\n    });\n  }\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({\n      contact\n    }) => {\n      if (contact.id === undefined) {\n        const today = dayjs().startOf('day');\n        contact.date = today;\n      }\n      this.updateForm(contact);\n    });\n  }\n  byteSize(base64String) {\n    return this.dataUtils.byteSize(base64String);\n  }\n  openFile(base64String, contentType) {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n  setFileData(event, field, isImage) {\n    this.dataUtils.loadFileToForm(event, this.editForm, field, isImage).subscribe({\n      error: err => this.eventManager.broadcast(new EventWithContent('createyoureventApp.error', {\n        ...err,\n        key: 'error.file.' + err.key\n      }))\n    });\n  }\n  previousState() {\n    window.history.back();\n  }\n  save() {\n    this.isSaving = true;\n    const contact = this.createFromForm();\n    if (contact.id !== undefined) {\n      this.subscribeToSaveResponse(this.contactService.update(contact));\n    } else {\n      this.subscribeToSaveResponse(this.contactService.create(contact));\n    }\n  }\n  subscribeToSaveResponse(result) {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n  }\n  onSaveSuccess() {\n    this.previousState();\n  }\n  onSaveError() {\n    // Api for inheritance.\n  }\n  onSaveFinalize() {\n    this.isSaving = false;\n  }\n  updateForm(contact) {\n    this.editForm.patchValue({\n      id: contact.id,\n      name: contact.name,\n      email: contact.email,\n      message: contact.message,\n      date: contact.date ? contact.date.format(DATE_TIME_FORMAT) : null\n    });\n  }\n  createFromForm() {\n    return {\n      ...new Contact(),\n      id: this.editForm.get(['id']).value,\n      name: this.editForm.get(['name']).value,\n      email: this.editForm.get(['email']).value,\n      message: this.editForm.get(['message']).value,\n      date: this.editForm.get(['date']).value ? dayjs(this.editForm.get(['date']).value, DATE_TIME_FORMAT) : undefined\n    };\n  }\n}\nContactUpdateComponent.ɵfac = function ContactUpdateComponent_Factory(t) {\n  return new (t || ContactUpdateComponent)(i0.ɵɵdirectiveInject(i1.DataUtils), i0.ɵɵdirectiveInject(i2.EventManager), i0.ɵɵdirectiveInject(i3.ContactService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder));\n};\nContactUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactUpdateComponent,\n  selectors: [[\"jhi-contact-update\"]],\n  decls: 85,\n  vars: 7,\n  consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-contact-heading\", \"data-cy\", \"ContactCreateUpdateHeading\", \"jhiTranslate\", \"createyoureventApp.contact.home.createOrEditLabel\"], [1, \"form-group\", 3, \"hidden\"], [\"jhiTranslate\", \"global.field.id\", \"for\", \"field_id\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"id\", \"id\", \"field_id\", \"data-cy\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.contact.name\", \"for\", \"field_name\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"field_name\", \"data-cy\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [4, \"ngIf\"], [\"jhiTranslate\", \"createyoureventApp.contact.email\", \"for\", \"field_email\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"field_email\", \"data-cy\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"jhiTranslate\", \"createyoureventApp.contact.message\", \"for\", \"field_message\", 1, \"form-control-label\"], [\"name\", \"message\", \"id\", \"field_message\", \"data-cy\", \"message\", \"formControlName\", \"message\", 1, \"form-control\"], [\"jhiTranslate\", \"createyoureventApp.contact.date\", \"for\", \"field_date\", 1, \"form-control-label\"], [1, \"d-flex\"], [\"id\", \"field_date\", \"data-cy\", \"date\", \"type\", \"datetime-local\", \"name\", \"date\", \"formControlName\", \"date\", \"placeholder\", \"YYYY-MM-DD HH:mm\", 1, \"form-control\"], [\"type\", \"button\", \"id\", \"cancel-save\", \"data-cy\", \"entityCreateCancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", \"data-cy\", \"entityCreateSaveButton\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"entity.validation.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"entity.validation.required\", 1, \"form-text\", \"text-danger\"]],\n  template: function ContactUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ContactUpdateComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"h2\", 3);\n      i0.ɵɵtext(7, \"\\n        Create or edit a Contact\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n      \");\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelement(11, \"jhi-alert-error\");\n      i0.ɵɵtext(12, \"\\n\\n        \");\n      i0.ɵɵelementStart(13, \"div\", 4);\n      i0.ɵɵtext(14, \"\\n          \");\n      i0.ɵɵelementStart(15, \"label\", 5);\n      i0.ɵɵtext(16, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n          \");\n      i0.ɵɵelement(18, \"input\", 6);\n      i0.ɵɵtext(19, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n        \");\n      i0.ɵɵelementStart(21, \"div\", 7);\n      i0.ɵɵtext(22, \"\\n          \");\n      i0.ɵɵelementStart(23, \"label\", 8);\n      i0.ɵɵtext(24, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n          \");\n      i0.ɵɵelement(26, \"input\", 9);\n      i0.ɵɵtext(27, \"\\n          \");\n      i0.ɵɵtemplate(28, ContactUpdateComponent_div_28_Template, 4, 1, \"div\", 10);\n      i0.ɵɵtext(29, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n\\n        \");\n      i0.ɵɵelementStart(31, \"div\", 7);\n      i0.ɵɵtext(32, \"\\n          \");\n      i0.ɵɵelementStart(33, \"label\", 11);\n      i0.ɵɵtext(34, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n          \");\n      i0.ɵɵelement(36, \"input\", 12);\n      i0.ɵɵtext(37, \"\\n          \");\n      i0.ɵɵtemplate(38, ContactUpdateComponent_div_38_Template, 4, 1, \"div\", 10);\n      i0.ɵɵtext(39, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n\\n        \");\n      i0.ɵɵelementStart(41, \"div\", 7);\n      i0.ɵɵtext(42, \"\\n          \");\n      i0.ɵɵelementStart(43, \"label\", 13);\n      i0.ɵɵtext(44, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(45, \"\\n          \");\n      i0.ɵɵelement(46, \"textarea\", 14);\n      i0.ɵɵtext(47, \"\\n          \");\n      i0.ɵɵtemplate(48, ContactUpdateComponent_div_48_Template, 4, 1, \"div\", 10);\n      i0.ɵɵtext(49, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n\\n        \");\n      i0.ɵɵelementStart(51, \"div\", 7);\n      i0.ɵɵtext(52, \"\\n          \");\n      i0.ɵɵelementStart(53, \"label\", 15);\n      i0.ɵɵtext(54, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n          \");\n      i0.ɵɵelementStart(56, \"div\", 16);\n      i0.ɵɵtext(57, \"\\n            \");\n      i0.ɵɵelement(58, \"input\", 17);\n      i0.ɵɵtext(59, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(60, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(61, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \"\\n\\n      \");\n      i0.ɵɵelementStart(63, \"div\");\n      i0.ɵɵtext(64, \"\\n        \");\n      i0.ɵɵelementStart(65, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function ContactUpdateComponent_Template_button_click_65_listener() {\n        return ctx.previousState();\n      });\n      i0.ɵɵtext(66, \"\\n          \");\n      i0.ɵɵelement(67, \"fa-icon\", 19);\n      i0.ɵɵtext(68, \"\\u00A0\");\n      i0.ɵɵelementStart(69, \"span\", 20);\n      i0.ɵɵtext(70, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(71, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(72, \"\\n\\n        \");\n      i0.ɵɵelementStart(73, \"button\", 21);\n      i0.ɵɵtext(74, \"\\n          \");\n      i0.ɵɵelement(75, \"fa-icon\", 22);\n      i0.ɵɵtext(76, \"\\u00A0\");\n      i0.ɵɵelementStart(77, \"span\", 23);\n      i0.ɵɵtext(78, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(79, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(80, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(81, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(82, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(83, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(84, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"hidden\", ctx.editForm.get(\"id\").value == null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"readonly\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"name\").invalid && (ctx.editForm.get(\"name\").dirty || ctx.editForm.get(\"name\").touched));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"email\").invalid && (ctx.editForm.get(\"email\").dirty || ctx.editForm.get(\"email\").touched));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"message\").invalid && (ctx.editForm.get(\"message\").dirty || ctx.editForm.get(\"message\").touched));\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.NgIf, i7.FaIconComponent, i5.FormGroupDirective, i5.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","finalize","dayjs","DATE_TIME_FORMAT","Contact","EventWithContent","i0","ContactUpdateComponent","constructor","dataUtils","eventManager","contactService","activatedRoute","fb","group","id","name","required","email","message","date","ngOnInit","data","subscribe","contact","undefined","today","startOf","updateForm","byteSize","base64String","openFile","contentType","setFileData","event","field","isImage","loadFileToForm","editForm","error","err","broadcast","key","previousState","window","history","back","save","isSaving","createFromForm","subscribeToSaveResponse","update","create","result","pipe","onSaveFinalize","onSaveSuccess","onSaveError","patchValue","format","get","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/contact/update/contact-update.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/contact/update/contact-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\n\nimport { IContact, Contact } from '../contact.model';\nimport { ContactService } from '../service/contact.service';\nimport { AlertError } from 'app/shared/alert/alert-error.model';\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\nimport { DataUtils, FileLoadError } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-contact-update',\n  templateUrl: './contact-update.component.html',\n})\nexport class ContactUpdateComponent implements OnInit {\n  isSaving = false;\n\n  editForm = this.fb.group({\n    id: [],\n    name: [null, [Validators.required]],\n    email: [null, [Validators.required]],\n    message: [null, [Validators.required]],\n    date: [],\n  });\n\n  constructor(\n    protected dataUtils: DataUtils,\n    protected eventManager: EventManager,\n    protected contactService: ContactService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: UntypedFormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ contact }) => {\n      if (contact.id === undefined) {\n        const today = dayjs().startOf('day');\n        contact.date = today;\n      }\n\n      this.updateForm(contact);\n    });\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n  setFileData(event: Event, field: string, isImage: boolean): void {\n    this.dataUtils.loadFileToForm(event, this.editForm, field, isImage).subscribe({\n      error: (err: FileLoadError) =>\n        this.eventManager.broadcast(new EventWithContent<AlertError>('createyoureventApp.error', { ...err, key: 'error.file.' + err.key })),\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const contact = this.createFromForm();\n    if (contact.id !== undefined) {\n      this.subscribeToSaveResponse(this.contactService.update(contact));\n    } else {\n      this.subscribeToSaveResponse(this.contactService.create(contact));\n    }\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IContact>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(contact: IContact): void {\n    this.editForm.patchValue({\n      id: contact.id,\n      name: contact.name,\n      email: contact.email,\n      message: contact.message,\n      date: contact.date ? contact.date.format(DATE_TIME_FORMAT) : null,\n    });\n  }\n\n  protected createFromForm(): IContact {\n    return {\n      ...new Contact(),\n      id: this.editForm.get(['id'])!.value,\n      name: this.editForm.get(['name'])!.value,\n      email: this.editForm.get(['email'])!.value,\n      message: this.editForm.get(['message'])!.value,\n      date: this.editForm.get(['date'])!.value ? dayjs(this.editForm.get(['date'])!.value, DATE_TIME_FORMAT) : undefined,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"jhi-contact-heading\" data-cy=\"ContactCreateUpdateHeading\" jhiTranslate=\"createyoureventApp.contact.home.createOrEditLabel\">\n        Create or edit a Contact\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.contact.name\" for=\"field_name\">Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"name\" id=\"field_name\" data-cy=\"name\" formControlName=\"name\" />\n          <div *ngIf=\"editForm.get('name')!.invalid && (editForm.get('name')!.dirty || editForm.get('name')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.contact.email\" for=\"field_email\">Email</label>\n          <input type=\"text\" class=\"form-control\" name=\"email\" id=\"field_email\" data-cy=\"email\" formControlName=\"email\" />\n          <div *ngIf=\"editForm.get('email')!.invalid && (editForm.get('email')!.dirty || editForm.get('email')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.contact.message\" for=\"field_message\">Message</label>\n          <textarea class=\"form-control\" name=\"message\" id=\"field_message\" data-cy=\"message\" formControlName=\"message\"></textarea>\n          <div *ngIf=\"editForm.get('message')!.invalid && (editForm.get('message')!.dirty || editForm.get('message')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('message')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.contact.date\" for=\"field_date\">Date</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"field_date\"\n              data-cy=\"date\"\n              type=\"datetime-local\"\n              class=\"form-control\"\n              name=\"date\"\n              formControlName=\"date\"\n              placeholder=\"YYYY-MM-DD HH:mm\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}