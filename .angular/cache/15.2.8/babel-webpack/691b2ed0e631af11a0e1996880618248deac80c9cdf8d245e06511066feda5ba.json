{"ast":null,"code":"\"use strict\";\n\n/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\nvar ɵngcc0 = require('@angular/core');\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar moment = require(\"moment\");\nvar SubtractPipe = /** @class */function () {\n  function SubtractPipe() {}\n  SubtractPipe.prototype.transform = function (value, amount, unit) {\n    if (typeof amount === 'undefined' || typeof amount === 'number' && typeof unit === 'undefined') {\n      throw new Error('SubtractPipe: missing required arguments');\n    }\n    return moment(value).subtract(amount, unit);\n  };\n  SubtractPipe.ɵfac = function SubtractPipe_Factory(t) {\n    return new (t || SubtractPipe)();\n  };\n  SubtractPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"amSubtract\",\n    type: SubtractPipe,\n    pure: true\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n  return SubtractPipe;\n}();\nexports.SubtractPipe = SubtractPipe;\n\n//# sourceMappingURL=subtract.pipe.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}