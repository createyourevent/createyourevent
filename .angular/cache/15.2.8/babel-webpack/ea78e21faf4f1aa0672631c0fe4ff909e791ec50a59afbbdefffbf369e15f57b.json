{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getGiftIdentifier } from '../gift.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class GiftService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/gifts');\n  }\n  create(gift) {\n    return this.http.post(this.resourceUrl, gift, {\n      observe: 'response'\n    });\n  }\n  update(gift) {\n    return this.http.put(`${this.resourceUrl}/${getGiftIdentifier(gift)}`, gift, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(gift) {\n    return this.http.patch(`${this.resourceUrl}/${getGiftIdentifier(gift)}`, gift, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addGiftToCollectionIfMissing(giftCollection, ...giftsToCheck) {\n    const gifts = giftsToCheck.filter(isPresent);\n    if (gifts.length > 0) {\n      const giftCollectionIdentifiers = giftCollection.map(giftItem => getGiftIdentifier(giftItem));\n      const giftsToAdd = gifts.filter(giftItem => {\n        const giftIdentifier = getGiftIdentifier(giftItem);\n        if (giftIdentifier == null || giftCollectionIdentifiers.includes(giftIdentifier)) {\n          return false;\n        }\n        giftCollectionIdentifiers.push(giftIdentifier);\n        return true;\n      });\n      return [...giftsToAdd, ...giftCollection];\n    }\n    return giftCollection;\n  }\n}\nGiftService.ɵfac = function GiftService_Factory(t) {\n  return new (t || GiftService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nGiftService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GiftService,\n  factory: GiftService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAgBC,iBAAiB,QAAQ,eAAe;;;;AAMxD,OAAM,MAAOC,WAAW;EAGtBC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAA9E,SAAI,GAAJD,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;IAFhE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,WAAW,CAAC;EAEsB;EAEvGC,MAAM,CAACC,IAAW;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAQ,IAAI,CAACC,WAAW,EAAEF,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAC,MAAM,CAACJ,IAAW;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACH,WAAW,IAAIT,iBAAiB,CAACO,IAAI,CAAW,EAAE,EAAEA,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACxH;EAEAG,aAAa,CAACN,IAAW;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAAQ,GAAG,IAAI,CAACL,WAAW,IAAIT,iBAAiB,CAACO,IAAI,CAAW,EAAE,EAAEA,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAC1H;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAQ,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EACnF;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAU,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EAC3F;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,4BAA4B,CAACC,cAAuB,EAAE,GAAGC,YAA0C;IACjG,MAAMC,KAAK,GAAYD,YAAY,CAACE,MAAM,CAAC7B,SAAS,CAAC;IACrD,IAAI4B,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,yBAAyB,GAAGL,cAAc,CAACM,GAAG,CAACC,QAAQ,IAAI/B,iBAAiB,CAAC+B,QAAQ,CAAE,CAAC;MAC9F,MAAMC,UAAU,GAAGN,KAAK,CAACC,MAAM,CAACI,QAAQ,IAAG;QACzC,MAAME,cAAc,GAAGjC,iBAAiB,CAAC+B,QAAQ,CAAC;QAClD,IAAIE,cAAc,IAAI,IAAI,IAAIJ,yBAAyB,CAACK,QAAQ,CAACD,cAAc,CAAC,EAAE;UAChF,OAAO,KAAK;;QAEdJ,yBAAyB,CAACM,IAAI,CAACF,cAAc,CAAC;QAC9C,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,UAAU,EAAE,GAAGR,cAAc,CAAC;;IAE3C,OAAOA,cAAc;EACvB;;;mBA7CWvB,WAAW;AAAA;;SAAXA,WAAW;EAAAmC,SAAXnC,WAAW;EAAAoC,YADE;AAAM","names":["isPresent","createRequestOption","getGiftIdentifier","GiftService","constructor","http","applicationConfigService","getEndpointFor","create","gift","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addGiftToCollectionIfMissing","giftCollection","giftsToCheck","gifts","filter","length","giftCollectionIdentifiers","map","giftItem","giftsToAdd","giftIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/gift/service/gift.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IGift, getGiftIdentifier } from '../gift.model';\n\nexport type EntityResponseType = HttpResponse<IGift>;\nexport type EntityArrayResponseType = HttpResponse<IGift[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class GiftService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/gifts');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(gift: IGift): Observable<EntityResponseType> {\n    return this.http.post<IGift>(this.resourceUrl, gift, { observe: 'response' });\n  }\n\n  update(gift: IGift): Observable<EntityResponseType> {\n    return this.http.put<IGift>(`${this.resourceUrl}/${getGiftIdentifier(gift) as number}`, gift, { observe: 'response' });\n  }\n\n  partialUpdate(gift: IGift): Observable<EntityResponseType> {\n    return this.http.patch<IGift>(`${this.resourceUrl}/${getGiftIdentifier(gift) as number}`, gift, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IGift>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IGift[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addGiftToCollectionIfMissing(giftCollection: IGift[], ...giftsToCheck: (IGift | null | undefined)[]): IGift[] {\n    const gifts: IGift[] = giftsToCheck.filter(isPresent);\n    if (gifts.length > 0) {\n      const giftCollectionIdentifiers = giftCollection.map(giftItem => getGiftIdentifier(giftItem)!);\n      const giftsToAdd = gifts.filter(giftItem => {\n        const giftIdentifier = getGiftIdentifier(giftItem);\n        if (giftIdentifier == null || giftCollectionIdentifiers.includes(giftIdentifier)) {\n          return false;\n        }\n        giftCollectionIdentifiers.push(giftIdentifier);\n        return true;\n      });\n      return [...giftsToAdd, ...giftCollection];\n    }\n    return giftCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}