{"ast":null,"code":"import { ReservationTransactionId } from './../../../entities/reservation-transaction-id/reservation-transaction-id.model';\nimport { Reservation } from 'app/entities/reservation/reservation.model';\nimport dayjs from 'dayjs';\nimport { Ticket } from 'app/entities/ticket/ticket.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/general.service\";\nimport * as i3 from \"app/entities/reservation/service/reservation.service\";\nimport * as i4 from \"app/entities/ticket/service/ticket.service\";\nimport * as i5 from \"../../../shared/language/translate.directive\";\nimport * as i6 from \"primeng/progressspinner\";\nimport * as i7 from \"../../please-wait-dialog/please-wait-dialog.component\";\nexport let SuccessfullComponent = /*#__PURE__*/(() => {\n  class SuccessfullComponent {\n    constructor(route, generalService, reservationService, router, ticketService) {\n      this.route = route;\n      this.generalService = generalService;\n      this.reservationService = reservationService;\n      this.router = router;\n      this.ticketService = ticketService;\n      this.display = false;\n    }\n    ngOnInit() {\n      this.display = true;\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n        this.route.queryParams.subscribe(params => {\n          this.datatransTrxId = params['datatransTrxId'];\n          this.type = this.route.snapshot.params.type;\n          this.id = this.route.snapshot.params.id;\n          this.refNo = this.route.snapshot.params.refNo;\n          this.amount = this.route.snapshot.params.amount;\n          if (this.type === 'event') {\n            const reservation = new Reservation();\n            this.generalService.findEventById(this.id).subscribe(e => {\n              reservation.user = this.user;\n              reservation.event = e.body;\n              const tid = new ReservationTransactionId();\n              tid.transactionDepositId = this.refNo;\n              reservation.transactionId = tid;\n              this.generalService.createReservation(reservation).subscribe(re => {\n                this.reservationService.find(re.body.id).subscribe(r => {\n                  const res = r.body;\n                  const ticket = new Ticket();\n                  ticket.date = dayjs();\n                  ticket.amount = 1;\n                  ticket.total = e.body.price * 100;\n                  ticket.event = res.event;\n                  ticket.user = res.user;\n                  // ticket.refNo = this.refNo;\n                  // this.ticketService.create(ticket).subscribe(t => {\n                  res.ticket = ticket;\n                  this.generalService.updateReservation(res).subscribe(() => {\n                    this.router.navigate(['/events/' + this.id + '/view']);\n                    this.display = false;\n                  });\n                  // });\n                });\n              });\n            });\n          } else if (this.type === 'ticket') {\n            this.reservationService.find(this.id).subscribe(r => {\n              const res = r.body;\n              res.billed = true;\n              res.date = dayjs(new Date());\n              res.transactionId.transactionId = this.refNo;\n              res.ticket.refNo = this.refNo;\n              this.generalService.updateReservation(res).subscribe(() => {\n                this.router.navigate(['/account/tickets/' + this.id + '/payTicket']);\n                this.display = false;\n              });\n            });\n          } else if (this.type === 'cashbox') {\n            this.generalService.findEventById(this.id).subscribe(e => {\n              const jhie = e.body;\n              jhie.billedOrganisator = true;\n              this.generalService.updateEvent(jhie).subscribe(() => {\n                this.router.navigate(['/organisator/cashbox/' + this.id + '/cashbox']);\n                this.display = false;\n              });\n            });\n          } else if (this.type === 'fee') {\n            this.router.navigate(['/billing'], {\n              queryParams: {\n                txId: this.datatransTrxId,\n                refNo: this.refNo\n              }\n            });\n          } else if (this.type === 'buyTicket') {\n            this.generalService.findWidthAuthorities().subscribe(u => {\n              const user = u.body;\n              this.generalService.findEventById(this.id).subscribe(e => {\n                const jhie = e.body;\n                const ticket = new Ticket();\n                ticket.date = dayjs();\n                ticket.amount = this.amount / (jhie.price * 100);\n                ticket.total = this.amount;\n                ticket.event = jhie;\n                ticket.user = user;\n                ticket.refNo = this.refNo;\n                this.ticketService.create(ticket).subscribe(t => {\n                  const res = new Reservation();\n                  res.date = dayjs();\n                  res.user = this.user;\n                  res.ticket = ticket;\n                  res.event = ticket.event;\n                  res.billed = true;\n                  const tid = new ReservationTransactionId();\n                  tid.transactionId = this.refNo;\n                  res.transactionId = tid;\n                  this.generalService.createReservation(res).subscribe(() => {\n                    this.router.navigate(['/events/' + jhie.id + '/buy-tickets']);\n                    this.display = false;\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    }\n  }\n  SuccessfullComponent.ɵfac = function SuccessfullComponent_Factory(t) {\n    return new (t || SuccessfullComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.GeneralService), i0.ɵɵdirectiveInject(i3.ReservationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.TicketService));\n  };\n  SuccessfullComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SuccessfullComponent,\n    selectors: [[\"jhi-successfull\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"col-md-6\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"jhiTranslate\", \"successfull.success\"], [3, \"display\"]],\n    template: function SuccessfullComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n    \");\n        i0.ɵɵelement(4, \"p-progressSpinner\");\n        i0.ɵɵtext(5, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n  \");\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵtext(8, \"\\n    \");\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵtext(10, \"\\n      \");\n        i0.ɵɵelementStart(11, \"span\", 3);\n        i0.ɵɵtext(12, \"Payment submitted successfully. Thanks.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \"\\n\\n\");\n        i0.ɵɵelement(17, \"jhi-please-wait-dialog\", 4);\n        i0.ɵɵtext(18, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"display\", ctx.display);\n      }\n    },\n    dependencies: [i5.TranslateDirective, i6.ProgressSpinner, i7.PleaseWaitDialogComponent]\n  });\n  return SuccessfullComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}