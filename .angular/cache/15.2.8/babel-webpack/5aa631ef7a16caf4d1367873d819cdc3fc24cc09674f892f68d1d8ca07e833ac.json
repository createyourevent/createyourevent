{"ast":null,"code":"import { Injectable, Component, EventEmitter, Input, Output, ChangeDetectionStrategy, ElementRef, Renderer2, ViewEncapsulation, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction BoardComponent_tile_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tile\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tileData_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"data\", tileData_r1);\n  }\n}\nconst PieceRotation = {\n  DEG_0: 0,\n  DEG_90: 1,\n  DEG_180: 2,\n  DEG_270: 3\n};\nPieceRotation[PieceRotation.DEG_0] = 'DEG_0';\nPieceRotation[PieceRotation.DEG_90] = 'DEG_90';\nPieceRotation[PieceRotation.DEG_180] = 'DEG_180';\nPieceRotation[PieceRotation.DEG_270] = 'DEG_270';\n/** @enum {number} */\nconst PieceTypes = {\n  Dot: 1,\n  Box: 2,\n  Line: 3,\n  T: 4,\n  L: 5,\n  Lr: 6,\n  Z: 7,\n  S: 8\n};\nPieceTypes[PieceTypes.Dot] = 'Dot';\nPieceTypes[PieceTypes.Box] = 'Box';\nPieceTypes[PieceTypes.Line] = 'Line';\nPieceTypes[PieceTypes.T] = 'T';\nPieceTypes[PieceTypes.L] = 'L';\nPieceTypes[PieceTypes.Lr] = 'Lr';\nPieceTypes[PieceTypes.Z] = 'Z';\nPieceTypes[PieceTypes.S] = 'S';\n/** @enum {string} */\nconst PieceColors = {\n  Box: 'color-box',\n  Dot: 'color-dot',\n  Line: 'color-line',\n  T: 'color-t',\n  L: 'color-l',\n  Lr: 'color-lr',\n  Z: 'color-z',\n  S: 'color-s'\n};\nclass Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   * @param {?} maps\n   */\n  constructor(x, y, gridSize, maps) {\n    this.color = 'red';\n    this.rotation = PieceRotation.DEG_0;\n    this.map = [[], []];\n    this._lastConfig = null;\n    this._gridSize = gridSize;\n    this.x = x;\n    this.y = y;\n    this._maps = maps;\n    this.map = this._maps[this.rotation];\n  }\n  /**\n   * @return {?}\n   */\n  get positionsOnGrid() {\n    /** @type {?} */\n    const acc = [];\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.map[row][col]) {\n          /** @type {?} */\n          const pos = (this.y + row) * this._gridSize.width + this.x + col;\n          if (pos > 0) {\n            acc.push(pos);\n          }\n        }\n      }\n    }\n    return acc;\n  }\n  /**\n   * @return {?}\n   */\n  store() {\n    this._lastConfig = {\n      x: this.x,\n      y: this.y,\n      rotation: this.rotation,\n      map: this.map\n    };\n  }\n  /**\n   * @return {?}\n   */\n  clearStore() {\n    this._lastConfig = null;\n  }\n  /**\n   * @return {?}\n   */\n  revert() {\n    if (this._lastConfig) {\n      for (const x in this._lastConfig) {\n        if (this._lastConfig.hasOwnProperty(x)) {\n          this[x] = this._lastConfig[x];\n        }\n      }\n      this._lastConfig = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  rotate() {\n    /** @type {?} */\n    const keys = Object.keys(this._maps);\n    /** @type {?} */\n    let idx = keys.indexOf(this.rotation.toString());\n    if (idx >= keys.length - 1) {\n      this.rotation = /** @type {?} */keys[0];\n    } else {\n      this.rotation = /** @type {?} */keys[++idx];\n    }\n    this.map = this._maps[this.rotation];\n  }\n  /**\n   * @return {?}\n   */\n  moveDown() {\n    this.y++;\n  }\n  /**\n   * @return {?}\n   */\n  moveRight() {\n    this.x++;\n  }\n  /**\n   * @return {?}\n   */\n  moveLeft() {\n    this.x--;\n  }\n  /**\n   * @return {?}\n   */\n  get bottomRow() {\n    return this.y + 3;\n  }\n  /**\n   * @return {?}\n   */\n  get rightCol() {\n    /** @type {?} */\n    let col = 3;\n    while (col >= 0) {\n      for (let row = 0; row <= 3; row++) {\n        if (this.map[row][col]) {\n          return this.x + col;\n        }\n      }\n      col--;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  get leftCol() {\n    return this.x;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.Box, undefined, undefined, undefined]];\nclass Dot extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS);\n    this.color = PieceColors['Dot'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$1 = [];\nMAPS$1[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.Box, PieceTypes.Box, undefined, undefined], [PieceTypes.Box, PieceTypes.Box, undefined, undefined]];\nclass Box extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$1);\n    this.color = PieceColors['Box'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$2 = [];\nMAPS$2[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.Line, PieceTypes.Line, PieceTypes.Line, PieceTypes.Line]];\nMAPS$2[PieceRotation.DEG_90] = [[PieceTypes.Line, undefined, undefined, undefined], [PieceTypes.Line, undefined, undefined, undefined], [PieceTypes.Line, undefined, undefined, undefined], [PieceTypes.Line, undefined, undefined, undefined]];\nclass Line extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$2);\n    this.color = PieceColors['Line'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$3 = {};\nMAPS$3[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, PieceTypes.T, undefined, undefined], [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined]];\nMAPS$3[PieceRotation.DEG_90] = [[undefined, undefined, undefined, undefined], [PieceTypes.T, undefined, undefined, undefined], [PieceTypes.T, PieceTypes.T, undefined, undefined], [PieceTypes.T, undefined, undefined, undefined]];\nMAPS$3[PieceRotation.DEG_180] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined], [undefined, PieceTypes.T, undefined, undefined]];\nMAPS$3[PieceRotation.DEG_270] = [[undefined, undefined, undefined, undefined], [undefined, PieceTypes.T, undefined, undefined], [PieceTypes.T, PieceTypes.T, undefined, undefined], [undefined, PieceTypes.T, undefined, undefined]];\nclass T extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$3);\n    this.color = PieceColors['T'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$4 = {};\nMAPS$4[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [undefined, PieceTypes.Z, undefined, undefined], [PieceTypes.Z, PieceTypes.Z, undefined, undefined], [PieceTypes.Z, undefined, undefined, undefined]];\nMAPS$4[PieceRotation.DEG_90] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.Z, PieceTypes.Z, undefined, undefined], [undefined, PieceTypes.Z, PieceTypes.Z, undefined]];\nclass Z extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$4);\n    this.color = PieceColors['Z'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$5 = {};\nMAPS$5[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [PieceTypes.S, undefined, undefined, undefined], [PieceTypes.S, PieceTypes.S, undefined, undefined], [undefined, PieceTypes.S, undefined, undefined]];\nMAPS$5[PieceRotation.DEG_90] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, PieceTypes.S, PieceTypes.S, undefined], [PieceTypes.S, PieceTypes.S, undefined, undefined]];\nclass S extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$5);\n    this.color = PieceColors['S'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$6 = {};\nMAPS$6[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [PieceTypes.L, undefined, undefined, undefined], [PieceTypes.L, undefined, undefined, undefined], [PieceTypes.L, PieceTypes.L, undefined, undefined]];\nMAPS$6[PieceRotation.DEG_90] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.L, PieceTypes.L, PieceTypes.L, undefined], [PieceTypes.L, undefined, undefined, undefined]];\nMAPS$6[PieceRotation.DEG_180] = [[undefined, undefined, undefined, undefined], [PieceTypes.L, PieceTypes.L, undefined, undefined], [undefined, PieceTypes.L, undefined, undefined], [undefined, PieceTypes.L, undefined, undefined]];\nMAPS$6[PieceRotation.DEG_270] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, undefined, PieceTypes.L, undefined], [PieceTypes.L, PieceTypes.L, PieceTypes.L, undefined]];\nclass L extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$6);\n    this.color = PieceColors['L'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$7 = {};\nMAPS$7[PieceRotation.DEG_0] = [[undefined, undefined, undefined, undefined], [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined], [undefined, PieceTypes.Lr, undefined, undefined], [undefined, PieceTypes.Lr, undefined, undefined]];\nMAPS$7[PieceRotation.DEG_90] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [undefined, undefined, PieceTypes.Lr, undefined], [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined]];\nMAPS$7[PieceRotation.DEG_180] = [[undefined, undefined, undefined, undefined], [PieceTypes.Lr, undefined, undefined, undefined], [PieceTypes.Lr, undefined, undefined, undefined], [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined]];\nMAPS$7[PieceRotation.DEG_270] = [[undefined, undefined, undefined, undefined], [undefined, undefined, undefined, undefined], [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined], [PieceTypes.Lr, undefined, undefined, undefined]];\nclass Lr extends Piece {\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @param {?} gridSize\n   */\n  constructor(x, y, gridSize) {\n    super(x, y, gridSize, MAPS$7);\n    this.color = PieceColors['Lr'];\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass PiecesFactory {\n  /**\n   * @param {?} gridSize\n   */\n  constructor(gridSize) {\n    this._available = [];\n    this._gridSize = gridSize;\n    this._available.push(Dot);\n    this._available.push(Box);\n    this._available.push(Line);\n    this._available.push(T);\n    this._available.push(Z);\n    this._available.push(S);\n    this._available.push(L);\n    this._available.push(Lr);\n  }\n  /**\n   * @param {?} x\n   * @param {?} y\n   * @return {?}\n   */\n  getRandomPiecePiece(x, y) {\n    /** @type {?} */\n    const idx = Math.floor(Math.random() * this._available.length);\n    return new this._available[idx](x, y, this._gridSize);\n    // return new this._available[2](x, y, this._gridSize);\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SPAWN_POSITION_X = 4;\n/** @type {?} */\nconst SPAWN_POSITION_Y = -4;\nclass Tile {\n  constructor() {\n    this.solid = false;\n    this.color = null;\n  }\n}\nclass GameManagerService {\n  constructor() {\n    this.settings = {\n      tileSize: null\n    };\n    this._gridSize = {\n      width: 0,\n      height: 0\n    };\n    this._locked = true;\n    this._lineCleared = new Subject();\n    this._gameOver = new Subject();\n    this.lineCleared$ = this._lineCleared.asObservable();\n    this.gameOver$ = this._gameOver.asObservable();\n  }\n  /**\n   * @return {?}\n   */\n  get elementsInRow() {\n    return this._gridSize.width;\n  }\n  /**\n   * @param {?} width\n   * @param {?} height\n   * @param {?} gameSpeed\n   * @param {?=} tileSize\n   * @return {?}\n   */\n  initialize(width, height, gameSpeed, tileSize) {\n    this._gridSize.width = width;\n    this._gridSize.height = height;\n    this._gameSpeed = gameSpeed;\n    this._piecesFactory = new PiecesFactory(this._gridSize);\n    if (tileSize) {\n      this.settings.tileSize = tileSize;\n    }\n    this._initializeEmptyBoard();\n    this._spawnNewPiece();\n    this._drawPiece();\n  }\n  /**\n   * @return {?}\n   */\n  start() {\n    clearInterval(this._gameInterval);\n    this._gameInterval = setInterval(() => {\n      this._update();\n    }, this._gameSpeed);\n    this._locked = false;\n  }\n  /**\n   * @return {?}\n   */\n  stop() {\n    this._locked = true;\n    clearInterval(this._gameInterval);\n  }\n  /**\n   * @return {?}\n   */\n  reset() {\n    /** @type {?} */\n    const emptyTile = new Tile();\n    for (let pos = 0; pos < this.grid.length; pos++) {\n      if (this.grid[pos].color || this.grid[pos].solid) {\n        this.__changeCell(pos, emptyTile);\n      }\n    }\n    this._spawnNewPiece();\n    this._drawPiece();\n  }\n  /**\n   * @return {?}\n   */\n  moveLeft() {\n    if (this._locked) {\n      return;\n    }\n    this._clearPiece();\n    this._piece.store();\n    this._piece.moveLeft();\n    if (this._collidesLeft()) {\n      this._piece.revert();\n    }\n    this._drawPiece();\n  }\n  /**\n   * @return {?}\n   */\n  moveRight() {\n    if (this._locked) {\n      return;\n    }\n    this._clearPiece();\n    this._piece.store();\n    this._piece.moveRight();\n    if (this._collidesRight()) {\n      this._piece.revert();\n    }\n    this._drawPiece();\n  }\n  /**\n   * @return {?}\n   */\n  rotate() {\n    if (this._locked) {\n      return;\n    }\n    this._clearPiece();\n    this._piece.store();\n    this._piece.rotate();\n    while (this._collidesRight()) {\n      this._piece.moveLeft();\n      if (this._collidesLeft()) {\n        this._piece.revert();\n        break;\n      }\n    }\n    this._drawPiece();\n  }\n  /**\n   * @return {?}\n   */\n  moveDown() {\n    this._update();\n  }\n  /**\n   * @return {?}\n   */\n  _clearFullLines() {\n    for (let row = this._gridSize.height - 1; row >= 0; row--) {\n      /** @type {?} */\n      let isFull = true;\n      for (let col = 0; col < this._gridSize.width; col++) {\n        /** @type {?} */\n        const pos = row * this._gridSize.width + col;\n        if (this.grid[pos].solid === false) {\n          isFull = false;\n          break;\n        }\n      }\n      if (isFull) {\n        /** @type {?} */\n        const emptyRow = Array.apply(null, Array(this._gridSize.width)).map(idx => new Tile());\n        /** @type {?} */\n        const topPortion = this.grid.slice(0, row * this._gridSize.width);\n        this.grid.splice(0, ++row * this._gridSize.width, ...emptyRow.concat(topPortion));\n        this._lineCleared.next();\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _update() {\n    if (this._locked) {\n      return;\n    }\n    this._locked = true;\n    this._piece.revert();\n    this._clearPiece();\n    this._piece.store();\n    this._piece.moveDown();\n    if (this._collidesBottom()) {\n      this._piece.revert();\n      this._markSolid();\n      this._drawPiece();\n      this._clearFullLines();\n      this._spawnNewPiece();\n      if (this._isGameOver()) {\n        this._onGameOver();\n        return;\n      }\n    }\n    this._drawPiece();\n    this._locked = false;\n  }\n  /**\n   * @return {?}\n   */\n  _isGameOver() {\n    this._piece.store();\n    this._piece.moveDown();\n    if (this._collidesBottom()) {\n      return true;\n    }\n    this._piece.revert();\n    return false;\n  }\n  /**\n   * @return {?}\n   */\n  _onGameOver() {\n    this.stop();\n    this._gameOver.next();\n  }\n  /**\n   * @return {?}\n   */\n  _spawnNewPiece() {\n    this._piece = this._piecesFactory.getRandomPiecePiece(SPAWN_POSITION_X, SPAWN_POSITION_Y);\n  }\n  /**\n   * @return {?}\n   */\n  _initializeEmptyBoard() {\n    /** @type {?} */\n    const cellsCount = this._gridSize.width * this._gridSize.height;\n    this.grid = Array.apply(null, Array(cellsCount)).map(idx => new Tile());\n  }\n  /**\n   * @return {?}\n   */\n  _clearPiece() {\n    this._piece.positionsOnGrid.forEach(pos => {\n      this.__changeCell(pos, {\n        color: undefined\n      });\n    });\n  }\n  /**\n   * @return {?}\n   */\n  _drawPiece() {\n    this._piece.clearStore();\n    this._piece.positionsOnGrid.forEach(pos => {\n      this.__changeCell(pos, {\n        color: this._piece.color\n      });\n    });\n  }\n  /**\n   * @return {?}\n   */\n  _markSolid() {\n    this._piece.positionsOnGrid.forEach(pos => {\n      this.__changeCell(pos, {\n        solid: true\n      });\n    });\n  }\n  /**\n   * @param {?} pos\n   * @param {?=} data\n   * @return {?}\n   */\n  __changeCell(pos, data = {}) {\n    this.grid[pos] = Object.assign({}, this.grid[pos], data);\n  }\n  /**\n   * @return {?}\n   */\n  _collidesBottom() {\n    if (this._piece.bottomRow >= this._gridSize.height) {\n      return true;\n    }\n    return this.__collides();\n  }\n  /**\n   * @return {?}\n   */\n  _collidesLeft() {\n    if (this._piece.leftCol < 0) {\n      return true;\n    }\n    return this.__collides();\n  }\n  /**\n   * @return {?}\n   */\n  _collidesRight() {\n    if (this._piece.rightCol >= this._gridSize.width) {\n      return true;\n    }\n    return this.__collides();\n  }\n  /**\n   * @return {?}\n   */\n  __collides() {\n    return this._piece.positionsOnGrid.some(pos => {\n      if (pos > 0 && this.grid[pos] && this.grid[pos].solid) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\nGameManagerService.ɵfac = function GameManagerService_Factory(t) {\n  return new (t || GameManagerService)();\n};\nGameManagerService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GameManagerService,\n  factory: GameManagerService.ɵfac\n});\n/** @nocollapse */\nGameManagerService.ctorParameters = () => [];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GameManagerService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst GAME_SPEED = 500;\n/** @type {?} */\nconst MOVE_DOWN_SPEED = 0.2; // fraction of initial game speed\n/** @enum {number} */\nconst GameState = {\n  Paused: 0,\n  Started: 1,\n  Over: 2\n};\nGameState[GameState.Paused] = 'Paused';\nGameState[GameState.Started] = 'Started';\nGameState[GameState.Over] = 'Over';\nclass TetrisCoreComponent {\n  /**\n   * @param {?} _manager\n   */\n  constructor(_manager) {\n    this._manager = _manager;\n    this.rotate = false;\n    this.moveLeft = false;\n    this.moveRight = false;\n    this.moveDown = false;\n    this.start = false;\n    this.stop = false;\n    this.reset = false;\n    this.lineCleared = new EventEmitter();\n    this.gameOver = new EventEmitter();\n    this.state = GameState.Paused;\n    this.gridWidth = 10;\n    this.gridHeight = 20;\n    this._manager.lineCleared$.subscribe(data => this._onLineCleared(data));\n    this._manager.gameOver$.subscribe(data => this._onGameOver(data));\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.initialSpeed = this.initialSpeed || GAME_SPEED;\n    this._moveDownSpeed = this.initialSpeed * MOVE_DOWN_SPEED;\n    this._manager.initialize(this.gridWidth, this.gridHeight, this.initialSpeed, this.tileSize);\n    this.grid = this._manager.grid;\n    setInterval(() => {\n      if (this.moveDown) {\n        this._manager.moveDown();\n      }\n    }, this._moveDownSpeed);\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    if (this._keyPressed(changes.moveLeft)) {\n      this._manager.moveLeft();\n    } else if (this._keyPressed(changes.moveRight)) {\n      this._manager.moveRight();\n    }\n    if (this._keyPressed(changes.rotate)) {\n      this._manager.rotate();\n    }\n    if (this._keyPressed(changes.start)) {\n      this._manager.start();\n    }\n    if (this._keyPressed(changes.stop)) {\n      this._manager.stop();\n    }\n    if (this._keyPressed(changes.reset)) {\n      this._manager.reset();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  actionLeft() {\n    this._manager.moveLeft();\n  }\n  /**\n   * @return {?}\n   */\n  actionRight() {\n    this._manager.moveRight();\n  }\n  /**\n   * @return {?}\n   */\n  actionRotate() {\n    this._manager.rotate();\n  }\n  /**\n   * @return {?}\n   */\n  actionDown() {\n    this._manager.moveDown();\n  }\n  /**\n   * @return {?}\n   */\n  actionReset() {\n    this._manager.reset();\n  }\n  /**\n   * @return {?}\n   */\n  actionStart() {\n    this._manager.start();\n    this.state = GameState.Started;\n  }\n  /**\n   * @return {?}\n   */\n  actionStop() {\n    this._manager.stop();\n    this.state = GameState.Paused;\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n  _keyPressed(key) {\n    return key && key.currentValue && !key.previousValue;\n  }\n  /**\n   * @param {?} data\n   * @return {?}\n   */\n  _onLineCleared(data) {\n    this.lineCleared.emit(data);\n  }\n  /**\n   * @param {?} data\n   * @return {?}\n   */\n  _onGameOver(data) {\n    this.state = GameState.Over;\n    this.gameOver.emit();\n  }\n}\nTetrisCoreComponent.ɵfac = function TetrisCoreComponent_Factory(t) {\n  return new (t || TetrisCoreComponent)(ɵngcc0.ɵɵdirectiveInject(GameManagerService));\n};\nTetrisCoreComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TetrisCoreComponent,\n  selectors: [[\"tetris-core\"]],\n  inputs: {\n    rotate: \"rotate\",\n    moveLeft: \"moveLeft\",\n    moveRight: \"moveRight\",\n    moveDown: \"moveDown\",\n    start: \"start\",\n    stop: \"stop\",\n    reset: \"reset\",\n    initialSpeed: \"initialSpeed\",\n    tileSize: \"tileSize\"\n  },\n  outputs: {\n    lineCleared: \"lineCleared\",\n    gameOver: \"gameOver\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"grid\"]],\n  template: function TetrisCoreComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"board\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"grid\", ctx.grid);\n    }\n  },\n  dependencies: function () {\n    return [BoardComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\nTetrisCoreComponent.ctorParameters = () => [{\n  type: GameManagerService\n}];\nTetrisCoreComponent.propDecorators = {\n  tileSize: [{\n    type: Input\n  }],\n  initialSpeed: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  moveLeft: [{\n    type: Input\n  }],\n  moveRight: [{\n    type: Input\n  }],\n  moveDown: [{\n    type: Input\n  }],\n  start: [{\n    type: Input\n  }],\n  stop: [{\n    type: Input\n  }],\n  reset: [{\n    type: Input\n  }],\n  lineCleared: [{\n    type: Output\n  }],\n  gameOver: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TetrisCoreComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tetris-core',\n      template: \"<board\\n    [grid]=\\\"grid\\\"></board>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: GameManagerService\n    }];\n  }, {\n    rotate: [{\n      type: Input\n    }],\n    moveLeft: [{\n      type: Input\n    }],\n    moveRight: [{\n      type: Input\n    }],\n    moveDown: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    stop: [{\n      type: Input\n    }],\n    reset: [{\n      type: Input\n    }],\n    lineCleared: [{\n      type: Output\n    }],\n    gameOver: [{\n      type: Output\n    }],\n    initialSpeed: [{\n      type: Input\n    }],\n    tileSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TileComponent {\n  /**\n   * @param {?} el\n   * @param {?} _renderer\n   * @param {?} _manager\n   */\n  constructor(el, _renderer, _manager) {\n    this.el = el;\n    this._renderer = _renderer;\n    this._manager = _manager;\n    this.tileSize = null;\n    if (this._manager.settings.tileSize) {\n      this.tileSize = this._manager.settings.tileSize;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (this.data.color) {\n      this._renderer.addClass(this.el.nativeElement, this.data.color);\n    }\n  }\n}\nTileComponent.ɵfac = function TileComponent_Factory(t) {\n  return new (t || TileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(GameManagerService));\n};\nTileComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TileComponent,\n  selectors: [[\"tile\"]],\n  hostVars: 4,\n  hostBindings: function TileComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.tileSize)(\"height\", ctx.tileSize);\n    }\n  },\n  inputs: {\n    data: \"data\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function TileComponent_Template(rf, ctx) {},\n  styles: [\"tile{display:block;background:rgba(176,230,225,.35);width:25px;height:25px;float:left;border:1px solid #4e4645;margin:1px}tile.color-box{background:#fca}tile.color-dot{background:#ff77a8}tile.color-line{background:#83769c}tile.color-t{background:#29adff}tile.color-l{background:#00e436}tile.color-lr{background:#ffec27}tile.color-z{background:#ffa300}tile.color-s{background:#c2c3c7}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nTileComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: GameManagerService\n}];\nTileComponent.propDecorators = {\n  data: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TileComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tile',\n      template: \"\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[style.width]': 'tileSize',\n        '[style.height]': 'tileSize'\n      },\n      styles: [\"tile{display:block;background:rgba(176,230,225,.35);width:25px;height:25px;float:left;border:1px solid #4e4645;margin:1px}tile.color-box{background:#fca}tile.color-dot{background:#ff77a8}tile.color-line{background:#83769c}tile.color-t{background:#29adff}tile.color-l{background:#00e436}tile.color-lr{background:#ffec27}tile.color-z{background:#ffa300}tile.color-s{background:#c2c3c7}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: GameManagerService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass BoardComponent {\n  /**\n   * @param {?} _manager\n   */\n  constructor(_manager) {\n    this._manager = _manager;\n    this.boardWidth = null;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    if (this._manager.settings.tileSize) {\n      /** @type {?} */\n      const bb = this.tile.el.nativeElement.getBoundingClientRect();\n      /** @type {?} */\n      const TILE_MARGIN = 1;\n      /** @type {?} */\n      const oneTileSpace = bb.width + 2 * TILE_MARGIN;\n      this.boardWidth = oneTileSpace * this._manager.elementsInRow;\n    }\n  }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(ɵngcc0.ɵɵdirectiveInject(GameManagerService));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"board\"]],\n  viewQuery: function BoardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TileComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tile = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function BoardComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.boardWidth + \"px\");\n    }\n  },\n  inputs: {\n    grid: \"grid\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"data\", 4, \"ngFor\", \"ngForOf\"], [3, \"data\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, BoardComponent_tile_0_Template, 2, 1, \"tile\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid);\n    }\n  },\n  dependencies: [ɵngcc1.NgForOf, TileComponent],\n  styles: [\"[_nghost-%COMP%]{width:290px;display:block}\"]\n});\n/** @nocollapse */\nBoardComponent.ctorParameters = () => [{\n  type: GameManagerService\n}];\nBoardComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  tile: [{\n    type: ViewChild,\n    args: [TileComponent]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BoardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'board',\n      template: \"<tile *ngFor=\\\"let tileData of grid\\\"\\n    [data]=\\\"tileData\\\">\\n</tile>\\n\",\n      host: {\n        '[style.width]': 'boardWidth + \"px\"'\n      },\n      styles: [\":host{width:290px;display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: GameManagerService\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }],\n    tile: [{\n      type: ViewChild,\n      args: [TileComponent]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TetrisCoreModule {\n  /**\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: TetrisCoreModule\n    };\n  }\n}\nTetrisCoreModule.ɵfac = function TetrisCoreModule_Factory(t) {\n  return new (t || TetrisCoreModule)();\n};\nTetrisCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: TetrisCoreModule\n});\nTetrisCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [GameManagerService],\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TetrisCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TetrisCoreComponent, BoardComponent, TileComponent],\n      providers: [GameManagerService],\n      exports: [TetrisCoreComponent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TetrisCoreModule, {\n    declarations: function () {\n      return [TetrisCoreComponent, BoardComponent, TileComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [TetrisCoreComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { TetrisCoreModule, GameState, TetrisCoreComponent, BoardComponent as ɵb, GameManagerService as ɵa, TileComponent as ɵc };","map":{"version":3,"names":["Injectable","Component","EventEmitter","Input","Output","ChangeDetectionStrategy","ElementRef","Renderer2","ViewEncapsulation","ViewChild","NgModule","Subject","CommonModule","ɵngcc0","ɵngcc1","BoardComponent_tile_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","tileData_r1","$implicit","ɵɵproperty","PieceRotation","DEG_0","DEG_90","DEG_180","DEG_270","PieceTypes","Dot","Box","Line","T","L","Lr","Z","S","PieceColors","Piece","constructor","x","y","gridSize","maps","color","rotation","map","_lastConfig","_gridSize","_maps","positionsOnGrid","acc","row","col","pos","width","push","store","clearStore","revert","hasOwnProperty","rotate","keys","Object","idx","indexOf","toString","length","moveDown","moveRight","moveLeft","bottomRow","rightCol","leftCol","MAPS","undefined","MAPS$1","MAPS$2","MAPS$3","MAPS$4","MAPS$5","MAPS$6","MAPS$7","PiecesFactory","_available","getRandomPiecePiece","Math","floor","random","SPAWN_POSITION_X","SPAWN_POSITION_Y","Tile","solid","GameManagerService","settings","tileSize","height","_locked","_lineCleared","_gameOver","lineCleared$","asObservable","gameOver$","elementsInRow","initialize","gameSpeed","_gameSpeed","_piecesFactory","_initializeEmptyBoard","_spawnNewPiece","_drawPiece","start","clearInterval","_gameInterval","setInterval","_update","stop","reset","emptyTile","grid","__changeCell","_clearPiece","_piece","_collidesLeft","_collidesRight","_clearFullLines","isFull","emptyRow","Array","apply","topPortion","slice","splice","concat","next","_collidesBottom","_markSolid","_isGameOver","_onGameOver","cellsCount","forEach","data","assign","__collides","some","ɵfac","GameManagerService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","ngDevMode","ɵsetClassMetadata","type","GAME_SPEED","MOVE_DOWN_SPEED","GameState","Paused","Started","Over","TetrisCoreComponent","_manager","lineCleared","gameOver","state","gridWidth","gridHeight","subscribe","_onLineCleared","ngOnInit","initialSpeed","_moveDownSpeed","ngOnChanges","changes","_keyPressed","actionLeft","actionRight","actionRotate","actionDown","actionReset","actionStart","actionStop","key","currentValue","previousValue","emit","TetrisCoreComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","TetrisCoreComponent_Template","ɵɵelement","dependencies","BoardComponent","encapsulation","propDecorators","args","selector","TileComponent","el","_renderer","addClass","nativeElement","TileComponent_Factory","hostVars","hostBindings","TileComponent_HostBindings","ɵɵstyleProp","TileComponent_Template","styles","changeDetection","None","OnPush","host","boardWidth","ngAfterViewInit","bb","tile","getBoundingClientRect","TILE_MARGIN","oneTileSpace","BoardComponent_Factory","viewQuery","BoardComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","BoardComponent_HostBindings","BoardComponent_Template","ɵɵtemplate","NgForOf","TetrisCoreModule","forRoot","ngModule","TetrisCoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵb","ɵa","ɵc"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/ngx-tetris/__ivy_ngcc__/fesm2015/ngx-tetris.js"],"sourcesContent":["import { Injectable, Component, EventEmitter, Input, Output, ChangeDetectionStrategy, ElementRef, Renderer2, ViewEncapsulation, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction BoardComponent_tile_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tile\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tileData_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"data\", tileData_r1);\n} }\nconst PieceRotation = {\n    DEG_0: 0,\n    DEG_90: 1,\n    DEG_180: 2,\n    DEG_270: 3,\n};\nPieceRotation[PieceRotation.DEG_0] = 'DEG_0';\nPieceRotation[PieceRotation.DEG_90] = 'DEG_90';\nPieceRotation[PieceRotation.DEG_180] = 'DEG_180';\nPieceRotation[PieceRotation.DEG_270] = 'DEG_270';\n/** @enum {number} */\nconst PieceTypes = {\n    Dot: 1,\n    Box: 2,\n    Line: 3,\n    T: 4,\n    L: 5,\n    Lr: 6,\n    Z: 7,\n    S: 8,\n};\nPieceTypes[PieceTypes.Dot] = 'Dot';\nPieceTypes[PieceTypes.Box] = 'Box';\nPieceTypes[PieceTypes.Line] = 'Line';\nPieceTypes[PieceTypes.T] = 'T';\nPieceTypes[PieceTypes.L] = 'L';\nPieceTypes[PieceTypes.Lr] = 'Lr';\nPieceTypes[PieceTypes.Z] = 'Z';\nPieceTypes[PieceTypes.S] = 'S';\n/** @enum {string} */\nconst PieceColors = {\n    Box: 'color-box',\n    Dot: 'color-dot',\n    Line: 'color-line',\n    T: 'color-t',\n    L: 'color-l',\n    Lr: 'color-lr',\n    Z: 'color-z',\n    S: 'color-s',\n};\nclass Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     * @param {?} maps\n     */\n    constructor(x, y, gridSize, maps) {\n        this.color = 'red';\n        this.rotation = PieceRotation.DEG_0;\n        this.map = [\n            [], []\n        ];\n        this._lastConfig = null;\n        this._gridSize = gridSize;\n        this.x = x;\n        this.y = y;\n        this._maps = maps;\n        this.map = this._maps[this.rotation];\n    }\n    /**\n     * @return {?}\n     */\n    get positionsOnGrid() {\n        /** @type {?} */\n        const acc = [];\n        for (let row = 0; row < 4; row++) {\n            for (let col = 0; col < 4; col++) {\n                if (this.map[row][col]) {\n                    /** @type {?} */\n                    const pos = (this.y + row) * this._gridSize.width + this.x + col;\n                    if (pos > 0) {\n                        acc.push(pos);\n                    }\n                }\n            }\n        }\n        return acc;\n    }\n    /**\n     * @return {?}\n     */\n    store() {\n        this._lastConfig = {\n            x: this.x,\n            y: this.y,\n            rotation: this.rotation,\n            map: this.map\n        };\n    }\n    /**\n     * @return {?}\n     */\n    clearStore() {\n        this._lastConfig = null;\n    }\n    /**\n     * @return {?}\n     */\n    revert() {\n        if (this._lastConfig) {\n            for (const x in this._lastConfig) {\n                if (this._lastConfig.hasOwnProperty(x)) {\n                    this[x] = this._lastConfig[x];\n                }\n            }\n            this._lastConfig = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    rotate() {\n        /** @type {?} */\n        const keys = Object.keys(this._maps);\n        /** @type {?} */\n        let idx = keys.indexOf(this.rotation.toString());\n        if (idx >= keys.length - 1) {\n            this.rotation = /** @type {?} */ (keys[0]);\n        }\n        else {\n            this.rotation = /** @type {?} */ (keys[++idx]);\n        }\n        this.map = this._maps[this.rotation];\n    }\n    /**\n     * @return {?}\n     */\n    moveDown() {\n        this.y++;\n    }\n    /**\n     * @return {?}\n     */\n    moveRight() {\n        this.x++;\n    }\n    /**\n     * @return {?}\n     */\n    moveLeft() {\n        this.x--;\n    }\n    /**\n     * @return {?}\n     */\n    get bottomRow() {\n        return this.y + 3;\n    }\n    /**\n     * @return {?}\n     */\n    get rightCol() {\n        /** @type {?} */\n        let col = 3;\n        while (col >= 0) {\n            for (let row = 0; row <= 3; row++) {\n                if (this.map[row][col]) {\n                    return this.x + col;\n                }\n            }\n            col--;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get leftCol() {\n        return this.x;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Box, undefined, undefined, undefined],\n];\nclass Dot extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Dot'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$1 = [];\nMAPS$1[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Box, PieceTypes.Box, undefined, undefined],\n    [PieceTypes.Box, PieceTypes.Box, undefined, undefined],\n];\nclass Box extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$1);\n        this.color = PieceColors['Box'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$2 = [];\nMAPS$2[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Line, PieceTypes.Line, PieceTypes.Line, PieceTypes.Line],\n];\nMAPS$2[PieceRotation.DEG_90] = [\n    [PieceTypes.Line, undefined, undefined, undefined],\n    [PieceTypes.Line, undefined, undefined, undefined],\n    [PieceTypes.Line, undefined, undefined, undefined],\n    [PieceTypes.Line, undefined, undefined, undefined],\n];\nclass Line extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$2);\n        this.color = PieceColors['Line'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$3 = {};\nMAPS$3[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, PieceTypes.T, undefined, undefined],\n    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],\n];\nMAPS$3[PieceRotation.DEG_90] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.T, undefined, undefined, undefined],\n    [PieceTypes.T, PieceTypes.T, undefined, undefined],\n    [PieceTypes.T, undefined, undefined, undefined],\n];\nMAPS$3[PieceRotation.DEG_180] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],\n    [undefined, PieceTypes.T, undefined, undefined],\n];\nMAPS$3[PieceRotation.DEG_270] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, PieceTypes.T, undefined, undefined],\n    [PieceTypes.T, PieceTypes.T, undefined, undefined],\n    [undefined, PieceTypes.T, undefined, undefined],\n];\nclass T extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$3);\n        this.color = PieceColors['T'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$4 = {};\nMAPS$4[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, PieceTypes.Z, undefined, undefined],\n    [PieceTypes.Z, PieceTypes.Z, undefined, undefined],\n    [PieceTypes.Z, undefined, undefined, undefined],\n];\nMAPS$4[PieceRotation.DEG_90] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Z, PieceTypes.Z, undefined, undefined],\n    [undefined, PieceTypes.Z, PieceTypes.Z, undefined],\n];\nclass Z extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$4);\n        this.color = PieceColors['Z'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$5 = {};\nMAPS$5[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.S, undefined, undefined, undefined],\n    [PieceTypes.S, PieceTypes.S, undefined, undefined],\n    [undefined, PieceTypes.S, undefined, undefined],\n];\nMAPS$5[PieceRotation.DEG_90] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, PieceTypes.S, PieceTypes.S, undefined],\n    [PieceTypes.S, PieceTypes.S, undefined, undefined],\n];\nclass S extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$5);\n        this.color = PieceColors['S'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$6 = {};\nMAPS$6[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.L, undefined, undefined, undefined],\n    [PieceTypes.L, undefined, undefined, undefined],\n    [PieceTypes.L, PieceTypes.L, undefined, undefined],\n];\nMAPS$6[PieceRotation.DEG_90] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.L, PieceTypes.L, PieceTypes.L, undefined],\n    [PieceTypes.L, undefined, undefined, undefined],\n];\nMAPS$6[PieceRotation.DEG_180] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.L, PieceTypes.L, undefined, undefined],\n    [undefined, PieceTypes.L, undefined, undefined],\n    [undefined, PieceTypes.L, undefined, undefined],\n];\nMAPS$6[PieceRotation.DEG_270] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, PieceTypes.L, undefined],\n    [PieceTypes.L, PieceTypes.L, PieceTypes.L, undefined],\n];\nclass L extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$6);\n        this.color = PieceColors['L'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPS$7 = {};\nMAPS$7[PieceRotation.DEG_0] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],\n    [undefined, PieceTypes.Lr, undefined, undefined],\n    [undefined, PieceTypes.Lr, undefined, undefined],\n];\nMAPS$7[PieceRotation.DEG_90] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, PieceTypes.Lr, undefined],\n    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],\n];\nMAPS$7[PieceRotation.DEG_180] = [\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Lr, undefined, undefined, undefined],\n    [PieceTypes.Lr, undefined, undefined, undefined],\n    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],\n];\nMAPS$7[PieceRotation.DEG_270] = [\n    [undefined, undefined, undefined, undefined],\n    [undefined, undefined, undefined, undefined],\n    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],\n    [PieceTypes.Lr, undefined, undefined, undefined],\n];\nclass Lr extends Piece {\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @param {?} gridSize\n     */\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS$7);\n        this.color = PieceColors['Lr'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass PiecesFactory {\n    /**\n     * @param {?} gridSize\n     */\n    constructor(gridSize) {\n        this._available = [];\n        this._gridSize = gridSize;\n        this._available.push(Dot);\n        this._available.push(Box);\n        this._available.push(Line);\n        this._available.push(T);\n        this._available.push(Z);\n        this._available.push(S);\n        this._available.push(L);\n        this._available.push(Lr);\n    }\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    getRandomPiecePiece(x, y) {\n        /** @type {?} */\n        const idx = Math.floor(Math.random() * (this._available.length));\n        return new this._available[idx](x, y, this._gridSize);\n        // return new this._available[2](x, y, this._gridSize);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SPAWN_POSITION_X = 4;\n/** @type {?} */\nconst SPAWN_POSITION_Y = -4;\nclass Tile {\n    constructor() {\n        this.solid = false;\n        this.color = null;\n    }\n}\nclass GameManagerService {\n    constructor() {\n        this.settings = {\n            tileSize: null\n        };\n        this._gridSize = { width: 0, height: 0 };\n        this._locked = true;\n        this._lineCleared = new Subject();\n        this._gameOver = new Subject();\n        this.lineCleared$ = this._lineCleared.asObservable();\n        this.gameOver$ = this._gameOver.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    get elementsInRow() {\n        return this._gridSize.width;\n    }\n    /**\n     * @param {?} width\n     * @param {?} height\n     * @param {?} gameSpeed\n     * @param {?=} tileSize\n     * @return {?}\n     */\n    initialize(width, height, gameSpeed, tileSize) {\n        this._gridSize.width = width;\n        this._gridSize.height = height;\n        this._gameSpeed = gameSpeed;\n        this._piecesFactory = new PiecesFactory(this._gridSize);\n        if (tileSize) {\n            this.settings.tileSize = tileSize;\n        }\n        this._initializeEmptyBoard();\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n    /**\n     * @return {?}\n     */\n    start() {\n        clearInterval(this._gameInterval);\n        this._gameInterval = setInterval(() => {\n            this._update();\n        }, this._gameSpeed);\n        this._locked = false;\n    }\n    /**\n     * @return {?}\n     */\n    stop() {\n        this._locked = true;\n        clearInterval(this._gameInterval);\n    }\n    /**\n     * @return {?}\n     */\n    reset() {\n        /** @type {?} */\n        const emptyTile = new Tile();\n        for (let pos = 0; pos < this.grid.length; pos++) {\n            if (this.grid[pos].color || this.grid[pos].solid) {\n                this.__changeCell(pos, emptyTile);\n            }\n        }\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n    /**\n     * @return {?}\n     */\n    moveLeft() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n        this._piece.moveLeft();\n        if (this._collidesLeft()) {\n            this._piece.revert();\n        }\n        this._drawPiece();\n    }\n    /**\n     * @return {?}\n     */\n    moveRight() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n        this._piece.moveRight();\n        if (this._collidesRight()) {\n            this._piece.revert();\n        }\n        this._drawPiece();\n    }\n    /**\n     * @return {?}\n     */\n    rotate() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n        this._piece.rotate();\n        while (this._collidesRight()) {\n            this._piece.moveLeft();\n            if (this._collidesLeft()) {\n                this._piece.revert();\n                break;\n            }\n        }\n        this._drawPiece();\n    }\n    /**\n     * @return {?}\n     */\n    moveDown() {\n        this._update();\n    }\n    /**\n     * @return {?}\n     */\n    _clearFullLines() {\n        for (let row = this._gridSize.height - 1; row >= 0; row--) {\n            /** @type {?} */\n            let isFull = true;\n            for (let col = 0; col < this._gridSize.width; col++) {\n                /** @type {?} */\n                const pos = row * this._gridSize.width + col;\n                if (this.grid[pos].solid === false) {\n                    isFull = false;\n                    break;\n                }\n            }\n            if (isFull) {\n                /** @type {?} */\n                const emptyRow = Array.apply(null, Array(this._gridSize.width))\n                    .map((idx) => new Tile());\n                /** @type {?} */\n                const topPortion = this.grid.slice(0, row * this._gridSize.width);\n                this.grid.splice(0, ++row * this._gridSize.width, ...emptyRow.concat(topPortion));\n                this._lineCleared.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _update() {\n        if (this._locked) {\n            return;\n        }\n        this._locked = true;\n        this._piece.revert();\n        this._clearPiece();\n        this._piece.store();\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            this._piece.revert();\n            this._markSolid();\n            this._drawPiece();\n            this._clearFullLines();\n            this._spawnNewPiece();\n            if (this._isGameOver()) {\n                this._onGameOver();\n                return;\n            }\n        }\n        this._drawPiece();\n        this._locked = false;\n    }\n    /**\n     * @return {?}\n     */\n    _isGameOver() {\n        this._piece.store();\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            return true;\n        }\n        this._piece.revert();\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    _onGameOver() {\n        this.stop();\n        this._gameOver.next();\n    }\n    /**\n     * @return {?}\n     */\n    _spawnNewPiece() {\n        this._piece = this._piecesFactory.getRandomPiecePiece(SPAWN_POSITION_X, SPAWN_POSITION_Y);\n    }\n    /**\n     * @return {?}\n     */\n    _initializeEmptyBoard() {\n        /** @type {?} */\n        const cellsCount = this._gridSize.width * this._gridSize.height;\n        this.grid = Array.apply(null, Array(cellsCount))\n            .map((idx) => new Tile());\n    }\n    /**\n     * @return {?}\n     */\n    _clearPiece() {\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n            this.__changeCell(pos, { color: undefined });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _drawPiece() {\n        this._piece.clearStore();\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n            this.__changeCell(pos, { color: this._piece.color });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _markSolid() {\n        this._piece.positionsOnGrid.forEach((pos) => {\n            this.__changeCell(pos, { solid: true });\n        });\n    }\n    /**\n     * @param {?} pos\n     * @param {?=} data\n     * @return {?}\n     */\n    __changeCell(pos, data = {}) {\n        this.grid[pos] = Object.assign({}, this.grid[pos], data);\n    }\n    /**\n     * @return {?}\n     */\n    _collidesBottom() {\n        if (this._piece.bottomRow >= this._gridSize.height) {\n            return true;\n        }\n        return this.__collides();\n    }\n    /**\n     * @return {?}\n     */\n    _collidesLeft() {\n        if (this._piece.leftCol < 0) {\n            return true;\n        }\n        return this.__collides();\n    }\n    /**\n     * @return {?}\n     */\n    _collidesRight() {\n        if (this._piece.rightCol >= this._gridSize.width) {\n            return true;\n        }\n        return this.__collides();\n    }\n    /**\n     * @return {?}\n     */\n    __collides() {\n        return this._piece.positionsOnGrid\n            .some((pos) => {\n            if (pos > 0 && this.grid[pos] && this.grid[pos].solid) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\nGameManagerService.ɵfac = function GameManagerService_Factory(t) { return new (t || GameManagerService)(); };\nGameManagerService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GameManagerService, factory: GameManagerService.ɵfac });\n/** @nocollapse */\nGameManagerService.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GameManagerService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst GAME_SPEED = 500;\n/** @type {?} */\nconst MOVE_DOWN_SPEED = 0.2; // fraction of initial game speed\n/** @enum {number} */\nconst GameState = {\n    Paused: 0,\n    Started: 1,\n    Over: 2,\n};\nGameState[GameState.Paused] = 'Paused';\nGameState[GameState.Started] = 'Started';\nGameState[GameState.Over] = 'Over';\nclass TetrisCoreComponent {\n    /**\n     * @param {?} _manager\n     */\n    constructor(_manager) {\n        this._manager = _manager;\n        this.rotate = false;\n        this.moveLeft = false;\n        this.moveRight = false;\n        this.moveDown = false;\n        this.start = false;\n        this.stop = false;\n        this.reset = false;\n        this.lineCleared = new EventEmitter();\n        this.gameOver = new EventEmitter();\n        this.state = GameState.Paused;\n        this.gridWidth = 10;\n        this.gridHeight = 20;\n        this._manager.lineCleared$.subscribe((data) => this._onLineCleared(data));\n        this._manager.gameOver$.subscribe((data) => this._onGameOver(data));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.initialSpeed = this.initialSpeed || GAME_SPEED;\n        this._moveDownSpeed = this.initialSpeed * MOVE_DOWN_SPEED;\n        this._manager.initialize(this.gridWidth, this.gridHeight, this.initialSpeed, this.tileSize);\n        this.grid = this._manager.grid;\n        setInterval(() => {\n            if (this.moveDown) {\n                this._manager.moveDown();\n            }\n        }, this._moveDownSpeed);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._keyPressed(changes.moveLeft)) {\n            this._manager.moveLeft();\n        }\n        else if (this._keyPressed(changes.moveRight)) {\n            this._manager.moveRight();\n        }\n        if (this._keyPressed(changes.rotate)) {\n            this._manager.rotate();\n        }\n        if (this._keyPressed(changes.start)) {\n            this._manager.start();\n        }\n        if (this._keyPressed(changes.stop)) {\n            this._manager.stop();\n        }\n        if (this._keyPressed(changes.reset)) {\n            this._manager.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    actionLeft() { this._manager.moveLeft(); }\n    /**\n     * @return {?}\n     */\n    actionRight() { this._manager.moveRight(); }\n    /**\n     * @return {?}\n     */\n    actionRotate() { this._manager.rotate(); }\n    /**\n     * @return {?}\n     */\n    actionDown() { this._manager.moveDown(); }\n    /**\n     * @return {?}\n     */\n    actionReset() { this._manager.reset(); }\n    /**\n     * @return {?}\n     */\n    actionStart() {\n        this._manager.start();\n        this.state = GameState.Started;\n    }\n    /**\n     * @return {?}\n     */\n    actionStop() {\n        this._manager.stop();\n        this.state = GameState.Paused;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    _keyPressed(key) {\n        return key && key.currentValue && !key.previousValue;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    _onLineCleared(data) {\n        this.lineCleared.emit(data);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    _onGameOver(data) {\n        this.state = GameState.Over;\n        this.gameOver.emit();\n    }\n}\nTetrisCoreComponent.ɵfac = function TetrisCoreComponent_Factory(t) { return new (t || TetrisCoreComponent)(ɵngcc0.ɵɵdirectiveInject(GameManagerService)); };\nTetrisCoreComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TetrisCoreComponent, selectors: [[\"tetris-core\"]], inputs: { rotate: \"rotate\", moveLeft: \"moveLeft\", moveRight: \"moveRight\", moveDown: \"moveDown\", start: \"start\", stop: \"stop\", reset: \"reset\", initialSpeed: \"initialSpeed\", tileSize: \"tileSize\" }, outputs: { lineCleared: \"lineCleared\", gameOver: \"gameOver\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[3, \"grid\"]], template: function TetrisCoreComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"board\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"grid\", ctx.grid);\n    } }, dependencies: function () { return [BoardComponent]; }, encapsulation: 2 });\n/** @nocollapse */\nTetrisCoreComponent.ctorParameters = () => [\n    { type: GameManagerService }\n];\nTetrisCoreComponent.propDecorators = {\n    tileSize: [{ type: Input }],\n    initialSpeed: [{ type: Input }],\n    rotate: [{ type: Input }],\n    moveLeft: [{ type: Input }],\n    moveRight: [{ type: Input }],\n    moveDown: [{ type: Input }],\n    start: [{ type: Input }],\n    stop: [{ type: Input }],\n    reset: [{ type: Input }],\n    lineCleared: [{ type: Output }],\n    gameOver: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TetrisCoreComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tetris-core',\n                template: \"<board\\n    [grid]=\\\"grid\\\"></board>\\n\"\n            }]\n    }], function () { return [{ type: GameManagerService }]; }, { rotate: [{\n            type: Input\n        }], moveLeft: [{\n            type: Input\n        }], moveRight: [{\n            type: Input\n        }], moveDown: [{\n            type: Input\n        }], start: [{\n            type: Input\n        }], stop: [{\n            type: Input\n        }], reset: [{\n            type: Input\n        }], lineCleared: [{\n            type: Output\n        }], gameOver: [{\n            type: Output\n        }], initialSpeed: [{\n            type: Input\n        }], tileSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TileComponent {\n    /**\n     * @param {?} el\n     * @param {?} _renderer\n     * @param {?} _manager\n     */\n    constructor(el, _renderer, _manager) {\n        this.el = el;\n        this._renderer = _renderer;\n        this._manager = _manager;\n        this.tileSize = null;\n        if (this._manager.settings.tileSize) {\n            this.tileSize = this._manager.settings.tileSize;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.data.color) {\n            this._renderer.addClass(this.el.nativeElement, this.data.color);\n        }\n    }\n}\nTileComponent.ɵfac = function TileComponent_Factory(t) { return new (t || TileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(GameManagerService)); };\nTileComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TileComponent, selectors: [[\"tile\"]], hostVars: 4, hostBindings: function TileComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.tileSize)(\"height\", ctx.tileSize);\n    } }, inputs: { data: \"data\" }, decls: 0, vars: 0, template: function TileComponent_Template(rf, ctx) { }, styles: [\"tile{display:block;background:rgba(176,230,225,.35);width:25px;height:25px;float:left;border:1px solid #4e4645;margin:1px}tile.color-box{background:#fca}tile.color-dot{background:#ff77a8}tile.color-line{background:#83769c}tile.color-t{background:#29adff}tile.color-l{background:#00e436}tile.color-lr{background:#ffec27}tile.color-z{background:#ffa300}tile.color-s{background:#c2c3c7}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nTileComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: GameManagerService }\n];\nTileComponent.propDecorators = {\n    data: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TileComponent, [{\n        type: Component,\n        args: [{ selector: 'tile', template: \"\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                    '[style.width]': 'tileSize',\n                    '[style.height]': 'tileSize'\n                }, styles: [\"tile{display:block;background:rgba(176,230,225,.35);width:25px;height:25px;float:left;border:1px solid #4e4645;margin:1px}tile.color-box{background:#fca}tile.color-dot{background:#ff77a8}tile.color-line{background:#83769c}tile.color-t{background:#29adff}tile.color-l{background:#00e436}tile.color-lr{background:#ffec27}tile.color-z{background:#ffa300}tile.color-s{background:#c2c3c7}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: GameManagerService }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass BoardComponent {\n    /**\n     * @param {?} _manager\n     */\n    constructor(_manager) {\n        this._manager = _manager;\n        this.boardWidth = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._manager.settings.tileSize) {\n            /** @type {?} */\n            const bb = this.tile.el.nativeElement.getBoundingClientRect();\n            /** @type {?} */\n            const TILE_MARGIN = 1;\n            /** @type {?} */\n            const oneTileSpace = bb.width + 2 * TILE_MARGIN;\n            this.boardWidth = oneTileSpace * this._manager.elementsInRow;\n        }\n    }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) { return new (t || BoardComponent)(ɵngcc0.ɵɵdirectiveInject(GameManagerService)); };\nBoardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BoardComponent, selectors: [[\"board\"]], viewQuery: function BoardComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TileComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tile = _t.first);\n    } }, hostVars: 2, hostBindings: function BoardComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.boardWidth + \"px\");\n    } }, inputs: { grid: \"grid\" }, decls: 2, vars: 1, consts: [[3, \"data\", 4, \"ngFor\", \"ngForOf\"], [3, \"data\"]], template: function BoardComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BoardComponent_tile_0_Template, 2, 1, \"tile\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid);\n    } }, dependencies: [ɵngcc1.NgForOf, TileComponent], styles: [\"[_nghost-%COMP%]{width:290px;display:block}\"] });\n/** @nocollapse */\nBoardComponent.ctorParameters = () => [\n    { type: GameManagerService }\n];\nBoardComponent.propDecorators = {\n    grid: [{ type: Input }],\n    tile: [{ type: ViewChild, args: [TileComponent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BoardComponent, [{\n        type: Component,\n        args: [{ selector: 'board', template: \"<tile *ngFor=\\\"let tileData of grid\\\"\\n    [data]=\\\"tileData\\\">\\n</tile>\\n\", host: {\n                    '[style.width]': 'boardWidth + \"px\"'\n                }, styles: [\":host{width:290px;display:block}\"] }]\n    }], function () { return [{ type: GameManagerService }]; }, { grid: [{\n            type: Input\n        }], tile: [{\n            type: ViewChild,\n            args: [TileComponent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TetrisCoreModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TetrisCoreModule\n        };\n    }\n}\nTetrisCoreModule.ɵfac = function TetrisCoreModule_Factory(t) { return new (t || TetrisCoreModule)(); };\nTetrisCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TetrisCoreModule });\nTetrisCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        GameManagerService\n    ], imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TetrisCoreModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    TetrisCoreComponent,\n                    BoardComponent,\n                    TileComponent\n                ],\n                providers: [\n                    GameManagerService\n                ],\n                exports: [TetrisCoreComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TetrisCoreModule, { declarations: function () { return [TetrisCoreComponent, BoardComponent, TileComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TetrisCoreComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { TetrisCoreModule, GameState, TetrisCoreComponent, BoardComponent as ɵb, GameManagerService as ɵa, TileComponent as ɵc };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}