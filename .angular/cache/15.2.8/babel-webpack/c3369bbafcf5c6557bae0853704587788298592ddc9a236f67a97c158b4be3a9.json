{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/google-geocode.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../shared/language/translate.directive\";\nimport * as i5 from \"../../views/boxes/service_slider/service__slider.component\";\nimport * as i6 from \"primeng/knob\";\nexport let DistanceServiceComponent = /*#__PURE__*/(() => {\n  class DistanceServiceComponent {\n    constructor(generalService, googleGeocoderService) {\n      this.generalService = generalService;\n      this.googleGeocoderService = googleGeocoderService;\n      this.servicesWithDistance = [];\n      this.distance = 0;\n    }\n    ngOnInit() {\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n      });\n    }\n    changeSliderRadius(e) {\n      console.log(e);\n      this.servicesWithDistance = [];\n      let latUser = 0;\n      let lngUser = 0;\n      let posUser;\n      const queryParam = this.user.address.replace(' ', '+');\n      this.googleGeocoderService.getFromAddress(queryParam).subscribe(res => {\n        const geocoder = res.body['results'];\n        const geometry = geocoder[0].geometry;\n        latUser = geometry.location.lat;\n        lngUser = geometry.location.lng;\n        posUser = new google.maps.LatLng(latUser, lngUser);\n        this.generalService.getServicesWhereActiveAndActiveOwnerTrue().subscribe(services => {\n          this.allServices = services.body;\n          let latService = 0;\n          let lngService = 0;\n          let posService;\n          let i = 0;\n          this.allServices.forEach(element => {\n            i++;\n            const queryParamShop = element.address.replace(' ', '+');\n            this.googleGeocoderService.getFromAddress(queryParamShop).subscribe(resShop => {\n              const geocoderShop = resShop.body['results'];\n              const geometryShop = geocoderShop[0].geometry;\n              latService = geometryShop.location.lat;\n              lngService = geometryShop.location.lng;\n              posService = new google.maps.LatLng(latService, lngService);\n              const distance = google.maps.geometry.spherical.computeDistanceBetween(posUser, posService);\n              const maxDistance = this.distance * 1000;\n              if (maxDistance > distance) {\n                this.servicesWithDistance.push(element);\n              }\n              if (i === this.allServices.length) {\n                this.servicesWithDistance = [].concat(this.servicesWithDistance);\n              }\n            });\n          });\n        });\n      });\n    }\n  }\n  DistanceServiceComponent.ɵfac = function DistanceServiceComponent_Factory(t) {\n    return new (t || DistanceServiceComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.GoogleGeocodeService));\n  };\n  DistanceServiceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DistanceServiceComponent,\n    selectors: [[\"jhi-distance-service\"]],\n    decls: 29,\n    vars: 8,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\"], [\"jhiTranslate\", \"distance.distance\"], [1, \"slider\", 3, \"ngModel\", \"step\", \"ngModelChange\", \"onChange\"], [1, \"col-md-12\"], [\"orientation\", \"horizontal\", \"verticalViewPortHeight\", \"600\", 3, \"numVisible\", \"numScroll\", \"circular\", \"autoplayInterval\", \"services\"]],\n    template: function DistanceServiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n\\t\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵtext(8, \"\\n            \");\n        i0.ɵɵelementStart(9, \"h5\");\n        i0.ɵɵelement(10, \"span\", 3);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \"\\n            \");\n        i0.ɵɵelementStart(13, \"p-knob\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DistanceServiceComponent_Template_p_knob_ngModelChange_13_listener($event) {\n          return ctx.distance = $event;\n        })(\"onChange\", function DistanceServiceComponent_Template_p_knob_onChange_13_listener($event) {\n          return ctx.changeSliderRadius($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n        \");\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵtext(17, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \"\\n\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n\\t\");\n        i0.ɵɵelementStart(20, \"div\", 1);\n        i0.ɵɵtext(21, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(22, \"div\", 5);\n        i0.ɵɵtext(23, \"\\n            \");\n        i0.ɵɵelement(24, \"jhi-service-slider\", 6);\n        i0.ɵɵtext(25, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\n\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(27, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \"\\n\\n\\n\\n\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate1(\"\", ctx.distance, \" Km\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.distance)(\"step\", 5);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"numVisible\", 4)(\"numScroll\", 1)(\"circular\", true)(\"autoplayInterval\", 3000)(\"services\", ctx.servicesWithDistance);\n      }\n    },\n    dependencies: [i3.NgControlStatus, i3.NgModel, i4.TranslateDirective, i5.ServiceSliderComponent, i6.Knob],\n    styles: [\".slider[_ngcontent-%COMP%]{width:250px;margin:25px}\"]\n  });\n  return DistanceServiceComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}