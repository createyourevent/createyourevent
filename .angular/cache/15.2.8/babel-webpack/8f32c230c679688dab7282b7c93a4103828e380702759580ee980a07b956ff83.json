{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@videogular/ngx-videogular/core';\nimport { VgStates, VgCoreModule } from '@videogular/ngx-videogular/core';\nlet VgOverlayPlayComponent = /*#__PURE__*/(() => {\n  class VgOverlayPlayComponent {\n    constructor(ref, API, fsAPI, controlsHidden) {\n      this.API = API;\n      this.fsAPI = fsAPI;\n      this.controlsHidden = controlsHidden;\n      this.vgSkipIfControlsHidden = false;\n      this.vgSkipIfControlsHiddenDelay = 0.5;\n      this.isNativeFullscreen = false;\n      this.areControlsHidden = false;\n      this.areControlsHiddenChangeTime = 0;\n      this.subscriptions = [];\n      this.isBuffering = false;\n      this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n      if (this.API.isPlayerReady) {\n        this.onPlayerReady();\n      } else {\n        this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n      }\n    }\n    onPlayerReady() {\n      this.target = this.API.getMediaById(this.vgFor);\n      this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n      this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n      this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n    }\n    onUpdateBuffer(isBuffering) {\n      this.isBuffering = isBuffering;\n    }\n    onChangeFullscreen(fsState) {\n      if (this.fsAPI.nativeFullscreen) {\n        this.isNativeFullscreen = fsState;\n      }\n    }\n    onHideControls(hidden) {\n      if (this.vgSkipIfControlsHidden && this.areControlsHidden != hidden) {\n        this.areControlsHiddenChangeTime = Date.now();\n      }\n      this.areControlsHidden = hidden;\n    }\n    onClick() {\n      if (this.vgSkipIfControlsHidden && (this.areControlsHidden || Date.now() - this.areControlsHiddenChangeTime < this.vgSkipIfControlsHiddenDelay * 1000)) {\n        return;\n      }\n      const state = this.getState();\n      switch (state) {\n        case VgStates.VG_PLAYING:\n          this.target.pause();\n          break;\n        case VgStates.VG_PAUSED:\n        case VgStates.VG_ENDED:\n          this.target.play();\n          break;\n      }\n    }\n    getState() {\n      let state = VgStates.VG_PAUSED;\n      if (this.target) {\n        if (this.target.state instanceof Array) {\n          for (let i = 0, l = this.target.state.length; i < l; i++) {\n            if (this.target.state[i] === VgStates.VG_PLAYING) {\n              state = VgStates.VG_PLAYING;\n              break;\n            }\n          }\n        } else {\n          state = this.target.state;\n        }\n      }\n      return state;\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n  }\n  /** @nocollapse */ /** @nocollapse */\n  /** @nocollapse */\n  /** @nocollapse */\n  VgOverlayPlayComponent.ɵfac = function VgOverlayPlayComponent_Factory(t) {\n    return new (t || VgOverlayPlayComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.VgApiService), i0.ɵɵdirectiveInject(i1.VgFullscreenApiService), i0.ɵɵdirectiveInject(i1.VgControlsHiddenService));\n  };\n  VgOverlayPlayComponent.ɵcmp = /** @pureOrBreakMyCode */i0.ɵɵdefineComponent({\n    type: VgOverlayPlayComponent,\n    selectors: [[\"vg-overlay-play\"]],\n    hostVars: 2,\n    hostBindings: function VgOverlayPlayComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function VgOverlayPlayComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n      }\n    },\n    inputs: {\n      vgFor: \"vgFor\",\n      vgSkipIfControlsHidden: \"vgSkipIfControlsHidden\",\n      vgSkipIfControlsHiddenDelay: \"vgSkipIfControlsHiddenDelay\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"vg-overlay-play\"], [1, \"overlay-play-container\"]],\n    template: function VgOverlayPlayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"vg-icon-play_arrow\", ctx.getState() !== \"playing\");\n      }\n    },\n    styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"],\n    encapsulation: 2\n  });\n  return VgOverlayPlayComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet VgOverlayPlayModule = /*#__PURE__*/(() => {\n  class VgOverlayPlayModule {}\n  /** @nocollapse */ /** @nocollapse */\n  /** @nocollapse */\n  /** @nocollapse */\n  /** @nocollapse */\n  /** @nocollapse */\n  VgOverlayPlayModule.ɵfac = function VgOverlayPlayModule_Factory(t) {\n    return new (t || VgOverlayPlayModule)();\n  };\n  VgOverlayPlayModule.ɵmod = /** @pureOrBreakMyCode */i0.ɵɵdefineNgModule({\n    type: VgOverlayPlayModule\n  });\n  VgOverlayPlayModule.ɵinj = /** @pureOrBreakMyCode */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, VgCoreModule]]\n  });\n  return VgOverlayPlayModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(VgOverlayPlayModule, {\n    declarations: [VgOverlayPlayComponent],\n    imports: [CommonModule, VgCoreModule],\n    exports: [VgOverlayPlayComponent]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgOverlayPlayComponent, VgOverlayPlayModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}