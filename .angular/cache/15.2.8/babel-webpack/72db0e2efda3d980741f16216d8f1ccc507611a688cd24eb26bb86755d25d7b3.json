{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getShopLikeDislikeIdentifier } from '../shop-like-dislike.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class ShopLikeDislikeService {\n  constructor(http, applicationConfigService) {\n    _defineProperty(this, \"http\", void 0);\n    _defineProperty(this, \"applicationConfigService\", void 0);\n    _defineProperty(this, \"resourceUrl\", this.applicationConfigService.getEndpointFor('api/shop-like-dislikes'));\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  create(shopLikeDislike) {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http.post(this.resourceUrl, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer(res)));\n  }\n  update(shopLikeDislike) {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http.put(`${this.resourceUrl}/${getShopLikeDislikeIdentifier(shopLikeDislike)}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer(res)));\n  }\n  partialUpdate(shopLikeDislike) {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http.patch(`${this.resourceUrl}/${getShopLikeDislikeIdentifier(shopLikeDislike)}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer(res)));\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer(res)));\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    }).pipe(map(res => this.convertDateArrayFromServer(res)));\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addShopLikeDislikeToCollectionIfMissing(shopLikeDislikeCollection, ...shopLikeDislikesToCheck) {\n    const shopLikeDislikes = shopLikeDislikesToCheck.filter(isPresent);\n    if (shopLikeDislikes.length > 0) {\n      const shopLikeDislikeCollectionIdentifiers = shopLikeDislikeCollection.map(shopLikeDislikeItem => getShopLikeDislikeIdentifier(shopLikeDislikeItem));\n      const shopLikeDislikesToAdd = shopLikeDislikes.filter(shopLikeDislikeItem => {\n        const shopLikeDislikeIdentifier = getShopLikeDislikeIdentifier(shopLikeDislikeItem);\n        if (shopLikeDislikeIdentifier == null || shopLikeDislikeCollectionIdentifiers.includes(shopLikeDislikeIdentifier)) {\n          return false;\n        }\n        shopLikeDislikeCollectionIdentifiers.push(shopLikeDislikeIdentifier);\n        return true;\n      });\n      return [...shopLikeDislikesToAdd, ...shopLikeDislikeCollection];\n    }\n    return shopLikeDislikeCollection;\n  }\n  convertDateFromClient(shopLikeDislike) {\n    return Object.assign({}, shopLikeDislike, {\n      date: shopLikeDislike.date?.isValid() ? shopLikeDislike.date.toJSON() : undefined\n    });\n  }\n  convertDateFromServer(res) {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n    }\n    return res;\n  }\n  convertDateArrayFromServer(res) {\n    if (res.body) {\n      res.body.forEach(shopLikeDislike => {\n        shopLikeDislike.date = shopLikeDislike.date ? dayjs(shopLikeDislike.date) : undefined;\n      });\n    }\n    return res;\n  }\n}\n_defineProperty(ShopLikeDislikeService, \"\\u0275fac\", function ShopLikeDislikeService_Factory(t) {\n  return new (t || ShopLikeDislikeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n});\n_defineProperty(ShopLikeDislikeService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShopLikeDislikeService,\n  factory: ShopLikeDislikeService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":"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","names":["map","dayjs","isPresent","createRequestOption","getShopLikeDislikeIdentifier","ShopLikeDislikeService","constructor","http","applicationConfigService","getEndpointFor","create","shopLikeDislike","copy","convertDateFromClient","post","resourceUrl","observe","pipe","res","convertDateFromServer","update","put","partialUpdate","patch","find","id","get","query","req","options","params","convertDateArrayFromServer","delete","addShopLikeDislikeToCollectionIfMissing","shopLikeDislikeCollection","shopLikeDislikesToCheck","shopLikeDislikes","filter","length","shopLikeDislikeCollectionIdentifiers","shopLikeDislikeItem","shopLikeDislikesToAdd","shopLikeDislikeIdentifier","includes","push","Object","assign","date","isValid","toJSON","undefined","body","forEach","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/shop-like-dislike/service/shop-like-dislike.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IShopLikeDislike, getShopLikeDislikeIdentifier } from '../shop-like-dislike.model';\n\nexport type EntityResponseType = HttpResponse<IShopLikeDislike>;\nexport type EntityArrayResponseType = HttpResponse<IShopLikeDislike[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class ShopLikeDislikeService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/shop-like-dislikes');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(shopLikeDislike: IShopLikeDislike): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http\n      .post<IShopLikeDislike>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(shopLikeDislike: IShopLikeDislike): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http\n      .put<IShopLikeDislike>(`${this.resourceUrl}/${getShopLikeDislikeIdentifier(shopLikeDislike) as number}`, copy, {\n        observe: 'response',\n      })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  partialUpdate(shopLikeDislike: IShopLikeDislike): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(shopLikeDislike);\n    return this.http\n      .patch<IShopLikeDislike>(`${this.resourceUrl}/${getShopLikeDislikeIdentifier(shopLikeDislike) as number}`, copy, {\n        observe: 'response',\n      })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<IShopLikeDislike>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IShopLikeDislike[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addShopLikeDislikeToCollectionIfMissing(\n    shopLikeDislikeCollection: IShopLikeDislike[],\n    ...shopLikeDislikesToCheck: (IShopLikeDislike | null | undefined)[]\n  ): IShopLikeDislike[] {\n    const shopLikeDislikes: IShopLikeDislike[] = shopLikeDislikesToCheck.filter(isPresent);\n    if (shopLikeDislikes.length > 0) {\n      const shopLikeDislikeCollectionIdentifiers = shopLikeDislikeCollection.map(\n        shopLikeDislikeItem => getShopLikeDislikeIdentifier(shopLikeDislikeItem)!\n      );\n      const shopLikeDislikesToAdd = shopLikeDislikes.filter(shopLikeDislikeItem => {\n        const shopLikeDislikeIdentifier = getShopLikeDislikeIdentifier(shopLikeDislikeItem);\n        if (shopLikeDislikeIdentifier == null || shopLikeDislikeCollectionIdentifiers.includes(shopLikeDislikeIdentifier)) {\n          return false;\n        }\n        shopLikeDislikeCollectionIdentifiers.push(shopLikeDislikeIdentifier);\n        return true;\n      });\n      return [...shopLikeDislikesToAdd, ...shopLikeDislikeCollection];\n    }\n    return shopLikeDislikeCollection;\n  }\n\n  protected convertDateFromClient(shopLikeDislike: IShopLikeDislike): IShopLikeDislike {\n    return Object.assign({}, shopLikeDislike, {\n      date: shopLikeDislike.date?.isValid() ? shopLikeDislike.date.toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((shopLikeDislike: IShopLikeDislike) => {\n        shopLikeDislike.date = shopLikeDislike.date ? dayjs(shopLikeDislike.date) : undefined;\n      });\n    }\n    return res;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}