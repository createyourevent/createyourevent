{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getFeeTransactionIdIdentifier } from '../fee-transaction-id.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class FeeTransactionIdService {\n  constructor(http, applicationConfigService) {\n    _defineProperty(this, \"http\", void 0);\n    _defineProperty(this, \"applicationConfigService\", void 0);\n    _defineProperty(this, \"resourceUrl\", this.applicationConfigService.getEndpointFor('api/fee-transaction-ids'));\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  create(feeTransactionId) {\n    return this.http.post(this.resourceUrl, feeTransactionId, {\n      observe: 'response'\n    });\n  }\n  update(feeTransactionId) {\n    return this.http.put(`${this.resourceUrl}/${getFeeTransactionIdIdentifier(feeTransactionId)}`, feeTransactionId, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(feeTransactionId) {\n    return this.http.patch(`${this.resourceUrl}/${getFeeTransactionIdIdentifier(feeTransactionId)}`, feeTransactionId, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addFeeTransactionIdToCollectionIfMissing(feeTransactionIdCollection, ...feeTransactionIdsToCheck) {\n    const feeTransactionIds = feeTransactionIdsToCheck.filter(isPresent);\n    if (feeTransactionIds.length > 0) {\n      const feeTransactionIdCollectionIdentifiers = feeTransactionIdCollection.map(feeTransactionIdItem => getFeeTransactionIdIdentifier(feeTransactionIdItem));\n      const feeTransactionIdsToAdd = feeTransactionIds.filter(feeTransactionIdItem => {\n        const feeTransactionIdIdentifier = getFeeTransactionIdIdentifier(feeTransactionIdItem);\n        if (feeTransactionIdIdentifier == null || feeTransactionIdCollectionIdentifiers.includes(feeTransactionIdIdentifier)) {\n          return false;\n        }\n        feeTransactionIdCollectionIdentifiers.push(feeTransactionIdIdentifier);\n        return true;\n      });\n      return [...feeTransactionIdsToAdd, ...feeTransactionIdCollection];\n    }\n    return feeTransactionIdCollection;\n  }\n}\n_defineProperty(FeeTransactionIdService, \"\\u0275fac\", function FeeTransactionIdService_Factory(t) {\n  return new (t || FeeTransactionIdService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n});\n_defineProperty(FeeTransactionIdService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FeeTransactionIdService,\n  factory: FeeTransactionIdService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAA4BC,6BAA6B,QAAQ,6BAA6B;;;;AAM9F,OAAM,MAAOC,uBAAuB;EAGlCC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAAA;IAAA;IAAA,qCAF5E,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,yBAAyB,CAAC;IAEzE,SAAI,GAAJF,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEvGE,MAAM,CAACC,gBAAmC;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAoB,IAAI,CAACC,WAAW,EAAEF,gBAAgB,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACvG;EAEAC,MAAM,CAACJ,gBAAmC;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAClB,GAAG,IAAI,CAACH,WAAW,IAAIT,6BAA6B,CAACO,gBAAgB,CAAW,EAAE,EAClFA,gBAAgB,EAChB;MAAEG,OAAO,EAAE;IAAU,CAAE,CACxB;EACH;EAEAG,aAAa,CAACN,gBAAmC;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CACpB,GAAG,IAAI,CAACL,WAAW,IAAIT,6BAA6B,CAACO,gBAAgB,CAAW,EAAE,EAClFA,gBAAgB,EAChB;MAAEG,OAAO,EAAE;IAAU,CAAE,CACxB;EACH;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAoB,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/F;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAsB,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EACvG;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,wCAAwC,CACtCC,0BAA+C,EAC/C,GAAGC,wBAAkE;IAErE,MAAMC,iBAAiB,GAAwBD,wBAAwB,CAACE,MAAM,CAAC7B,SAAS,CAAC;IACzF,IAAI4B,iBAAiB,CAACE,MAAM,GAAG,CAAC,EAAE;MAChC,MAAMC,qCAAqC,GAAGL,0BAA0B,CAACM,GAAG,CAC1EC,oBAAoB,IAAI/B,6BAA6B,CAAC+B,oBAAoB,CAAE,CAC7E;MACD,MAAMC,sBAAsB,GAAGN,iBAAiB,CAACC,MAAM,CAACI,oBAAoB,IAAG;QAC7E,MAAME,0BAA0B,GAAGjC,6BAA6B,CAAC+B,oBAAoB,CAAC;QACtF,IAAIE,0BAA0B,IAAI,IAAI,IAAIJ,qCAAqC,CAACK,QAAQ,CAACD,0BAA0B,CAAC,EAAE;UACpH,OAAO,KAAK;;QAEdJ,qCAAqC,CAACM,IAAI,CAACF,0BAA0B,CAAC;QACtE,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,sBAAsB,EAAE,GAAGR,0BAA0B,CAAC;;IAEnE,OAAOA,0BAA0B;EACnC;;gBA1DWvB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAA,gBAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAmC,SAAvBnC,uBAAuB;EAAAoC,YADV;AAAM","names":["isPresent","createRequestOption","getFeeTransactionIdIdentifier","FeeTransactionIdService","constructor","http","applicationConfigService","getEndpointFor","create","feeTransactionId","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addFeeTransactionIdToCollectionIfMissing","feeTransactionIdCollection","feeTransactionIdsToCheck","feeTransactionIds","filter","length","feeTransactionIdCollectionIdentifiers","map","feeTransactionIdItem","feeTransactionIdsToAdd","feeTransactionIdIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/fee-transaction-id/service/fee-transaction-id.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IFeeTransactionId, getFeeTransactionIdIdentifier } from '../fee-transaction-id.model';\n\nexport type EntityResponseType = HttpResponse<IFeeTransactionId>;\nexport type EntityArrayResponseType = HttpResponse<IFeeTransactionId[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class FeeTransactionIdService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/fee-transaction-ids');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(feeTransactionId: IFeeTransactionId): Observable<EntityResponseType> {\n    return this.http.post<IFeeTransactionId>(this.resourceUrl, feeTransactionId, { observe: 'response' });\n  }\n\n  update(feeTransactionId: IFeeTransactionId): Observable<EntityResponseType> {\n    return this.http.put<IFeeTransactionId>(\n      `${this.resourceUrl}/${getFeeTransactionIdIdentifier(feeTransactionId) as number}`,\n      feeTransactionId,\n      { observe: 'response' }\n    );\n  }\n\n  partialUpdate(feeTransactionId: IFeeTransactionId): Observable<EntityResponseType> {\n    return this.http.patch<IFeeTransactionId>(\n      `${this.resourceUrl}/${getFeeTransactionIdIdentifier(feeTransactionId) as number}`,\n      feeTransactionId,\n      { observe: 'response' }\n    );\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IFeeTransactionId>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IFeeTransactionId[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addFeeTransactionIdToCollectionIfMissing(\n    feeTransactionIdCollection: IFeeTransactionId[],\n    ...feeTransactionIdsToCheck: (IFeeTransactionId | null | undefined)[]\n  ): IFeeTransactionId[] {\n    const feeTransactionIds: IFeeTransactionId[] = feeTransactionIdsToCheck.filter(isPresent);\n    if (feeTransactionIds.length > 0) {\n      const feeTransactionIdCollectionIdentifiers = feeTransactionIdCollection.map(\n        feeTransactionIdItem => getFeeTransactionIdIdentifier(feeTransactionIdItem)!\n      );\n      const feeTransactionIdsToAdd = feeTransactionIds.filter(feeTransactionIdItem => {\n        const feeTransactionIdIdentifier = getFeeTransactionIdIdentifier(feeTransactionIdItem);\n        if (feeTransactionIdIdentifier == null || feeTransactionIdCollectionIdentifiers.includes(feeTransactionIdIdentifier)) {\n          return false;\n        }\n        feeTransactionIdCollectionIdentifiers.push(feeTransactionIdIdentifier);\n        return true;\n      });\n      return [...feeTransactionIdsToAdd, ...feeTransactionIdCollection];\n    }\n    return feeTransactionIdCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}