{"ast":null,"code":"import { of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { Mp3 } from '../mp-3.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/mp-3.service\";\nimport * as i2 from \"@angular/router\";\nexport class Mp3RoutingResolveService {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(mergeMap(mp3 => {\n        if (mp3.body) {\n          return of(mp3.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new Mp3());\n  }\n}\nMp3RoutingResolveService.ɵfac = function Mp3RoutingResolveService_Factory(t) {\n  return new (t || Mp3RoutingResolveService)(i0.ɵɵinject(i1.Mp3Service), i0.ɵɵinject(i2.Router));\n};\nMp3RoutingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Mp3RoutingResolveService,\n  factory: Mp3RoutingResolveService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,EAAE,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAAeC,GAAG,QAAQ,eAAe;;;;AAIzC,OAAM,MAAOC,wBAAwB;EACnCC,YAAsBC,OAAmB,EAAYC,MAAc;IAA7C,YAAO,GAAPD,OAAO;IAAwB,WAAM,GAANC,MAAM;EAAW;EAEtEC,OAAO,CAACC,KAA6B;IACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAID,EAAE,EAAE;MACN,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAACF,EAAE,CAAC,CAACG,IAAI,CAC/BX,QAAQ,CAAEY,GAAsB,IAAI;QAClC,IAAIA,GAAG,CAACC,IAAI,EAAE;UACZ,OAAOf,EAAE,CAACc,GAAG,CAACC,IAAI,CAAC;SACpB,MAAM;UACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAOf,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAEH,OAAOD,EAAE,CAAC,IAAIG,GAAG,EAAE,CAAC;EACtB;;;mBAlBWC,wBAAwB;AAAA;;SAAxBA,wBAAwB;EAAAa,SAAxBb,wBAAwB;EAAAc,YADX;AAAM","names":["of","EMPTY","mergeMap","Mp3","Mp3RoutingResolveService","constructor","service","router","resolve","route","id","params","find","pipe","mp3","body","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/mp-3/route/mp-3-routing-resolve.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { IMp3, Mp3 } from '../mp-3.model';\nimport { Mp3Service } from '../service/mp-3.service';\n\n@Injectable({ providedIn: 'root' })\nexport class Mp3RoutingResolveService implements Resolve<IMp3> {\n  constructor(protected service: Mp3Service, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IMp3> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((mp3: HttpResponse<Mp3>) => {\n          if (mp3.body) {\n            return of(mp3.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Mp3());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}