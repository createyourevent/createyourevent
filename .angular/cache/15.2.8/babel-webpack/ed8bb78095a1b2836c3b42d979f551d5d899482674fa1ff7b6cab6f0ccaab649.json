{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/entities/point/service/point.service\";\nimport * as i3 from \"app/entities/chips/service/chips.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../../shared/language/translate.directive\";\nimport * as i6 from \"primeng/card\";\nfunction ChipsOverviewComponent_ng_container_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelement(2, \"hr\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"span\", 13);\n    i0.ɵɵtext(7, \"Congratulations. All chips founded.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n     \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n  \");\n    i0.ɵɵelement(10, \"hr\");\n    i0.ɵɵtext(11, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ChipsOverviewComponent_ng_container_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"p-card\", 14);\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"div\", 15);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelement(8, \"img\", 16);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementStart(10, \"div\", 17);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const chips_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"header\", chips_r2.website);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", \"data:\" + chips_r2.imageContentType + \";base64,\" + chips_r2.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(\"color: \" + chips_r2.color + \";\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(chips_r2.points);\n  }\n}\nexport let ChipsOverviewComponent = /*#__PURE__*/(() => {\n  class ChipsOverviewComponent {\n    constructor(generalService, pointService, chipsService) {\n      this.generalService = generalService;\n      this.pointService = pointService;\n      this.chipsService = chipsService;\n      this.foundedChips = [];\n      this.allChips = [];\n      this.totalPoints = 0;\n      this.totalCoins = 0;\n    }\n    ngOnInit() {\n      this.chipsService.query().subscribe(cs => {\n        this.allChips = cs.body;\n        cs.body.forEach(c => {\n          this.totalPoints += c.points;\n        });\n        this.totalCoins = this.allChips.length;\n      });\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n        this.generalService.findChipsCollectionByUserId(this.user.id).subscribe(col => {\n          this.generalService.findAllChipsCollectionChipsByChipsCollectionId(col.body.id).subscribe(ccc => {\n            ccc.body.forEach(element => {\n              this.foundedChips.push(element.chips);\n            });\n          });\n        });\n      });\n    }\n    getRandomColor() {\n      const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n      return c;\n    }\n  }\n  ChipsOverviewComponent.ɵfac = function ChipsOverviewComponent_Factory(t) {\n    return new (t || ChipsOverviewComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.PointService), i0.ɵɵdirectiveInject(i3.ChipsService));\n  };\n  ChipsOverviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChipsOverviewComponent,\n    selectors: [[\"jhi-chips-overview\"]],\n    decls: 37,\n    vars: 4,\n    consts: [[\"jhiTranslate\", \"chips-overview.overview-chips\"], [\"src\", \"https://docs.google.com/drawings/d/e/2PACX-1vT1cTBX39xbDdsOr7EObYwCN5rEXC6g5PP1IPQYSoGzDE9utDLwnNIi4WliwO75YcV52wJVf57NKmLF/pub?w=960&h=540\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"font-weight\"], [\"jhiTranslate\", \"chips-overview.how-many-points\", 1, \"point-font\", \"point-chips\"], [\"jhiTranslate\", \"chips-overview.points\", 1, \"point-font\"], [\"jhiTranslate\", \"chips-overview.how-many-coins\", 1, \"point-font\", \"point-chips\"], [\"jhiTranslate\", \"chips-overview.coins\", 1, \"point-font\"], [\"jhiTranslate\", \"chips-overview.founded-chips\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"clear\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"jhiTranslate\", \"chips-overview.all-chips-found\", 1, \"point-font\"], [1, \"point-card\", 3, \"header\"], [1, \"point-container\", \"container_chip\"], [1, \"chip_img\", 3, \"src\"], [1, \"centered\"]],\n    template: function ChipsOverviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Overview for the \\\"Find the chip\\\"-Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵtext(4, \"\\n\\n\");\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵtext(6, \"\\n    \");\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"\\n        \");\n        i0.ɵɵelementStart(9, \"span\", 3)(10, \"span\", 4);\n        i0.ɵɵtext(11, \"In this round you could find maximum points:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12);\n        i0.ɵɵelement(13, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n    \");\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"\\n        \");\n        i0.ɵɵelementStart(18, \"span\", 3)(19, \"span\", 6);\n        i0.ɵɵtext(20, \"In this round you must find:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21);\n        i0.ɵɵelement(22, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\n\");\n        i0.ɵɵelement(26, \"hr\");\n        i0.ɵɵtext(27, \"\\n\\n\");\n        i0.ɵɵelementStart(28, \"h2\", 8);\n        i0.ɵɵtext(29, \"Founded chips\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \"\\n\\n\");\n        i0.ɵɵtemplate(31, ChipsOverviewComponent_ng_container_31_Template, 12, 0, \"ng-container\", 9);\n        i0.ɵɵtext(32, \"\\n\\n\");\n        i0.ɵɵtemplate(33, ChipsOverviewComponent_ng_container_33_Template, 16, 5, \"ng-container\", 10);\n        i0.ɵɵtext(34, \"\\n\");\n        i0.ɵɵelement(35, \"div\", 11);\n        i0.ɵɵtext(36, \"\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalPoints, \" \");\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalCoins, \" \");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.allChips.length === ctx.foundedChips.length);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.foundedChips);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.TranslateDirective, i6.Card],\n    styles: [\".point-card[_ngcontent-%COMP%]{float:left;width:300px;margin:20px;box-shadow:5px 5px 15px 5px #ff8080,-9px 5px 15px 5px #ffe488,-7px -5px 15px 5px #8cff85,12px -5px 15px 5px #80c7ff,12px 10px 15px 7px #e488ff,-10px 10px 15px 7px #ff616b,-10px -7px 27px 1px #8e5cff,5px 5px 15px 5px #0000}.p-card[_ngcontent-%COMP%]   .p-card-body[_ngcontent-%COMP%]{background:rgb(210,255,82)!important;background:linear-gradient(to bottom,rgb(210,255,82) 0%,rgb(145,232,66) 100%)!important;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#d2ff52\\\",endColorstr=\\\"#91e842\\\",GradientType=0)!important}.point-container[_ngcontent-%COMP%]{margin:auto}.point-font[_ngcontent-%COMP%]{font-family:Paytone One,sans-serif}.centered[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:xx-large;font-weight:bolder}.container_chip[_ngcontent-%COMP%]{position:relative;text-align:center}.font-weight[_ngcontent-%COMP%]{font-size:xx-large}.clear[_ngcontent-%COMP%]{clear:both}\"]\n  });\n  return ChipsOverviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}