{"ast":null,"code":"import { UntypedFormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/entities/property/service/property.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nexport let AdminTetrisComponent = /*#__PURE__*/(() => {\n  class AdminTetrisComponent {\n    constructor(generalService, propertyService) {\n      this.generalService = generalService;\n      this.propertyService = propertyService;\n      this.commitment = 0;\n      this.linePoints = 0;\n      this.form = new UntypedFormGroup({});\n      this.model = {\n        commitment_tetris: 0,\n        linePoints_tetris: 0\n      };\n      this.fields = [{\n        key: 'commitment_tetris',\n        type: 'input',\n        templateOptions: {\n          label: 'Commitment points',\n          placeholder: 'Commitment for this game-round.',\n          required: true\n        }\n      }, {\n        key: 'linePoints_tetris',\n        type: 'input',\n        templateOptions: {\n          label: 'Line points',\n          placeholder: 'Points for a deleted line.',\n          required: true\n        }\n      }];\n    }\n    ngOnInit() {\n      this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n        const property = cp.body;\n        this.commitment = Number(property.value);\n      });\n      this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n        const property = cp.body;\n        this.linePoints = Number(property.value);\n      });\n    }\n    onSubmit() {\n      this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n        const property = cp.body;\n        property.value = this.model.commitment_tetris.toString();\n        this.propertyService.update(property).subscribe();\n      });\n      this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n        const property = cp.body;\n        property.value = this.model.linePoints_tetris.toString();\n        this.propertyService.update(property).subscribe();\n      });\n    }\n  }\n  AdminTetrisComponent.ɵfac = function AdminTetrisComponent_Factory(t) {\n    return new (t || AdminTetrisComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.PropertyService));\n  };\n  AdminTetrisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminTetrisComponent,\n    selectors: [[\"jhi-admin-tetris\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-button\"]],\n    template: function AdminTetrisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminTetrisComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵelement(2, \"formly-form\", 1);\n        i0.ɵɵtext(3, \"\\n  \");\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵtext(5, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.FormlyForm]\n  });\n  return AdminTetrisComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}