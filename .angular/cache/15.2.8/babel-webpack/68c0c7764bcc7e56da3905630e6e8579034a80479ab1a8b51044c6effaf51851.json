{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { FieldType } from '@ngx-formly/core';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nimport * as i5 from \"ngx-quill\";\nconst _c0 = function () {\n  return {\n    \"height\": \"400px\"\n  };\n};\nconst _c1 = function () {\n  return {\n    height: \"350px\"\n  };\n};\nexport class FormlyFieldEditorComponent extends FieldType {\n  constructor(messageService, translate) {\n    super();\n    _defineProperty(this, \"messageService\", void 0);\n    _defineProperty(this, \"translate\", void 0);\n    _defineProperty(this, \"modules\", {});\n    _defineProperty(this, \"quillEditorRef\", void 0);\n    _defineProperty(this, \"maxUploadFileSize\", 500000);\n    _defineProperty(this, \"imageHandler\", (image, callback) => {\n      const input = document.getElementById('fileInputField');\n      document.getElementById('fileInputField').onchange = () => {\n        const file = input.files[0];\n        // file type is only image.\n        if (/^image\\//.test(file.type)) {\n          if (file.size > this.maxUploadFileSize) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translate.instant('register-shop.filesize.error'),\n              detail: this.translate.instant('register-shop.filesize.error.info')\n            });\n          } else {\n            const reader = new FileReader();\n            reader.onload = () => {\n              const range = this.quillEditorRef.getSelection();\n              const img = '<img src=\"' + reader.result + '\" />';\n              this.quillEditorRef.clipboard.dangerouslyPasteHTML(range.index, img);\n            };\n            reader.readAsDataURL(file);\n          }\n        } else {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translate.instant('register-shop.filetype.error'),\n            detail: this.translate.instant('register-shop.filetype.error.info')\n          });\n        }\n      };\n      input.click();\n    });\n    this.messageService = messageService;\n    this.translate = translate;\n    this.modules = {\n      toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n        header: 1\n      }, {\n        header: 2\n      }], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }], [{\n        script: 'sub'\n      }, {\n        script: 'super'\n      }], [{\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], [{\n        direction: 'rtl'\n      }], [{\n        size: ['small', false, 'large', 'huge']\n      }], [{\n        header: [2, 3, 4, 5, 6, false]\n      }], [{\n        color: []\n      }, {\n        background: []\n      }], [{\n        font: []\n      }], [{\n        align: []\n      }], ['clean'], ['link', 'image', 'video'] // link and image, video\n      ]\n    };\n  }\n\n  getEditorInstance(editorInstance) {\n    this.quillEditorRef = editorInstance;\n    const toolbar = editorInstance.getModule('toolbar');\n    toolbar.addHandler('image', this.imageHandler);\n  }\n}\n_defineProperty(FormlyFieldEditorComponent, \"\\u0275fac\", function FormlyFieldEditorComponent_Factory(t) {\n  return new (t || FormlyFieldEditorComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.TranslateService));\n});\n_defineProperty(FormlyFieldEditorComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormlyFieldEditorComponent,\n  selectors: [[\"jhi-formly-field-editor\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService]), i0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 16,\n  consts: [[3, \"for\"], [3, \"styles\", \"id\", \"placeholder\", \"formControl\", \"formlyAttributes\", \"modules\", \"onEditorCreated\"], [\"type\", \"file\", \"id\", \"fileInputField\", 2, \"display\", \"none\"], [1, \"form-text\", \"text-muted\"]],\n  template: function FormlyFieldEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵelementStart(6, \"quill-editor\", 1);\n      i0.ɵɵlistener(\"onEditorCreated\", function FormlyFieldEditorComponent_Template_quill_editor_onEditorCreated_6_listener($event) {\n        return ctx.getEditorInstance($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n    \");\n      i0.ɵɵelement(8, \"input\", 2);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵelementStart(10, \"small\", 3);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"for\", ctx.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.to.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\\n        \", ctx.to.required ? \"*\" : \"\", \"\\n    \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c0));\n      i0.ɵɵclassProp(\"is-invalid\", ctx.showError);\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵproperty(\"styles\", i0.ɵɵpureFunction0(15, _c1))(\"placeholder\", ctx.to.placeholder)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"modules\", ctx.modules);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.to.description);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.FormControlDirective, i4.FormlyAttributes, i5.QuillEditorComponent],\n  encapsulation: 2\n}));","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,aAAa;;;;;;;;;;;;;;;;;AAO5C,OAAM,MAAOC,0BAA2B,SAAQF,SAAS;EAMvDG,YAAqBC,cAA8B,EAAUC,SAA2B;IACpF,KAAK,EAAE;IAAC;IAAA;IAAA,iCANF,EAAE;IAAA;IAAA,2CAGQ,MAAM;IAAA,sCAmCV,CAACC,KAAU,EAAEC,QAAa,KAAI;MAC3C,MAAMC,KAAK,GAAsBC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;MAC1ED,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,QAAQ,GAAG,MAAK;QACxD,MAAMC,IAAI,GAASJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC;QACjC;QACA,IAAI,UAAU,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;UAC9B,IAAIH,IAAI,CAACI,IAAI,GAAG,IAAI,CAACC,iBAAiB,EAAE;YACvC,IAAI,CAACb,cAAc,CAACc,GAAG,CAAC;cAACC,QAAQ,EAAC,OAAO;cAAEC,OAAO,EAAE,IAAI,CAACf,SAAS,CAACgB,OAAO,CAAC,8BAA8B,CAAC;cAAEC,MAAM,EAAE,IAAI,CAACjB,SAAS,CAACgB,OAAO,CAAC,mCAAmC;YAAC,CAAC,CAAC;WACjL,MAAM;YACL,MAAME,MAAM,GAAI,IAAIC,UAAU,EAAE;YAChCD,MAAM,CAACE,MAAM,GAAG,MAAK;cACnB,MAAMC,KAAK,GAAG,IAAI,CAACC,cAAc,CAACC,YAAY,EAAE;cAChD,MAAMC,GAAG,GAAG,YAAY,GAAGN,MAAM,CAACO,MAAM,GAAG,MAAM;cACjD,IAAI,CAACH,cAAc,CAACI,SAAS,CAACC,oBAAoB,CAACN,KAAK,CAACO,KAAK,EAAEJ,GAAG,CAAC;YACtE,CAAC;YACDN,MAAM,CAACW,aAAa,CAACtB,IAAI,CAAC;;SAE7B,MAAM;UACJ,IAAI,CAACR,cAAc,CAACc,GAAG,CAAC;YAACC,QAAQ,EAAC,OAAO;YAAEC,OAAO,EAAE,IAAI,CAACf,SAAS,CAACgB,OAAO,CAAC,8BAA8B,CAAC;YAAEC,MAAM,EAAE,IAAI,CAACjB,SAAS,CAACgB,OAAO,CAAC,mCAAmC;UAAC,CAAC,CAAC;;MAEtL,CAAC;MACDb,KAAK,CAAC2B,KAAK,EAAE;IACf,CAAC;IAvDmB,mBAAc,GAAd/B,cAAc;IAA0B,cAAS,GAATC,SAAS;IAEpE,IAAI,CAAC+B,OAAO,GAAG;MACbC,OAAO,EAAE,CACP,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,EACzC,CAAC,YAAY,EAAE,YAAY,CAAC,EAE5B,CAAC;QAAEC,MAAM,EAAE;MAAC,CAAE,EAAE;QAAEA,MAAM,EAAE;MAAC,CAAE,CAAC,EAC9B,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAE,EAAE;QAAEA,IAAI,EAAE;MAAQ,CAAE,CAAC,EACzC,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAE,EAAE;QAAEA,MAAM,EAAE;MAAO,CAAE,CAAC,EACxC,CAAC;QAAEC,MAAM,EAAE;MAAI,CAAE,EAAE;QAAEA,MAAM,EAAE;MAAI,CAAE,CAAC,EACpC,CAAC;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC,EAEtB,CAAC;QAAE1B,IAAI,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;MAAC,CAAE,CAAC,EAC7C,CAAC;QAAEsB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;MAAC,CAAE,CAAC,EAEpC,CAAC;QAAEK,KAAK,EAAE;MAAE,CAAE,EAAE;QAAEC,UAAU,EAAE;MAAE,CAAE,CAAC,EACnC,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,CAAC,EACd,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAE,CAAC,EAEf,CAAC,OAAO,CAAC,EAET,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAE;MAAA;KAE/B;EACH;;EAEAC,iBAAiB,CAACC,cAAmB;IACnC,IAAI,CAACrB,cAAc,GAAGqB,cAAc;IACpC,MAAMX,OAAO,GAAGW,cAAc,CAACC,SAAS,CAAC,SAAS,CAAC;IACnDZ,OAAO,CAACa,UAAU,CAAC,OAAO,EAAE,IAAI,CAACC,YAAY,CAAC;EAChD;;gBArCWjD,0BAA2B;mBAA3BA,0BAA0B;AAAA;AAAA,gBAA1BA,0BAA2B;QAA3BA,0BAA0B;EAAAkD;EAAAC,iCAF1B,CAACpD,cAAc,CAAC;EAAAqD;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,gCAAoB;MAChBA;MAAAA,4BAAM;MAAAA,YAAY;MAAAA,iBAAO;MACrBA,YACJ;MAAAA,iBAAQ;MACRA;MAAAA,uCAA2Q;MAA9CA;QAAA,OAAmBC,6BAAyB;MAAA,EAAC;MAACD,iBAAe;MAC1RA;MAAAA,2BAA8D;MAC9DA;MAAAA,iCAAoC;MAAAA,aAAoB;MAAAA,iBAAQ;MACpEA;;;MAPOA,uCAAY;MACTA,eAAY;MAAZA,kCAAY;MACdA,eACJ;MADIA,yEACJ;MAC4KA,eAA4B;MAA5BA,0CAA4B;MAA3DA,2CAA8B;MAAhIA,sCAAW;MAAxCA,oDAA4B;MAENA,eAAoB;MAApBA,wCAAoB","names":["FieldType","MessageService","FormlyFieldEditorComponent","constructor","messageService","translate","image","callback","input","document","getElementById","onchange","file","files","test","type","size","maxUploadFileSize","add","severity","summary","instant","detail","reader","FileReader","onload","range","quillEditorRef","getSelection","img","result","clipboard","dangerouslyPasteHTML","index","readAsDataURL","click","modules","toolbar","header","list","script","indent","direction","color","background","font","align","getEditorInstance","editorInstance","getModule","addHandler","imageHandler","selectors","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/formly/formly-field-editor.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/formly/formly-field-editor.component.html"],"sourcesContent":["import { TranslateService } from '@ngx-translate/core';\nimport { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'jhi-formly-field-editor',\n  templateUrl: './formly-field-editor.component.html',\n  providers: [MessageService]\n})\nexport class FormlyFieldEditorComponent extends FieldType {\n  modules = {};\n\n  quillEditorRef: any;\n  maxUploadFileSize = 500000;\n\n  constructor( private messageService: MessageService, private translate: TranslateService) {\n      super();\n    this.modules = {\n      toolbar: [\n        ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n        ['blockquote', 'code-block'],\n\n        [{ header: 1 }, { header: 2 }], // custom button values\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n        [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n        [{ direction: 'rtl' }], // text direction\n\n        [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n        [{ header: [2, 3, 4, 5, 6, false] }],\n\n        [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n        [{ font: [] }],\n        [{ align: [] }],\n\n        ['clean'], // remove formatting button\n\n        ['link', 'image', 'video'], // link and image, video\n      ]\n    };\n  }\n\n  getEditorInstance(editorInstance: any): void {\n    this.quillEditorRef = editorInstance;\n    const toolbar = editorInstance.getModule('toolbar');\n    toolbar.addHandler('image', this.imageHandler);\n  }\n\n   imageHandler = (image: any, callback: any) => {\n     const input = <HTMLInputElement> document.getElementById('fileInputField');\n     document.getElementById('fileInputField').onchange = () => {\n       const file: File = input.files[0];\n       // file type is only image.\n       if (/^image\\//.test(file.type)) {\n         if (file.size > this.maxUploadFileSize) {\n          this.messageService.add({severity:'error', summary: this.translate.instant('register-shop.filesize.error'), detail: this.translate.instant('register-shop.filesize.error.info')});\n         } else {\n           const reader  = new FileReader();\n           reader.onload = () =>  {\n             const range = this.quillEditorRef.getSelection();\n             const img = '<img src=\"' + reader.result + '\" />';\n             this.quillEditorRef.clipboard.dangerouslyPasteHTML(range.index, img);\n           };\n           reader.readAsDataURL(file);\n         }\n       } else {\n          this.messageService.add({severity:'error', summary: this.translate.instant('register-shop.filetype.error'), detail: this.translate.instant('register-shop.filetype.error.info')});\n       }\n     };\n     input.click();\n   }\n}\n","<label for=\"{{id}}\">\n    <span>{{to.label}}</span>\n        {{to.required ? '*' : ''}}\n    </label>\n    <quill-editor [styles]=\"{height: '350px'}\" id=\"{{id}}\" [placeholder]=\"to.placeholder\" [formControl]=\"formControl\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\" [style]=\"{'height':'400px'}\" [modules]=\"modules\" (onEditorCreated)=\"getEditorInstance($event)\"></quill-editor>\n    <input type=\"file\" style=\"display: none\" id=\"fileInputField\"/>\n    <small class=\"form-text text-muted\">{{ to.description }}</small>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}