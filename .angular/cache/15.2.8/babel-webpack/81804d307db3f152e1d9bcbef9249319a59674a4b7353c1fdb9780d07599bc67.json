{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Lightbox from '../../../content/scripts/Lightbox.js';\nconst Datatrans = ({\n  production,\n  transactionId,\n  onLoaded,\n  onOpened,\n  onCancelled,\n  onError\n}) => {\n  const [lightbox, showLightbox] = useState(false);\n  const [loading, setLoading] = useState(false);\n  let [tId, setTId] = useState('');\n  let [prod, setProd] = useState('');\n  const onClick = () => {\n    setLoading(true);\n    showLightbox(true);\n  };\n  const onLoadedReact = () => {\n    setLoading(false);\n    onLoaded();\n  };\n  const onOpenedReact = () => {\n    console.log('Opened');\n    onOpened();\n  };\n  const onCancelledReact = () => {\n    showLightbox(false);\n    onCancelled();\n  };\n  const onErrorReact = data => {\n    console.log('Error:', data);\n    setLoading(false);\n    showLightbox(false);\n    onError(data);\n  };\n  useEffect(() => {\n    if (transactionId) {\n      setTId(transactionId);\n    }\n    if (production) {\n      setProd(production);\n    }\n  }, [transactionId, production]);\n  return React.createElement(\"div\", null, loading ? React.createElement(\"span\", {\n    className: 'loader'\n  }) : React.createElement(\"button\", {\n    className: \"datatrans_button\",\n    onClick: onClick,\n    disabled: !tId\n  }, \"Bezahlen\"), lightbox && tId && React.createElement(Lightbox, {\n    transactionId: tId,\n    production: prod,\n    onLoaded: onLoadedReact,\n    onOpened: onOpenedReact,\n    onCancelled: onCancelledReact,\n    onError: onErrorReact\n  }));\n};\nexport default Datatrans;","map":{"version":3,"mappings":"AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sCAAsC;AAY3D,MAAMC,SAAS,GAAkC,CAAC;EAACC,UAAU;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAO,CAAsB,KAAI;EAC9I,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAI,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChC,IAAI,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMkB,OAAO,GAAG,MAAK;IACnBL,UAAU,CAAC,IAAI,CAAC;IAChBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,MAAMQ,aAAa,GAAG,MAAK;IACzBN,UAAU,CAAC,KAAK,CAAC;IACjBP,QAAQ,EAAE;EACZ,CAAC;EACD,MAAMc,aAAa,GAAG,MAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBf,QAAQ,EAAE;EACZ,CAAC;EACD,MAAMgB,gBAAgB,GAAG,MAAK;IAC5BZ,YAAY,CAAC,KAAK,CAAC;IACnBH,WAAW,EAAE;EACf,CAAC;EACD,MAAMgB,YAAY,GAAIC,IAAI,IAAI;IAC5BJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,IAAI,CAAC;IAC3BZ,UAAU,CAAC,KAAK,CAAC;IACjBF,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,CAACgB,IAAI,CAAC;EACf,CAAC;EAEDxB,SAAS,CAAC,MAAK;IACb,IAAII,aAAa,EAAE;MACjBU,MAAM,CAACV,aAAa,CAAC;;IAEvB,IAAID,UAAU,EAAE;MACda,OAAO,CAACb,UAAU,CAAC;;EAEvB,CAAC,EAAE,CAACC,aAAa,EAAED,UAAU,CAAC,CAAC;EAE/B,OAAOL,iCAEFa,OAAO,GACJb;IAAM2B,SAAS,EAAC;EAAQ,EAAG,GAC3B3B;IAAQ2B,SAAS,EAAC,kBAAkB;IAACR,OAAO,EAAEA,OAAO;IAAES,QAAQ,EAAE,CAACb;EAAG,cAAmB,EAE7FJ,QAAQ,IAAII,GAAG,IAAIf,oBAACG,QAAQ;IACzBG,aAAa,EAAES,GAAG;IAClBV,UAAU,EAAEY,IAAI;IAChBV,QAAQ,EAAEa,aAAa;IACvBZ,QAAQ,EAAEa,aAAa;IACvBZ,WAAW,EAAEe,gBAAgB;IAC7Bd,OAAO,EAAEe;EAAY,EACrB,CAEF;AAEN,CAAC;AAED,eAAerB,SAAS","names":["React","useState","useEffect","Lightbox","Datatrans","production","transactionId","onLoaded","onOpened","onCancelled","onError","lightbox","showLightbox","loading","setLoading","tId","setTId","prod","setProd","onClick","onLoadedReact","onOpenedReact","console","log","onCancelledReact","onErrorReact","data","className","disabled"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/datatrans_react/DatatransComponent.tsx"],"sourcesContent":["\nimport { transition } from '@angular/animations';\nimport React, { useState, useEffect } from 'react'\nimport Lightbox from '../../../content/scripts/Lightbox.js'\n\nexport interface IDatatransFormProps {\n  production: boolean;\n  transactionId: string;\n  onLoaded: () => void;\n  onOpened: () => void;\n  onCancelled: () => void;\n  onError: (data: string) => void\n}\n\n\nconst Datatrans: React.FC<IDatatransFormProps> = ({production, transactionId, onLoaded, onOpened, onCancelled, onError}: IDatatransFormProps) => {\n  const [lightbox, showLightbox] = useState(false)\n  const [loading, setLoading] = useState(false)\n  let [tId, setTId] = useState('')\n  let [prod, setProd] = useState('')\n\n  const onClick = () => {\n    setLoading(true)\n    showLightbox(true)\n  }\n  const onLoadedReact = () => {\n    setLoading(false)\n    onLoaded()\n  }\n  const onOpenedReact = () => {\n    console.log('Opened')\n    onOpened()\n  }\n  const onCancelledReact = () => {\n    showLightbox(false)\n    onCancelled()\n  }\n  const onErrorReact = (data) => {\n    console.log('Error:', data)\n    setLoading(false)\n    showLightbox(false)\n    onError(data)\n  }\n\n  useEffect(() => {\n    if (transactionId) {\n      setTId(transactionId)\n    }\n    if (production) {\n      setProd(production)\n    }\n  }, [transactionId, production])\n\n  return <div>\n\n      {loading\n        ? <span className='loader' />\n        : <button className=\"datatrans_button\" onClick={onClick} disabled={!tId}>Bezahlen</button>\n      }\n    {lightbox && tId && <Lightbox\n        transactionId={tId}\n        production={prod}\n        onLoaded={onLoadedReact}\n        onOpened={onOpenedReact}\n        onCancelled={onCancelledReact}\n        onError={onErrorReact}\n      />\n    }\n</div>\n\n}\n\nexport default Datatrans;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}