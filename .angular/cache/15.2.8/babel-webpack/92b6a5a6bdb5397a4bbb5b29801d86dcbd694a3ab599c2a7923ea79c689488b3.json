{"ast":null,"code":"import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n  constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n    super(elementRef);\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._invert = false;\n    this._max = 100;\n    this._min = 0;\n    this._step = 1;\n    this._thumbLabel = false;\n    this._tickInterval = 0;\n    this._value = null;\n    this._vertical = false;\n    /** Event emitted when the slider value has changed. */\n    this.change = new EventEmitter();\n    /** Event emitted when the slider thumb moves. */\n    this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    this.onTouched = () => {};\n    this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding and what the user is using to slide it with.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n    this._isSliding = null;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n    this._isActive = false;\n    /** The size of a tick interval as a percentage of the size of the track. */\n    this._tickIntervalPercent = 0;\n    /** The dimensions of the slider. */\n    this._sliderDimensions = null;\n    this._controlValueAccessorChangeFn = () => {};\n    /** Subscription to the Directionality change EventEmitter. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Called when the user has put their pointer down on the slider. */\n    this._pointerDown = event => {\n      // Don't do anything if the slider is disabled or the\n      // user is using anything other than the main mouse button.\n      if (this.disabled || this._isSliding || !isTouchEvent(event) && event.button !== 0) {\n        return;\n      }\n      this._ngZone.run(() => {\n        this._touchId = isTouchEvent(event) ? getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n        if (pointerPosition) {\n          const oldValue = this.value;\n          this._isSliding = 'pointer';\n          this._lastPointerEvent = event;\n          event.preventDefault();\n          this._focusHostElement();\n          this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n          this._bindGlobalEvents(event);\n          this._focusHostElement();\n          this._updateValueFromPosition(pointerPosition);\n          this._valueOnSlideStart = oldValue;\n          // Emit a change and input event if the value changed.\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      });\n    };\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     */\n    this._pointerMove = event => {\n      if (this._isSliding === 'pointer') {\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n        if (pointerPosition) {\n          // Prevent the slide from selecting anything else.\n          event.preventDefault();\n          const oldValue = this.value;\n          this._lastPointerEvent = event;\n          this._updateValueFromPosition(pointerPosition);\n          // Native range elements always emit `input` events when the value changed while sliding.\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      }\n    };\n    /** Called when the user has lifted their pointer. Bound on the document level. */\n    this._pointerUp = event => {\n      if (this._isSliding === 'pointer') {\n        if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n        // Note that we use `changedTouches`, rather than `touches` because it\n        // seems like in most cases `touches` is empty for `touchend` events.\n        findMatchingTouch(event.changedTouches, this._touchId)) {\n          event.preventDefault();\n          this._removeGlobalEvents();\n          this._isSliding = null;\n          this._touchId = undefined;\n          if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n          }\n          this._valueOnSlideStart = this._lastPointerEvent = null;\n        }\n      }\n    };\n    /** Called when the window has lost focus. */\n    this._windowBlur = () => {\n      // If the window is blurred while dragging we need to stop dragging because the\n      // browser won't dispatch the `mouseup` and `touchend` events anymore.\n      if (this._lastPointerEvent) {\n        this._pointerUp(this._lastPointerEvent);\n      }\n    };\n    this._document = _document;\n    this.tabIndex = parseInt(tabIndex) || 0;\n    _ngZone.runOutsideAngular(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n  /** Whether the slider is inverted. */\n  get invert() {\n    return this._invert;\n  }\n  set invert(value) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    this._min = coerceNumberProperty(v, this._min);\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop().length;\n    }\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether or not to show the thumb label. */\n  get thumbLabel() {\n    return this._thumbLabel;\n  }\n  set thumbLabel(value) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  set tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  /** Value of the slider. */\n  get value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v, 0);\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal && value !== this.min && value !== this.max) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the slider is vertical. */\n  get vertical() {\n    return this._vertical;\n  }\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /** The value to be used for display purposes. */\n  get displayValue() {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value);\n    }\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n    return this.value || 0;\n  }\n  /** set focus to the host element */\n  focus(options) {\n    this._focusHostElement(options);\n  }\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percent() {\n    return this._clamp(this._percent);\n  }\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  _shouldInvertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n  /** Whether the slider is at its minimum value. */\n  _isMinValue() {\n    return this.percent === 0;\n  }\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  _getThumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue() && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n  /** CSS styles for the track background element. */\n  _getTrackBackgroundStyles() {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n    };\n  }\n  /** CSS styles for the track fill element. */\n  _getTrackFillStyles() {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n  /** CSS styles for the ticks container element. */\n  _getTicksContainerStyles() {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n  /** CSS styles for the ticks element. */\n  _getTicksStyles() {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n    if (this._isMinValue() && this._getThumbGap()) {\n      const shouldInvertAxis = this._shouldInvertAxis();\n      let side;\n      if (this.vertical) {\n        side = shouldInvertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = shouldInvertAxis ? 'Right' : 'Left';\n      }\n      styles[`padding${side}`] = `${this._getThumbGap()}px`;\n    }\n    return styles;\n  }\n  _getThumbContainerStyles() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n  }\n  /** The language direction for this slider element. */\n  _getDirection() {\n    return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      this._isActive = !!origin && origin !== 'keyboard';\n      this._changeDetectorRef.detectChanges();\n    });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  _onBlur() {\n    this.onTouched();\n  }\n  _onKeydown(event) {\n    if (this.disabled || hasModifierKey(event) || this._isSliding && this._isSliding !== 'keyboard') {\n      return;\n    }\n    const oldValue = this.value;\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n    this._isSliding = 'keyboard';\n    event.preventDefault();\n  }\n  _onKeyup() {\n    if (this._isSliding === 'keyboard') {\n      this._isSliding = null;\n    }\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  _bindGlobalEvents(triggerEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n    if (isTouch) {\n      document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n    const window = this._getWindow();\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Removes any global event listeners that we may have added. */\n  _removeGlobalEvents() {\n    const document = this._document;\n    document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    const window = this._getWindow();\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  _increment(numSteps) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  _updateValueFromPosition(pos) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n  /** Emits a change event if the current value is different from the last emitted value. */\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n  /** Emits an input event when the current value is different from the last emitted value. */\n  _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n  /** Creates a slider change object from the specified value. */\n  _createChangeEvent(value = this.value) {\n    let event = new MatSliderChange();\n    event.source = this;\n    event.value = value;\n    return event;\n  }\n  /** Calculates the percentage of the slider that a value is. */\n  _calculatePercentage(value) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n  /** Calculates the value a percentage of the slider corresponds to. */\n  _calculateValue(percentage) {\n    return this.min + percentage * (this.max - this.min);\n  }\n  /** Return a number between two numbers. */\n  _clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  _focusHostElement(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Blurs the native element. */\n  _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatSlider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"],\n  hostVars: 29,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    value: \"value\",\n    vertical: \"vertical\",\n    displayWith: \"displayWith\",\n    valueText: \"valueText\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 29,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtext(2, \"\\n  \");\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵtext(4, \"\\n    \");\n      ɵngcc0.ɵɵelement(5, \"div\", 3);\n      ɵngcc0.ɵɵtext(6, \"\\n    \");\n      ɵngcc0.ɵɵelement(7, \"div\", 4);\n      ɵngcc0.ɵɵtext(8, \"\\n  \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(9, \"\\n  \");\n      ɵngcc0.ɵɵelementStart(10, \"div\", 5);\n      ɵngcc0.ɵɵtext(11, \"\\n    \");\n      ɵngcc0.ɵɵelement(12, \"div\", 6);\n      ɵngcc0.ɵɵtext(13, \"\\n  \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(14, \"\\n  \");\n      ɵngcc0.ɵɵelementStart(15, \"div\", 7);\n      ɵngcc0.ɵɵtext(16, \"\\n    \");\n      ɵngcc0.ɵɵelement(17, \"div\", 8);\n      ɵngcc0.ɵɵtext(18, \"\\n    \");\n      ɵngcc0.ɵɵelement(19, \"div\", 9);\n      ɵngcc0.ɵɵtext(20, \"\\n    \");\n      ɵngcc0.ɵɵelementStart(21, \"div\", 10);\n      ɵngcc0.ɵɵtext(22, \"\\n      \");\n      ɵngcc0.ɵɵelementStart(23, \"span\", 11);\n      ɵngcc0.ɵɵtext(24);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(25, \"\\n    \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(26, \"\\n  \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(27, \"\\n\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(28, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n      ɵngcc0.ɵɵadvance(9);\n      ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  dependencies: [ɵngcc3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSlider.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatSlider.propDecorators = {\n  invert: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  thumbLabel: [{\n    type: Input\n  }],\n  tickInterval: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  displayWith: [{\n    type: Input\n  }],\n  valueText: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  input: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  _sliderWrapper: [{\n    type: ViewChild,\n    args: ['sliderWrapper']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        // On Safari starting to slide temporarily triggers text selection mode which\n        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n        '(selectstart)': '$event.preventDefault()',\n        'class': 'mat-slider mat-focus-indicator',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n        // to the same value that we set on the slider's thumb which will be truncated.\n        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if mouse coordinates need to be inverted.\n        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue()',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    valueText: [{\n      type: Input\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n  let point;\n  if (isTouchEvent(event)) {\n    // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n    // If that's the case, attribute the first touch to all active sliders. This should still cover\n    // the most common case while only breaking multi-touch.\n    if (typeof id === 'number') {\n      point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n    } else {\n      // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n  return point ? {\n    x: point.clientX,\n    y: point.clientY\n  } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n  for (let i = 0; i < event.touches.length; i++) {\n    const target = event.touches[i].target;\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\nMatSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function () {\n      return [MatSlider];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };","map":{"version":3,"names":["DOCUMENT","CommonModule","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","ChangeDetectorRef","Optional","Attribute","NgZone","Inject","Input","Output","ViewChild","NgModule","mixinTabIndex","mixinColor","mixinDisabled","MatCommonModule","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","normalizePassiveListenerOptions","Subscription","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","_MatSliderBase","constructor","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","run","_touchId","getTouchIdForSlider","nativeElement","undefined","pointerPosition","getPointerPositionOnPage","oldValue","value","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","addEventListener","invert","max","v","_calculatePercentage","markForCheck","min","step","_roundToDecimal","toString","split","pop","length","thumbLabel","tickInterval","parseFloat","toFixed","vertical","displayValue","displayWith","focus","options","blur","_blurHostElement","percent","_clamp","_shouldInvertAxis","_isMinValue","_getThumbGap","_getTrackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_getTrackFillStyles","display","_getTicksContainerStyles","_getDirection","offset","_getTicksStyles","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","side","_getThumbContainerStyles","invertOffset","ngAfterViewInit","monitor","subscribe","origin","detectChanges","ngOnDestroy","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_onBlur","_onKeydown","keyCode","_increment","_onKeyup","_getWindow","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_keydown_HostBindingHandler","$event","MatSlider_keyup_HostBindingHandler","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","valueText","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","dependencies","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","String","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","providers","host","None","OnPush","id","point","touches","clientX","clientY","i","identifier","sliderHost","target","contains","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event) ?\n                    getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 29, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtext(2, \"\\n  \");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtext(4, \"\\n    \");\n        ɵngcc0.ɵɵelement(5, \"div\", 3);\n        ɵngcc0.ɵɵtext(6, \"\\n    \");\n        ɵngcc0.ɵɵelement(7, \"div\", 4);\n        ɵngcc0.ɵɵtext(8, \"\\n  \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(9, \"\\n  \");\n        ɵngcc0.ɵɵelementStart(10, \"div\", 5);\n        ɵngcc0.ɵɵtext(11, \"\\n    \");\n        ɵngcc0.ɵɵelement(12, \"div\", 6);\n        ɵngcc0.ɵɵtext(13, \"\\n  \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(14, \"\\n  \");\n        ɵngcc0.ɵɵelementStart(15, \"div\", 7);\n        ɵngcc0.ɵɵtext(16, \"\\n    \");\n        ɵngcc0.ɵɵelement(17, \"div\", 8);\n        ɵngcc0.ɵɵtext(18, \"\\n    \");\n        ɵngcc0.ɵɵelement(19, \"div\", 9);\n        ɵngcc0.ɵɵtext(20, \"\\n    \");\n        ɵngcc0.ɵɵelementStart(21, \"div\", 10);\n        ɵngcc0.ɵɵtext(22, \"\\n      \");\n        ɵngcc0.ɵɵelementStart(23, \"span\", 11);\n        ɵngcc0.ɵɵtext(24);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(25, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(26, \"\\n  \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(27, \"\\n\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(28, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(9);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, dependencies: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,YAAY,QAAQ,iBAAiB;AACxD,SAASC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACvN,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;AAClG,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,uBAAuB;AACnF,SAASC,cAAc,EAAEC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,QAAQ,uBAAuB;AACpI,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,qBAAqB,QAAQ,sCAAsC;AAC5E,SAASC,+BAA+B,QAAQ,uBAAuB;AACvE,SAASC,YAAY,QAAQ,MAAM;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,iBAAiB;AAEzC,MAAMC,GAAG,GAAG,CAAC,eAAe,CAAC;AAC7B,MAAMC,kBAAkB,GAAGP,+BAA+B,CAAC;EAAEQ,OAAO,EAAE;AAAM,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA,MAAMC,wBAAwB,GAAG,EAAE;AACnC;AACA,MAAMC,kBAAkB,GAAG,CAAC;AAC5B;AACA,MAAMC,6BAA6B,GAAG,CAAC;AACvC;AACA,MAAMC,0BAA0B,GAAG,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAG;EAC9BC,OAAO,EAAEhB,iBAAiB;EAC1BiB,WAAW,EAAEjD,UAAU,CAAC,MAAMkD,SAAS,CAAC;EACxCC,KAAK,EAAE;AACX,CAAC;AACD;AACA,MAAMC,eAAe,CAAC;AAEtB;AACA;AACA,MAAMC,cAAc,GAAGtC,aAAa,CAACC,UAAU,CAACC,aAAa,CAAC,MAAM;EAChEqC,WAAW,CAACC,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;AACJ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACd;AACA;AACA;AACA;AACA,MAAML,SAAS,SAASG,cAAc,CAAC;EACnCC,WAAW,CAACE,UAAU,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,cAAc,EAAE;IAC3G,KAAK,CAACP,UAAU,CAAC;IACjB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,IAAI,GAAG,GAAG;IACf,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAACC,MAAM,GAAG,IAAIvE,YAAY,EAAE;IAChC;IACA,IAAI,CAACwE,KAAK,GAAG,IAAIxE,YAAY,EAAE;IAC/B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACyE,WAAW,GAAG,IAAIzE,YAAY,EAAE;IACrC;IACA,IAAI,CAAC0E,SAAS,GAAG,MAAM,CAAE,CAAC;IAC1B,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB;AACR;AACA;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAACC,oBAAoB,GAAG,CAAC;IAC7B;IACA,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,6BAA6B,GAAG,MAAM,CAAE,CAAC;IAC9C;IACA,IAAI,CAACC,sBAAsB,GAAG/C,YAAY,CAACgD,KAAK;IAChD;IACA,IAAI,CAACC,YAAY,GAAIC,KAAK,IAAK;MAC3B;MACA;MACA,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACT,UAAU,IAAK,CAACU,YAAY,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAE,EAAE;QAClF;MACJ;MACA,IAAI,CAAC3B,OAAO,CAAC4B,GAAG,CAAC,MAAM;QACnB,IAAI,CAACC,QAAQ,GAAGH,YAAY,CAACF,KAAK,CAAC,GAC/BM,mBAAmB,CAACN,KAAK,EAAE,IAAI,CAAC9B,WAAW,CAACqC,aAAa,CAAC,GAAGC,SAAS;QAC1E,MAAMC,eAAe,GAAGC,wBAAwB,CAACV,KAAK,EAAE,IAAI,CAACK,QAAQ,CAAC;QACtE,IAAII,eAAe,EAAE;UACjB,MAAME,QAAQ,GAAG,IAAI,CAACC,KAAK;UAC3B,IAAI,CAACpB,UAAU,GAAG,SAAS;UAC3B,IAAI,CAACqB,iBAAiB,GAAGb,KAAK;UAC9BA,KAAK,CAACc,cAAc,EAAE;UACtB,IAAI,CAACC,iBAAiB,EAAE;UACxB,IAAI,CAACC,aAAa,EAAE,CAAC,CAAC;UACtB,IAAI,CAACC,iBAAiB,CAACjB,KAAK,CAAC;UAC7B,IAAI,CAACe,iBAAiB,EAAE;UACxB,IAAI,CAACG,wBAAwB,CAACT,eAAe,CAAC;UAC9C,IAAI,CAACU,kBAAkB,GAAGR,QAAQ;UAClC;UACA,IAAIA,QAAQ,IAAI,IAAI,CAACC,KAAK,EAAE;YACxB,IAAI,CAACQ,eAAe,EAAE;UAC1B;QACJ;MACJ,CAAC,CAAC;IACN,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAACC,YAAY,GAAIrB,KAAK,IAAK;MAC3B,IAAI,IAAI,CAACR,UAAU,KAAK,SAAS,EAAE;QAC/B,MAAMiB,eAAe,GAAGC,wBAAwB,CAACV,KAAK,EAAE,IAAI,CAACK,QAAQ,CAAC;QACtE,IAAII,eAAe,EAAE;UACjB;UACAT,KAAK,CAACc,cAAc,EAAE;UACtB,MAAMH,QAAQ,GAAG,IAAI,CAACC,KAAK;UAC3B,IAAI,CAACC,iBAAiB,GAAGb,KAAK;UAC9B,IAAI,CAACkB,wBAAwB,CAACT,eAAe,CAAC;UAC9C;UACA,IAAIE,QAAQ,IAAI,IAAI,CAACC,KAAK,EAAE;YACxB,IAAI,CAACQ,eAAe,EAAE;UAC1B;QACJ;MACJ;IACJ,CAAC;IACD;IACA,IAAI,CAACE,UAAU,GAAItB,KAAK,IAAK;MACzB,IAAI,IAAI,CAACR,UAAU,KAAK,SAAS,EAAE;QAC/B,IAAI,CAACU,YAAY,CAACF,KAAK,CAAC,IAAI,OAAO,IAAI,CAACK,QAAQ,KAAK,QAAQ;QACzD;QACA;QACAkB,iBAAiB,CAACvB,KAAK,CAACwB,cAAc,EAAE,IAAI,CAACnB,QAAQ,CAAC,EAAE;UACxDL,KAAK,CAACc,cAAc,EAAE;UACtB,IAAI,CAACW,mBAAmB,EAAE;UAC1B,IAAI,CAACjC,UAAU,GAAG,IAAI;UACtB,IAAI,CAACa,QAAQ,GAAGG,SAAS;UACzB,IAAI,IAAI,CAACW,kBAAkB,IAAI,IAAI,CAACP,KAAK,IAAI,CAAC,IAAI,CAACX,QAAQ,EAAE;YACzD,IAAI,CAACyB,gBAAgB,EAAE;UAC3B;UACA,IAAI,CAACP,kBAAkB,GAAG,IAAI,CAACN,iBAAiB,GAAG,IAAI;QAC3D;MACJ;IACJ,CAAC;IACD;IACA,IAAI,CAACc,WAAW,GAAG,MAAM;MACrB;MACA;MACA,IAAI,IAAI,CAACd,iBAAiB,EAAE;QACxB,IAAI,CAACS,UAAU,CAAC,IAAI,CAACT,iBAAiB,CAAC;MAC3C;IACJ,CAAC;IACD,IAAI,CAACpC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACF,QAAQ,GAAGqD,QAAQ,CAACrD,QAAQ,CAAC,IAAI,CAAC;IACvCC,OAAO,CAACqD,iBAAiB,CAAC,MAAM;MAC5B,MAAMC,OAAO,GAAG3D,UAAU,CAACoC,aAAa;MACxCuB,OAAO,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAChC,YAAY,EAAE3C,kBAAkB,CAAC;MAC5E0E,OAAO,CAACC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAChC,YAAY,EAAE3C,kBAAkB,CAAC;IACjF,CAAC,CAAC;EACN;EACA;EACA,IAAI4E,MAAM,GAAG;IAAE,OAAO,IAAI,CAACrD,OAAO;EAAE;EACpC,IAAIqD,MAAM,CAACpB,KAAK,EAAE;IACd,IAAI,CAACjC,OAAO,GAAG3C,qBAAqB,CAAC4E,KAAK,CAAC;EAC/C;EACA;EACA,IAAIqB,GAAG,GAAG;IAAE,OAAO,IAAI,CAACrD,IAAI;EAAE;EAC9B,IAAIqD,GAAG,CAACC,CAAC,EAAE;IACP,IAAI,CAACtD,IAAI,GAAG3C,oBAAoB,CAACiG,CAAC,EAAE,IAAI,CAACtD,IAAI,CAAC;IAC9C,IAAI,CAACW,QAAQ,GAAG,IAAI,CAAC4C,oBAAoB,CAAC,IAAI,CAAClD,MAAM,CAAC;IACtD;IACA,IAAI,CAACZ,kBAAkB,CAAC+D,YAAY,EAAE;EAC1C;EACA;EACA,IAAIC,GAAG,GAAG;IAAE,OAAO,IAAI,CAACxD,IAAI;EAAE;EAC9B,IAAIwD,GAAG,CAACH,CAAC,EAAE;IACP,IAAI,CAACrD,IAAI,GAAG5C,oBAAoB,CAACiG,CAAC,EAAE,IAAI,CAACrD,IAAI,CAAC;IAC9C,IAAI,CAACU,QAAQ,GAAG,IAAI,CAAC4C,oBAAoB,CAAC,IAAI,CAAClD,MAAM,CAAC;IACtD;IACA,IAAI,CAACZ,kBAAkB,CAAC+D,YAAY,EAAE;EAC1C;EACA;EACA,IAAIE,IAAI,GAAG;IAAE,OAAO,IAAI,CAACxD,KAAK;EAAE;EAChC,IAAIwD,IAAI,CAACJ,CAAC,EAAE;IACR,IAAI,CAACpD,KAAK,GAAG7C,oBAAoB,CAACiG,CAAC,EAAE,IAAI,CAACpD,KAAK,CAAC;IAChD,IAAI,IAAI,CAACA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MACtB,IAAI,CAACyD,eAAe,GAAG,IAAI,CAACzD,KAAK,CAAC0D,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM;IACxE;IACA;IACA,IAAI,CAACtE,kBAAkB,CAAC+D,YAAY,EAAE;EAC1C;EACA;EACA,IAAIQ,UAAU,GAAG;IAAE,OAAO,IAAI,CAAC7D,WAAW;EAAE;EAC5C,IAAI6D,UAAU,CAAChC,KAAK,EAAE;IAAE,IAAI,CAAC7B,WAAW,GAAG/C,qBAAqB,CAAC4E,KAAK,CAAC;EAAE;EACzE;AACJ;AACA;AACA;EACI,IAAIiC,YAAY,GAAG;IAAE,OAAO,IAAI,CAAC7D,aAAa;EAAE;EAChD,IAAI6D,YAAY,CAACjC,KAAK,EAAE;IACpB,IAAIA,KAAK,KAAK,MAAM,EAAE;MAClB,IAAI,CAAC5B,aAAa,GAAG,MAAM;IAC/B,CAAC,MACI,IAAI,OAAO4B,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7D,IAAI,CAAC5B,aAAa,GAAG/C,oBAAoB,CAAC2E,KAAK,EAAE,IAAI,CAAC5B,aAAa,CAAC;IACxE,CAAC,MACI;MACD,IAAI,CAACA,aAAa,GAAG,CAAC;IAC1B;EACJ;EACA;EACA,IAAI4B,KAAK,GAAG;IACR;IACA,IAAI,IAAI,CAAC3B,MAAM,KAAK,IAAI,EAAE;MACtB,IAAI,CAAC2B,KAAK,GAAG,IAAI,CAAC/B,IAAI;IAC1B;IACA,OAAO,IAAI,CAACI,MAAM;EACtB;EACA,IAAI2B,KAAK,CAACsB,CAAC,EAAE;IACT,IAAIA,CAAC,KAAK,IAAI,CAACjD,MAAM,EAAE;MACnB,IAAI2B,KAAK,GAAG3E,oBAAoB,CAACiG,CAAC,EAAE,CAAC,CAAC;MACtC;MACA;MACA,IAAI,IAAI,CAACK,eAAe,IAAI3B,KAAK,KAAK,IAAI,CAACyB,GAAG,IAAIzB,KAAK,KAAK,IAAI,CAACqB,GAAG,EAAE;QAClErB,KAAK,GAAGkC,UAAU,CAAClC,KAAK,CAACmC,OAAO,CAAC,IAAI,CAACR,eAAe,CAAC,CAAC;MAC3D;MACA,IAAI,CAACtD,MAAM,GAAG2B,KAAK;MACnB,IAAI,CAACrB,QAAQ,GAAG,IAAI,CAAC4C,oBAAoB,CAAC,IAAI,CAAClD,MAAM,CAAC;MACtD;MACA,IAAI,CAACZ,kBAAkB,CAAC+D,YAAY,EAAE;IAC1C;EACJ;EACA;EACA,IAAIY,QAAQ,GAAG;IAAE,OAAO,IAAI,CAAC9D,SAAS;EAAE;EACxC,IAAI8D,QAAQ,CAACpC,KAAK,EAAE;IAChB,IAAI,CAAC1B,SAAS,GAAGlD,qBAAqB,CAAC4E,KAAK,CAAC;EACjD;EACA;EACA,IAAIqC,YAAY,GAAG;IACf,IAAI,IAAI,CAACC,WAAW,EAAE;MAClB;MACA;MACA,OAAO,IAAI,CAACA,WAAW,CAAC,IAAI,CAACtC,KAAK,CAAC;IACvC;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC2B,eAAe,IAAI,IAAI,CAAC3B,KAAK,IAAI,IAAI,CAACA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MAC5D,OAAO,IAAI,CAACA,KAAK,CAACmC,OAAO,CAAC,IAAI,CAACR,eAAe,CAAC;IACnD;IACA,OAAO,IAAI,CAAC3B,KAAK,IAAI,CAAC;EAC1B;EACA;EACAuC,KAAK,CAACC,OAAO,EAAE;IACX,IAAI,CAACrC,iBAAiB,CAACqC,OAAO,CAAC;EACnC;EACA;EACAC,IAAI,GAAG;IACH,IAAI,CAACC,gBAAgB,EAAE;EAC3B;EACA;EACA,IAAIC,OAAO,GAAG;IAAE,OAAO,IAAI,CAACC,MAAM,CAAC,IAAI,CAACjE,QAAQ,CAAC;EAAE;EACnD;AACJ;AACA;AACA;EACIkE,iBAAiB,GAAG;IAChB;IACA;IACA,OAAO,IAAI,CAACT,QAAQ,GAAG,CAAC,IAAI,CAAChB,MAAM,GAAG,IAAI,CAACA,MAAM;EACrD;EACA;EACA0B,WAAW,GAAG;IACV,OAAO,IAAI,CAACH,OAAO,KAAK,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACII,YAAY,GAAG;IACX,IAAI,IAAI,CAAC1D,QAAQ,EAAE;MACf,OAAO1C,kBAAkB;IAC7B;IACA,IAAI,IAAI,CAACmG,WAAW,EAAE,IAAI,CAAC,IAAI,CAACd,UAAU,EAAE;MACxC,OAAO,IAAI,CAACnD,SAAS,GAAGhC,0BAA0B,GAAGD,6BAA6B;IACtF;IACA,OAAO,CAAC;EACZ;EACA;EACAoG,yBAAyB,GAAG;IACxB,MAAMC,IAAI,GAAG,IAAI,CAACb,QAAQ,GAAG,GAAG,GAAG,GAAG;IACtC,MAAMc,KAAK,GAAG,IAAI,CAACd,QAAQ,GAAI,MAAK,CAAC,GAAG,IAAI,CAACO,OAAQ,KAAI,GAAI,GAAE,CAAC,GAAG,IAAI,CAACA,OAAQ,QAAO;IACvF,MAAMQ,IAAI,GAAG,IAAI,CAACC,wBAAwB,EAAE,GAAG,GAAG,GAAG,EAAE;IACvD,OAAO;MACH;MACAC,SAAS,EAAG,YAAWJ,IAAK,IAAGE,IAAK,GAAE,IAAI,CAACJ,YAAY,EAAG,eAAcG,KAAM;IAClF,CAAC;EACL;EACA;EACAI,mBAAmB,GAAG;IAClB,MAAMX,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMM,IAAI,GAAG,IAAI,CAACb,QAAQ,GAAG,GAAG,GAAG,GAAG;IACtC,MAAMc,KAAK,GAAG,IAAI,CAACd,QAAQ,GAAI,MAAKO,OAAQ,KAAI,GAAI,GAAEA,OAAQ,QAAO;IACrE,MAAMQ,IAAI,GAAG,IAAI,CAACC,wBAAwB,EAAE,GAAG,EAAE,GAAG,GAAG;IACvD,OAAO;MACH;MACAC,SAAS,EAAG,YAAWJ,IAAK,IAAGE,IAAK,GAAE,IAAI,CAACJ,YAAY,EAAG,eAAcG,KAAM,GAAE;MAChF;MACA;MACA;MACA;MACAK,OAAO,EAAEZ,OAAO,KAAK,CAAC,GAAG,MAAM,GAAG;IACtC,CAAC;EACL;EACA;EACAa,wBAAwB,GAAG;IACvB,IAAIP,IAAI,GAAG,IAAI,CAACb,QAAQ,GAAG,GAAG,GAAG,GAAG;IACpC;IACA;IACA,IAAIe,IAAI,GAAG,CAAC,IAAI,CAACf,QAAQ,IAAI,IAAI,CAACqB,aAAa,EAAE,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG;IACrE,IAAIC,MAAM,GAAG,IAAI,CAAC5E,oBAAoB,GAAG,CAAC,GAAG,GAAG;IAChD,OAAO;MACH,WAAW,EAAG,YAAWmE,IAAK,IAAGE,IAAK,GAAEO,MAAO;IACnD,CAAC;EACL;EACA;EACAC,eAAe,GAAG;IACd,IAAIC,QAAQ,GAAG,IAAI,CAAC9E,oBAAoB,GAAG,GAAG;IAC9C,IAAI+E,cAAc,GAAG,IAAI,CAACzB,QAAQ,GAAI,OAAMwB,QAAS,GAAE,GAAI,GAAEA,QAAS,OAAM;IAC5E,IAAIX,IAAI,GAAG,IAAI,CAACb,QAAQ,GAAG,GAAG,GAAG,GAAG;IACpC;IACA;IACA;IACA,IAAIe,IAAI,GAAG,CAAC,IAAI,CAACf,QAAQ,IAAI,IAAI,CAACqB,aAAa,EAAE,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE;IACrE,IAAIK,MAAM,GAAG,CAAC,IAAI,CAAC1B,QAAQ,IAAI,IAAI,CAACqB,aAAa,EAAE,IAAI,KAAK,GAAG,iBAAiB,GAAG,EAAE;IACrF,IAAIM,MAAM,GAAG;MACT,gBAAgB,EAAEF,cAAc;MAChC;MACA,WAAW,EAAG,0BAAyBZ,IAAK,IAAGE,IAAK,GAAES,QAAQ,GAAG,CAAE,KAAIE,MAAO;IAClF,CAAC;IACD,IAAI,IAAI,CAAChB,WAAW,EAAE,IAAI,IAAI,CAACC,YAAY,EAAE,EAAE;MAC3C,MAAMiB,gBAAgB,GAAG,IAAI,CAACnB,iBAAiB,EAAE;MACjD,IAAIoB,IAAI;MACR,IAAI,IAAI,CAAC7B,QAAQ,EAAE;QACf6B,IAAI,GAAGD,gBAAgB,GAAG,QAAQ,GAAG,KAAK;MAC9C,CAAC,MACI;QACDC,IAAI,GAAGD,gBAAgB,GAAG,OAAO,GAAG,MAAM;MAC9C;MACAD,MAAM,CAAE,UAASE,IAAK,EAAC,CAAC,GAAI,GAAE,IAAI,CAAClB,YAAY,EAAG,IAAG;IACzD;IACA,OAAOgB,MAAM;EACjB;EACAG,wBAAwB,GAAG;IACvB,MAAMF,gBAAgB,GAAG,IAAI,CAACnB,iBAAiB,EAAE;IACjD,IAAII,IAAI,GAAG,IAAI,CAACb,QAAQ,GAAG,GAAG,GAAG,GAAG;IACpC;IACA;IACA,IAAI+B,YAAY,GAAI,IAAI,CAACV,aAAa,EAAE,IAAI,KAAK,IAAI,CAAC,IAAI,CAACrB,QAAQ,GAAI,CAAC4B,gBAAgB,GAAGA,gBAAgB;IAC3G,IAAIN,MAAM,GAAG,CAACS,YAAY,GAAG,IAAI,CAACxB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACA,OAAO,IAAI,GAAG;IACnE,OAAO;MACH,WAAW,EAAG,YAAWM,IAAK,KAAIS,MAAO;IAC7C,CAAC;EACL;EACA;AACJ;AACA;AACA;EACIN,wBAAwB,GAAG;IACvB,MAAMY,gBAAgB,GAAG,IAAI,CAACnB,iBAAiB,EAAE;IACjD,OAAQ,IAAI,CAACY,aAAa,EAAE,IAAI,KAAK,IAAI,CAAC,IAAI,CAACrB,QAAQ,GAAI,CAAC4B,gBAAgB,GAAGA,gBAAgB;EACnG;EACA;EACAP,aAAa,GAAG;IACZ,OAAQ,IAAI,CAAC/F,IAAI,IAAI,IAAI,CAACA,IAAI,CAACsC,KAAK,IAAI,KAAK,GAAI,KAAK,GAAG,KAAK;EAClE;EACAoE,eAAe,GAAG;IACd,IAAI,CAAC5G,aAAa,CACb6G,OAAO,CAAC,IAAI,CAAC/G,WAAW,EAAE,IAAI,CAAC,CAC/BgH,SAAS,CAAEC,MAAM,IAAK;MACvB,IAAI,CAAC1F,SAAS,GAAG,CAAC,CAAC0F,MAAM,IAAIA,MAAM,KAAK,UAAU;MAClD,IAAI,CAAC9G,kBAAkB,CAAC+G,aAAa,EAAE;IAC3C,CAAC,CAAC;IACF,IAAI,IAAI,CAAC9G,IAAI,EAAE;MACX,IAAI,CAACuB,sBAAsB,GAAG,IAAI,CAACvB,IAAI,CAACa,MAAM,CAAC+F,SAAS,CAAC,MAAM;QAC3D,IAAI,CAAC7G,kBAAkB,CAAC+D,YAAY,EAAE;MAC1C,CAAC,CAAC;IACN;EACJ;EACAiD,WAAW,GAAG;IACV,MAAMvD,OAAO,GAAG,IAAI,CAAC5D,WAAW,CAACqC,aAAa;IAC9CuB,OAAO,CAACwD,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACvF,YAAY,EAAE3C,kBAAkB,CAAC;IAC/E0E,OAAO,CAACwD,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACvF,YAAY,EAAE3C,kBAAkB,CAAC;IAChF,IAAI,CAACyD,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACY,mBAAmB,EAAE;IAC1B,IAAI,CAACrD,aAAa,CAACmH,cAAc,CAAC,IAAI,CAACrH,WAAW,CAAC;IACnD,IAAI,CAAC2B,sBAAsB,CAAC2F,WAAW,EAAE;EAC7C;EACAxE,aAAa,GAAG;IACZ,IAAI,IAAI,CAACf,QAAQ,EAAE;MACf;IACJ;IACA;IACA;IACA,IAAI,CAACN,iBAAiB,GAAG,IAAI,CAAC8F,oBAAoB,EAAE;IACpD,IAAI,CAACC,0BAA0B,EAAE;EACrC;EACAC,QAAQ,GAAG;IACP;IACA;IACA,IAAI,CAAChG,iBAAiB,GAAG,IAAI,CAAC8F,oBAAoB,EAAE;IACpD,IAAI,CAACC,0BAA0B,EAAE;EACrC;EACAE,OAAO,GAAG;IACN,IAAI,CAACtG,SAAS,EAAE;EACpB;EACAuG,UAAU,CAAC7F,KAAK,EAAE;IACd,IAAI,IAAI,CAACC,QAAQ,IAAI/D,cAAc,CAAC8D,KAAK,CAAC,IACrC,IAAI,CAACR,UAAU,IAAI,IAAI,CAACA,UAAU,KAAK,UAAW,EAAE;MACrD;IACJ;IACA,MAAMmB,QAAQ,GAAG,IAAI,CAACC,KAAK;IAC3B,QAAQZ,KAAK,CAAC8F,OAAO;MACjB,KAAKpJ,OAAO;QACR,IAAI,CAACqJ,UAAU,CAAC,EAAE,CAAC;QACnB;MACJ,KAAKtJ,SAAS;QACV,IAAI,CAACsJ,UAAU,CAAC,CAAC,EAAE,CAAC;QACpB;MACJ,KAAKvJ,GAAG;QACJ,IAAI,CAACoE,KAAK,GAAG,IAAI,CAACqB,GAAG;QACrB;MACJ,KAAK1F,IAAI;QACL,IAAI,CAACqE,KAAK,GAAG,IAAI,CAACyB,GAAG;QACrB;MACJ,KAAK/F,UAAU;QACX;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI,CAACyJ,UAAU,CAAC,IAAI,CAAC1B,aAAa,EAAE,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvD;MACJ,KAAKhI,QAAQ;QACT,IAAI,CAAC0J,UAAU,CAAC,CAAC,CAAC;QAClB;MACJ,KAAK3J,WAAW;QACZ;QACA,IAAI,CAAC2J,UAAU,CAAC,IAAI,CAAC1B,aAAa,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACvD;MACJ,KAAKlI,UAAU;QACX,IAAI,CAAC4J,UAAU,CAAC,CAAC,CAAC,CAAC;QACnB;MACJ;QACI;QACA;QACA;IAAO;IAEf,IAAIpF,QAAQ,IAAI,IAAI,CAACC,KAAK,EAAE;MACxB,IAAI,CAACQ,eAAe,EAAE;MACtB,IAAI,CAACM,gBAAgB,EAAE;IAC3B;IACA,IAAI,CAAClC,UAAU,GAAG,UAAU;IAC5BQ,KAAK,CAACc,cAAc,EAAE;EAC1B;EACAkF,QAAQ,GAAG;IACP,IAAI,IAAI,CAACxG,UAAU,KAAK,UAAU,EAAE;MAChC,IAAI,CAACA,UAAU,GAAG,IAAI;IAC1B;EACJ;EACA;EACAyG,UAAU,GAAG;IACT,OAAO,IAAI,CAACxH,SAAS,CAACyH,WAAW,IAAIC,MAAM;EAC/C;EACA;AACJ;AACA;AACA;AACA;EACIlF,iBAAiB,CAACmF,YAAY,EAAE;IAC5B;IACA;IACA,MAAMC,QAAQ,GAAG,IAAI,CAAC5H,SAAS;IAC/B,MAAM6H,OAAO,GAAGpG,YAAY,CAACkG,YAAY,CAAC;IAC1C,MAAMG,aAAa,GAAGD,OAAO,GAAG,WAAW,GAAG,WAAW;IACzD,MAAME,YAAY,GAAGF,OAAO,GAAG,UAAU,GAAG,SAAS;IACrDD,QAAQ,CAACtE,gBAAgB,CAACwE,aAAa,EAAE,IAAI,CAAClF,YAAY,EAAEjE,kBAAkB,CAAC;IAC/EiJ,QAAQ,CAACtE,gBAAgB,CAACyE,YAAY,EAAE,IAAI,CAAClF,UAAU,EAAElE,kBAAkB,CAAC;IAC5E,IAAIkJ,OAAO,EAAE;MACTD,QAAQ,CAACtE,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAACT,UAAU,EAAElE,kBAAkB,CAAC;IACjF;IACA,MAAM+I,MAAM,GAAG,IAAI,CAACF,UAAU,EAAE;IAChC,IAAI,OAAOE,MAAM,KAAK,WAAW,IAAIA,MAAM,EAAE;MACzCA,MAAM,CAACpE,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACJ,WAAW,CAAC;IACrD;EACJ;EACA;EACAF,mBAAmB,GAAG;IAClB,MAAM4E,QAAQ,GAAG,IAAI,CAAC5H,SAAS;IAC/B4H,QAAQ,CAACf,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACjE,YAAY,EAAEjE,kBAAkB,CAAC;IAChFiJ,QAAQ,CAACf,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAChE,UAAU,EAAElE,kBAAkB,CAAC;IAC5EiJ,QAAQ,CAACf,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACjE,YAAY,EAAEjE,kBAAkB,CAAC;IAChFiJ,QAAQ,CAACf,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAChE,UAAU,EAAElE,kBAAkB,CAAC;IAC7EiJ,QAAQ,CAACf,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAChE,UAAU,EAAElE,kBAAkB,CAAC;IAChF,MAAM+I,MAAM,GAAG,IAAI,CAACF,UAAU,EAAE;IAChC,IAAI,OAAOE,MAAM,KAAK,WAAW,IAAIA,MAAM,EAAE;MACzCA,MAAM,CAACb,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC3D,WAAW,CAAC;IACxD;EACJ;EACA;EACAoE,UAAU,CAACU,QAAQ,EAAE;IACjB,IAAI,CAAC7F,KAAK,GAAG,IAAI,CAAC4C,MAAM,CAAC,CAAC,IAAI,CAAC5C,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC0B,IAAI,GAAGmE,QAAQ,EAAE,IAAI,CAACpE,GAAG,EAAE,IAAI,CAACJ,GAAG,CAAC;EAC1F;EACA;EACAf,wBAAwB,CAACwF,GAAG,EAAE;IAC1B,IAAI,CAAC,IAAI,CAAC/G,iBAAiB,EAAE;MACzB;IACJ;IACA,IAAI2E,MAAM,GAAG,IAAI,CAACtB,QAAQ,GAAG,IAAI,CAACrD,iBAAiB,CAACgH,GAAG,GAAG,IAAI,CAAChH,iBAAiB,CAACiH,IAAI;IACrF,IAAIC,IAAI,GAAG,IAAI,CAAC7D,QAAQ,GAAG,IAAI,CAACrD,iBAAiB,CAACmH,MAAM,GAAG,IAAI,CAACnH,iBAAiB,CAACoH,KAAK;IACvF,IAAIC,YAAY,GAAG,IAAI,CAAChE,QAAQ,GAAG0D,GAAG,CAACO,CAAC,GAAGP,GAAG,CAACQ,CAAC;IAChD;IACA,IAAI3D,OAAO,GAAG,IAAI,CAACC,MAAM,CAAC,CAACwD,YAAY,GAAG1C,MAAM,IAAIuC,IAAI,CAAC;IACzD,IAAI,IAAI,CAAC7C,wBAAwB,EAAE,EAAE;MACjCT,OAAO,GAAG,CAAC,GAAGA,OAAO;IACzB;IACA;IACA;IACA;IACA;IACA,IAAIA,OAAO,KAAK,CAAC,EAAE;MACf,IAAI,CAAC3C,KAAK,GAAG,IAAI,CAACyB,GAAG;IACzB,CAAC,MACI,IAAIkB,OAAO,KAAK,CAAC,EAAE;MACpB,IAAI,CAAC3C,KAAK,GAAG,IAAI,CAACqB,GAAG;IACzB,CAAC,MACI;MACD,MAAMkF,UAAU,GAAG,IAAI,CAACC,eAAe,CAAC7D,OAAO,CAAC;MAChD;MACA;MACA,MAAM8D,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACJ,UAAU,GAAG,IAAI,CAAC9E,GAAG,IAAI,IAAI,CAACC,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,GAAG;MAC3F;MACA,IAAI,CAACzB,KAAK,GAAG,IAAI,CAAC4C,MAAM,CAAC6D,YAAY,EAAE,IAAI,CAAChF,GAAG,EAAE,IAAI,CAACJ,GAAG,CAAC;IAC9D;EACJ;EACA;EACAP,gBAAgB,GAAG;IACf,IAAI,CAAC9B,6BAA6B,CAAC,IAAI,CAACgB,KAAK,CAAC;IAC9C,IAAI,CAACvB,WAAW,CAACmI,IAAI,CAAC,IAAI,CAAC5G,KAAK,CAAC;IACjC,IAAI,CAACzB,MAAM,CAACqI,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAAE,CAAC;EAC/C;EACA;EACArG,eAAe,GAAG;IACd,IAAI,CAAChC,KAAK,CAACoI,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAAE,CAAC;EAC9C;EACA;EACA/B,0BAA0B,GAAG;IACzB,IAAI,CAAC,IAAI,CAAC7C,YAAY,IAAI,CAAC,IAAI,CAAClD,iBAAiB,EAAE;MAC/C;IACJ;IACA,IAAI,IAAI,CAACkD,YAAY,IAAI,MAAM,EAAE;MAC7B,IAAI6E,SAAS,GAAG,IAAI,CAAC1E,QAAQ,GAAG,IAAI,CAACrD,iBAAiB,CAACmH,MAAM,GAAG,IAAI,CAACnH,iBAAiB,CAACoH,KAAK;MAC5F,IAAIY,aAAa,GAAGD,SAAS,GAAG,IAAI,CAACpF,IAAI,IAAI,IAAI,CAACL,GAAG,GAAG,IAAI,CAACI,GAAG,CAAC;MACjE,IAAIuF,YAAY,GAAGN,IAAI,CAACO,IAAI,CAACvK,wBAAwB,GAAGqK,aAAa,CAAC;MACtE,IAAIG,aAAa,GAAGF,YAAY,GAAG,IAAI,CAACtF,IAAI;MAC5C,IAAI,CAAC5C,oBAAoB,GAAGoI,aAAa,GAAGJ,SAAS;IACzD,CAAC,MACI;MACD,IAAI,CAAChI,oBAAoB,GAAG,IAAI,CAACmD,YAAY,GAAG,IAAI,CAACP,IAAI,IAAI,IAAI,CAACL,GAAG,GAAG,IAAI,CAACI,GAAG,CAAC;IACrF;EACJ;EACA;EACAoF,kBAAkB,CAAC7G,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;IACnC,IAAIZ,KAAK,GAAG,IAAIjC,eAAe,EAAE;IACjCiC,KAAK,CAAC+H,MAAM,GAAG,IAAI;IACnB/H,KAAK,CAACY,KAAK,GAAGA,KAAK;IACnB,OAAOZ,KAAK;EAChB;EACA;EACAmC,oBAAoB,CAACvB,KAAK,EAAE;IACxB,OAAO,CAAC,CAACA,KAAK,IAAI,CAAC,IAAI,IAAI,CAACyB,GAAG,KAAK,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACI,GAAG,CAAC;EAC5D;EACA;EACA+E,eAAe,CAACY,UAAU,EAAE;IACxB,OAAO,IAAI,CAAC3F,GAAG,GAAG2F,UAAU,IAAI,IAAI,CAAC/F,GAAG,GAAG,IAAI,CAACI,GAAG,CAAC;EACxD;EACA;EACAmB,MAAM,CAAC5C,KAAK,EAAEyB,GAAG,GAAG,CAAC,EAAEJ,GAAG,GAAG,CAAC,EAAE;IAC5B,OAAOqF,IAAI,CAACrF,GAAG,CAACI,GAAG,EAAEiF,IAAI,CAACjF,GAAG,CAACzB,KAAK,EAAEqB,GAAG,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;EACIwD,oBAAoB,GAAG;IACnB,OAAO,IAAI,CAACwC,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC1H,aAAa,CAAC2H,qBAAqB,EAAE,GAAG,IAAI;EACjG;EACA;AACJ;AACA;AACA;EACInH,iBAAiB,CAACqC,OAAO,EAAE;IACvB,IAAI,CAAClF,WAAW,CAACqC,aAAa,CAAC4C,KAAK,CAACC,OAAO,CAAC;EACjD;EACA;EACAE,gBAAgB,GAAG;IACf,IAAI,CAACpF,WAAW,CAACqC,aAAa,CAAC8C,IAAI,EAAE;EACzC;EACA;AACJ;AACA;AACA;EACI8E,UAAU,CAACvH,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACA;AACJ;AACA;AACA;AACA;EACIwH,gBAAgB,CAACC,EAAE,EAAE;IACjB,IAAI,CAACzI,6BAA6B,GAAGyI,EAAE;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACIC,iBAAiB,CAACD,EAAE,EAAE;IAClB,IAAI,CAAC/I,SAAS,GAAG+I,EAAE;EACvB;EACA;AACJ;AACA;AACA;AACA;EACIE,gBAAgB,CAACC,UAAU,EAAE;IACzB,IAAI,CAACvI,QAAQ,GAAGuI,UAAU;EAC9B;AACJ;AACA3K,SAAS,CAAC4K,IAAI,GAAG,SAASC,iBAAiB,CAACC,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAI9K,SAAS,EAAEd,MAAM,CAAC6L,iBAAiB,CAAC7L,MAAM,CAAC/B,UAAU,CAAC,EAAE+B,MAAM,CAAC6L,iBAAiB,CAAC5L,MAAM,CAAClB,YAAY,CAAC,EAAEiB,MAAM,CAAC6L,iBAAiB,CAAC7L,MAAM,CAAC9B,iBAAiB,CAAC,EAAE8B,MAAM,CAAC6L,iBAAiB,CAAC3L,MAAM,CAAClB,cAAc,EAAE,CAAC,CAAC,EAAEgB,MAAM,CAAC8L,iBAAiB,CAAC,UAAU,CAAC,EAAE9L,MAAM,CAAC6L,iBAAiB,CAAC7L,MAAM,CAAC3B,MAAM,CAAC,EAAE2B,MAAM,CAAC6L,iBAAiB,CAACnO,QAAQ,CAAC,EAAEsC,MAAM,CAAC6L,iBAAiB,CAAChM,qBAAqB,EAAE,CAAC,CAAC,CAAC;AAAE,CAAC;AAC1biB,SAAS,CAACiL,IAAI,GAAG,aAAc/L,MAAM,CAACgM,iBAAiB,CAAC;EAAEC,IAAI,EAAEnL,SAAS;EAAEoL,SAAS,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;EAAEC,SAAS,EAAE,SAASC,eAAe,CAACC,EAAE,EAAEC,GAAG,EAAE;IAAE,IAAID,EAAE,GAAG,CAAC,EAAE;MAC3JrM,MAAM,CAACuM,WAAW,CAACnM,GAAG,EAAE,CAAC,CAAC;IAC9B;IAAE,IAAIiM,EAAE,GAAG,CAAC,EAAE;MACV,IAAIG,EAAE;MACNxM,MAAM,CAACyM,cAAc,CAACD,EAAE,GAAGxM,MAAM,CAAC0M,WAAW,EAAE,CAAC,KAAKJ,GAAG,CAACpB,cAAc,GAAGsB,EAAE,CAACG,KAAK,CAAC;IACvF;EAAE,CAAC;EAAEC,SAAS,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,qBAAqB,CAAC;EAAEC,QAAQ,EAAE,EAAE;EAAEC,YAAY,EAAE,SAASC,sBAAsB,CAACV,EAAE,EAAEC,GAAG,EAAE;IAAE,IAAID,EAAE,GAAG,CAAC,EAAE;MAC3JrM,MAAM,CAACgN,UAAU,CAAC,OAAO,EAAE,SAASC,kCAAkC,GAAG;QAAE,OAAOX,GAAG,CAAC1D,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC,MAAM,EAAE,SAASsE,iCAAiC,GAAG;QAAE,OAAOZ,GAAG,CAACzD,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,SAAS,EAAE,SAASsE,oCAAoC,CAACC,MAAM,EAAE;QAAE,OAAOd,GAAG,CAACxD,UAAU,CAACsE,MAAM,CAAC;MAAE,CAAC,CAAC,CAAC,OAAO,EAAE,SAASC,kCAAkC,GAAG;QAAE,OAAOf,GAAG,CAACrD,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC,YAAY,EAAE,SAASqE,uCAAuC,GAAG;QAAE,OAAOhB,GAAG,CAACrI,aAAa,EAAE;MAAE,CAAC,CAAC,CAAC,aAAa,EAAE,SAASsJ,wCAAwC,CAACH,MAAM,EAAE;QAAE,OAAOA,MAAM,CAACrJ,cAAc,EAAE;MAAE,CAAC,CAAC;IAChkB;IAAE,IAAIsI,EAAE,GAAG,CAAC,EAAE;MACVrM,MAAM,CAACwN,cAAc,CAAC,UAAU,EAAElB,GAAG,CAAC9K,QAAQ,CAAC;MAC/CxB,MAAM,CAACyN,WAAW,CAAC,eAAe,EAAEnB,GAAG,CAACpJ,QAAQ,CAAC,CAAC,eAAe,EAAEoJ,GAAG,CAACpH,GAAG,CAAC,CAAC,eAAe,EAAEoH,GAAG,CAAChH,GAAG,CAAC,CAAC,eAAe,EAAEgH,GAAG,CAACzI,KAAK,CAAC,CAAC,gBAAgB,EAAEyI,GAAG,CAACoB,SAAS,IAAI,IAAI,GAAGpB,GAAG,CAACpG,YAAY,GAAGoG,GAAG,CAACoB,SAAS,CAAC,CAAC,kBAAkB,EAAEpB,GAAG,CAACrG,QAAQ,GAAG,UAAU,GAAG,YAAY,CAAC;MAC3QjG,MAAM,CAAC2N,WAAW,CAAC,qBAAqB,EAAErB,GAAG,CAACpJ,QAAQ,CAAC,CAAC,sBAAsB,EAAEoJ,GAAG,CAACxG,YAAY,CAAC,CAAC,uBAAuB,EAAE,CAACwG,GAAG,CAACrG,QAAQ,CAAC,CAAC,0BAA0B,EAAEqG,GAAG,CAAC5F,iBAAiB,EAAE,CAAC,CAAC,gCAAgC,EAAE4F,GAAG,CAACrF,wBAAwB,EAAE,CAAC,CAAC,oBAAoB,EAAEqF,GAAG,CAAC7J,UAAU,CAAC,CAAC,gCAAgC,EAAE6J,GAAG,CAACzG,UAAU,CAAC,CAAC,qBAAqB,EAAEyG,GAAG,CAACrG,QAAQ,CAAC,CAAC,sBAAsB,EAAEqG,GAAG,CAAC3F,WAAW,EAAE,CAAC,CAAC,2BAA2B,EAAE2F,GAAG,CAACpJ,QAAQ,IAAIoJ,GAAG,CAAC3F,WAAW,EAAE,IAAI2F,GAAG,CAAC1F,YAAY,EAAE,IAAI0F,GAAG,CAAC5F,iBAAiB,EAAE,CAAC,CAAC,yBAAyB,EAAE4F,GAAG,CAAC3K,cAAc,KAAK,gBAAgB,CAAC;IACjmB;EAAE,CAAC;EAAEiM,MAAM,EAAE;IAAE1K,QAAQ,EAAE,UAAU;IAAE2K,KAAK,EAAE,OAAO;IAAErM,QAAQ,EAAE,UAAU;IAAEyD,MAAM,EAAE,QAAQ;IAAEC,GAAG,EAAE,KAAK;IAAEI,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE,MAAM;IAAEM,UAAU,EAAE,YAAY;IAAEC,YAAY,EAAE,cAAc;IAAEjC,KAAK,EAAE,OAAO;IAAEoC,QAAQ,EAAE,UAAU;IAAEE,WAAW,EAAE,aAAa;IAAEuH,SAAS,EAAE;EAAY,CAAC;EAAEI,OAAO,EAAE;IAAE1L,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAc,CAAC;EAAEyL,QAAQ,EAAE,CAAC,WAAW,CAAC;EAAEC,QAAQ,EAAE,CAAChO,MAAM,CAACiO,kBAAkB,CAAC,CAACtN,yBAAyB,CAAC,CAAC,EAAEX,MAAM,CAACkO,0BAA0B,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,0BAA0B,CAAC,EAAE,CAAC,CAAC,EAAE,6BAA6B,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,uBAAuB,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,4BAA4B,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,kBAAkB,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,4BAA4B,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,uBAAuB,CAAC,EAAE,CAAC,CAAC,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,EAAE,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,6BAA6B,CAAC,CAAC;EAAEC,QAAQ,EAAE,SAASC,kBAAkB,CAAClC,EAAE,EAAEC,GAAG,EAAE;IAAE,IAAID,EAAE,GAAG,CAAC,EAAE;MAC7+BrM,MAAM,CAACwO,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MACrCxO,MAAM,CAACyO,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC;MACxBzO,MAAM,CAACwO,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;MAClCxO,MAAM,CAACyO,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC;MAC1BzO,MAAM,CAAC0O,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;MAC7B1O,MAAM,CAACyO,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC;MAC1BzO,MAAM,CAAC0O,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;MAC7B1O,MAAM,CAACyO,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC;MACxBzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC;MACxBzO,MAAM,CAACwO,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;MACnCxO,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC3BzO,MAAM,CAAC0O,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;MAC9B1O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MACzBzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MACzBzO,MAAM,CAACwO,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;MACnCxO,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC3BzO,MAAM,CAAC0O,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;MAC9B1O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC3BzO,MAAM,CAAC0O,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;MAC9B1O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC3BzO,MAAM,CAACwO,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;MACpCxO,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC;MAC7BzO,MAAM,CAACwO,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC;MACrCxO,MAAM,CAACyO,MAAM,CAAC,EAAE,CAAC;MACjBzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC3BzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MACzBzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC;MACvBzO,MAAM,CAAC2O,YAAY,EAAE;MACrB3O,MAAM,CAACyO,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC;IAC3B;IAAE,IAAIpC,EAAE,GAAG,CAAC,EAAE;MACVrM,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC6O,UAAU,CAAC,SAAS,EAAEvC,GAAG,CAACzF,yBAAyB,EAAE,CAAC;MAC7D7G,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC6O,UAAU,CAAC,SAAS,EAAEvC,GAAG,CAACnF,mBAAmB,EAAE,CAAC;MACvDnH,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC6O,UAAU,CAAC,SAAS,EAAEvC,GAAG,CAACjF,wBAAwB,EAAE,CAAC;MAC5DrH,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC6O,UAAU,CAAC,SAAS,EAAEvC,GAAG,CAAC9E,eAAe,EAAE,CAAC;MACnDxH,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC6O,UAAU,CAAC,SAAS,EAAEvC,GAAG,CAACvE,wBAAwB,EAAE,CAAC;MAC5D/H,MAAM,CAAC4O,SAAS,CAAC,CAAC,CAAC;MACnB5O,MAAM,CAAC8O,iBAAiB,CAACxC,GAAG,CAACpG,YAAY,CAAC;IAC9C;EAAE,CAAC;EAAE6I,YAAY,EAAE,CAAC5O,MAAM,CAAC6O,OAAO,CAAC;EAAEpH,MAAM,EAAE,CAAC,ozPAAozP,CAAC;EAAEqH,aAAa,EAAE,CAAC;EAAEC,eAAe,EAAE;AAAE,CAAC,CAAC;AACh5PpO,SAAS,CAACqO,cAAc,GAAG,MAAM,CAC7B;EAAElD,IAAI,EAAEhO;AAAW,CAAC,EACpB;EAAEgO,IAAI,EAAElN;AAAa,CAAC,EACtB;EAAEkN,IAAI,EAAE/N;AAAkB,CAAC,EAC3B;EAAE+N,IAAI,EAAEjN,cAAc;EAAEoQ,UAAU,EAAE,CAAC;IAAEnD,IAAI,EAAE9N;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE8N,IAAI,EAAEoD,MAAM;EAAED,UAAU,EAAE,CAAC;IAAEnD,IAAI,EAAE7N,SAAS;IAAEkR,IAAI,EAAE,CAAC,UAAU;EAAG,CAAC;AAAE,CAAC,EACxE;EAAErD,IAAI,EAAE5N;AAAO,CAAC,EAChB;EAAE4N,IAAI,EAAExI,SAAS;EAAE2L,UAAU,EAAE,CAAC;IAAEnD,IAAI,EAAE3N,MAAM;IAAEgR,IAAI,EAAE,CAAC5R,QAAQ;EAAG,CAAC;AAAE,CAAC,EACtE;EAAEuO,IAAI,EAAEoD,MAAM;EAAED,UAAU,EAAE,CAAC;IAAEnD,IAAI,EAAE9N;EAAS,CAAC,EAAE;IAAE8N,IAAI,EAAE3N,MAAM;IAAEgR,IAAI,EAAE,CAACzP,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDiB,SAAS,CAACyO,cAAc,GAAG;EACvBtK,MAAM,EAAE,CAAC;IAAEgH,IAAI,EAAE1N;EAAM,CAAC,CAAC;EACzB2G,GAAG,EAAE,CAAC;IAAE+G,IAAI,EAAE1N;EAAM,CAAC,CAAC;EACtB+G,GAAG,EAAE,CAAC;IAAE2G,IAAI,EAAE1N;EAAM,CAAC,CAAC;EACtBgH,IAAI,EAAE,CAAC;IAAE0G,IAAI,EAAE1N;EAAM,CAAC,CAAC;EACvBsH,UAAU,EAAE,CAAC;IAAEoG,IAAI,EAAE1N;EAAM,CAAC,CAAC;EAC7BuH,YAAY,EAAE,CAAC;IAAEmG,IAAI,EAAE1N;EAAM,CAAC,CAAC;EAC/BsF,KAAK,EAAE,CAAC;IAAEoI,IAAI,EAAE1N;EAAM,CAAC,CAAC;EACxB4H,WAAW,EAAE,CAAC;IAAE8F,IAAI,EAAE1N;EAAM,CAAC,CAAC;EAC9BmP,SAAS,EAAE,CAAC;IAAEzB,IAAI,EAAE1N;EAAM,CAAC,CAAC;EAC5B0H,QAAQ,EAAE,CAAC;IAAEgG,IAAI,EAAE1N;EAAM,CAAC,CAAC;EAC3B6D,MAAM,EAAE,CAAC;IAAE6J,IAAI,EAAEzN;EAAO,CAAC,CAAC;EAC1B6D,KAAK,EAAE,CAAC;IAAE4J,IAAI,EAAEzN;EAAO,CAAC,CAAC;EACzB8D,WAAW,EAAE,CAAC;IAAE2J,IAAI,EAAEzN;EAAO,CAAC,CAAC;EAC/B0M,cAAc,EAAE,CAAC;IAAEe,IAAI,EAAExN,SAAS;IAAE6Q,IAAI,EAAE,CAAC,eAAe;EAAG,CAAC;AAClE,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOE,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKxP,MAAM,CAACyP,iBAAiB,CAAC3O,SAAS,EAAE,CAAC;IAC/FmL,IAAI,EAAEnO,SAAS;IACfwR,IAAI,EAAE,CAAC;MAAEI,QAAQ,EAAE,YAAY;MAAE3B,QAAQ,EAAE,WAAW;MAAE4B,SAAS,EAAE,CAAChP,yBAAyB,CAAC;MAAEiP,IAAI,EAAE;QAC1F,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,oBAAoB;QACjC,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,iBAAiB;QACjC;QACA;QACA,eAAe,EAAE,yBAAyB;QAC1C,OAAO,EAAE,gCAAgC;QACzC,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,UAAU;QACxB,sBAAsB,EAAE,UAAU;QAClC,sBAAsB,EAAE,KAAK;QAC7B,sBAAsB,EAAE,KAAK;QAC7B,sBAAsB,EAAE,OAAO;QAC/B;QACA;QACA;QACA;QACA;QACA,uBAAuB,EAAE,8CAA8C;QACvE,yBAAyB,EAAE,sCAAsC;QACjE,6BAA6B,EAAE,UAAU;QACzC,8BAA8B,EAAE,cAAc;QAC9C,+BAA+B,EAAE,WAAW;QAC5C,kCAAkC,EAAE,qBAAqB;QACzD;QACA;QACA,wCAAwC,EAAE,4BAA4B;QACtE,4BAA4B,EAAE,YAAY;QAC1C,wCAAwC,EAAE,YAAY;QACtD,6BAA6B,EAAE,UAAU;QACzC,8BAA8B,EAAE,eAAe;QAC/C,mCAAmC,EAAE,oEAAoE;QACzG,iCAAiC,EAAE;MACvC,CAAC;MAAEtB,QAAQ,EAAE,uxBAAuxB;MAAEV,MAAM,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;MAAEqB,aAAa,EAAElR,iBAAiB,CAAC8R,IAAI;MAAEX,eAAe,EAAElR,uBAAuB,CAAC8R,MAAM;MAAElI,MAAM,EAAE,CAAC,ozPAAozP;IAAE,CAAC;EACrvR,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEqE,IAAI,EAAEjM,MAAM,CAAC/B;IAAW,CAAC,EAAE;MAAEgO,IAAI,EAAEhM,MAAM,CAAClB;IAAa,CAAC,EAAE;MAAEkN,IAAI,EAAEjM,MAAM,CAAC9B;IAAkB,CAAC,EAAE;MAAE+N,IAAI,EAAE/L,MAAM,CAAClB,cAAc;MAAEoQ,UAAU,EAAE,CAAC;QAC1JnD,IAAI,EAAE9N;MACV,CAAC;IAAE,CAAC,EAAE;MAAE8N,IAAI,EAAEoD,MAAM;MAAED,UAAU,EAAE,CAAC;QAC/BnD,IAAI,EAAE7N,SAAS;QACfkR,IAAI,EAAE,CAAC,UAAU;MACrB,CAAC;IAAE,CAAC,EAAE;MAAErD,IAAI,EAAEjM,MAAM,CAAC3B;IAAO,CAAC,EAAE;MAAE4N,IAAI,EAAExI,SAAS;MAAE2L,UAAU,EAAE,CAAC;QAC3DnD,IAAI,EAAE3N,MAAM;QACZgR,IAAI,EAAE,CAAC5R,QAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAEuO,IAAI,EAAEoD,MAAM;MAAED,UAAU,EAAE,CAAC;QAC/BnD,IAAI,EAAE9N;MACV,CAAC,EAAE;QACC8N,IAAI,EAAE3N,MAAM;QACZgR,IAAI,EAAE,CAACzP,qBAAqB;MAChC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAE;IAAEuC,MAAM,EAAE,CAAC;MACrB6J,IAAI,EAAEzN;IACV,CAAC,CAAC;IAAE6D,KAAK,EAAE,CAAC;MACR4J,IAAI,EAAEzN;IACV,CAAC,CAAC;IAAE8D,WAAW,EAAE,CAAC;MACd2J,IAAI,EAAEzN;IACV,CAAC,CAAC;IAAEyG,MAAM,EAAE,CAAC;MACTgH,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAE2G,GAAG,EAAE,CAAC;MACN+G,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAE+G,GAAG,EAAE,CAAC;MACN2G,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAEgH,IAAI,EAAE,CAAC;MACP0G,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAEsH,UAAU,EAAE,CAAC;MACboG,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAEuH,YAAY,EAAE,CAAC;MACfmG,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAEsF,KAAK,EAAE,CAAC;MACRoI,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAE0H,QAAQ,EAAE,CAAC;MACXgG,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAE4H,WAAW,EAAE,CAAC;MACd8F,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAEmP,SAAS,EAAE,CAAC;MACZzB,IAAI,EAAE1N;IACV,CAAC,CAAC;IAAE2M,cAAc,EAAE,CAAC;MACjBe,IAAI,EAAExN,SAAS;MACf6Q,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;AACnB;AACA,SAASnM,YAAY,CAACF,KAAK,EAAE;EACzB;EACA;EACA;EACA,OAAOA,KAAK,CAACgJ,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG;AAChC;AACA;AACA,SAAStI,wBAAwB,CAACV,KAAK,EAAE8M,EAAE,EAAE;EACzC,IAAIC,KAAK;EACT,IAAI7M,YAAY,CAACF,KAAK,CAAC,EAAE;IACrB;IACA;IACA;IACA,IAAI,OAAO8M,EAAE,KAAK,QAAQ,EAAE;MACxBC,KAAK,GAAGxL,iBAAiB,CAACvB,KAAK,CAACgN,OAAO,EAAEF,EAAE,CAAC,IAAIvL,iBAAiB,CAACvB,KAAK,CAACwB,cAAc,EAAEsL,EAAE,CAAC;IAC/F,CAAC,MACI;MACD;MACAC,KAAK,GAAG/M,KAAK,CAACgN,OAAO,CAAC,CAAC,CAAC,IAAIhN,KAAK,CAACwB,cAAc,CAAC,CAAC,CAAC;IACvD;EACJ,CAAC,MACI;IACDuL,KAAK,GAAG/M,KAAK;EACjB;EACA,OAAO+M,KAAK,GAAG;IAAE7F,CAAC,EAAE6F,KAAK,CAACE,OAAO;IAAEhG,CAAC,EAAE8F,KAAK,CAACG;EAAQ,CAAC,GAAG1M,SAAS;AACrE;AACA;AACA,SAASe,iBAAiB,CAACyL,OAAO,EAAEF,EAAE,EAAE;EACpC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACrK,MAAM,EAAEwK,CAAC,EAAE,EAAE;IACrC,IAAIH,OAAO,CAACG,CAAC,CAAC,CAACC,UAAU,KAAKN,EAAE,EAAE;MAC9B,OAAOE,OAAO,CAACG,CAAC,CAAC;IACrB;EACJ;EACA,OAAO3M,SAAS;AACpB;AACA;AACA,SAASF,mBAAmB,CAACN,KAAK,EAAEqN,UAAU,EAAE;EAC5C,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnN,KAAK,CAACgN,OAAO,CAACrK,MAAM,EAAEwK,CAAC,EAAE,EAAE;IAC3C,MAAMG,MAAM,GAAGtN,KAAK,CAACgN,OAAO,CAACG,CAAC,CAAC,CAACG,MAAM;IACtC,IAAID,UAAU,KAAKC,MAAM,IAAID,UAAU,CAACE,QAAQ,CAACD,MAAM,CAAC,EAAE;MACtD,OAAOtN,KAAK,CAACgN,OAAO,CAACG,CAAC,CAAC,CAACC,UAAU;IACtC;EACJ;EACA,OAAO5M,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgN,eAAe,CAAC;AAEtBA,eAAe,CAAC/E,IAAI,GAAG,SAASgF,uBAAuB,CAAC9E,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAI6E,eAAe,GAAG;AAAE,CAAC;AACnGA,eAAe,CAACE,IAAI,GAAG,aAAc3Q,MAAM,CAAC4Q,gBAAgB,CAAC;EAAE3E,IAAI,EAAEwE;AAAgB,CAAC,CAAC;AACvFA,eAAe,CAACI,IAAI,GAAG,aAAc7Q,MAAM,CAAC8Q,gBAAgB,CAAC;EAAEC,OAAO,EAAE,CAACpT,YAAY,EAAEmB,eAAe,EAAEA,eAAe;AAAE,CAAC,CAAC;AAC3H,CAAC,YAAY;EAAE,CAAC,OAAO0Q,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKxP,MAAM,CAACyP,iBAAiB,CAACgB,eAAe,EAAE,CAAC;IACrGxE,IAAI,EAAEvN,QAAQ;IACd4Q,IAAI,EAAE,CAAC;MACCyB,OAAO,EAAE,CAACpT,YAAY,EAAEmB,eAAe,CAAC;MACxCkS,OAAO,EAAE,CAAClQ,SAAS,EAAEhC,eAAe,CAAC;MACrCmS,YAAY,EAAE,CAACnQ,SAAS;IAC5B,CAAC;EACT,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC,GAAG;AACzB,CAAC,YAAY;EAAE,CAAC,OAAOoQ,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKlR,MAAM,CAACmR,kBAAkB,CAACV,eAAe,EAAE;IAAEQ,YAAY,EAAE,YAAY;MAAE,OAAO,CAACnQ,SAAS,CAAC;IAAE,CAAC;IAAEiQ,OAAO,EAAE,YAAY;MAAE,OAAO,CAACpT,YAAY,EAAEmB,eAAe,CAAC;IAAE,CAAC;IAAEkS,OAAO,EAAE,YAAY;MAAE,OAAO,CAAClQ,SAAS,EAAEhC,eAAe,CAAC;IAAE;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAE1S;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS6B,yBAAyB,EAAEG,SAAS,EAAEE,eAAe,EAAEyP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}