{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize, map } from 'rxjs/operators';\nimport { ServiceMap } from '../service-map.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/service-map.service\";\nimport * as i2 from \"app/entities/ride-costs/service/ride-costs.service\";\nimport * as i3 from \"app/entities/create-your-event-service/service/create-your-event-service.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../../shared/language/translate.directive\";\nimport * as i9 from \"../../../shared/alert/alert-error.component\";\nfunction ServiceMapUpdateComponent_div_28_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 24);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ServiceMapUpdateComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ServiceMapUpdateComponent_div_28_small_2_Template, 2, 0, \"small\", 23);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.editForm.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ServiceMapUpdateComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rideCostsOption_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", rideCostsOption_r4.id === (ctx_r1.editForm.get(\"rideCost\").value == null ? null : ctx_r1.editForm.get(\"rideCost\").value.id) ? ctx_r1.editForm.get(\"rideCost\").value : rideCostsOption_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", rideCostsOption_r4.id, \"\\n            \");\n  }\n}\nfunction ServiceMapUpdateComponent_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const createYourEventServiceOption_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", createYourEventServiceOption_r5.id === (ctx_r2.editForm.get(\"createYourEventService\").value == null ? null : ctx_r2.editForm.get(\"createYourEventService\").value.id) ? ctx_r2.editForm.get(\"createYourEventService\").value : createYourEventServiceOption_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", createYourEventServiceOption_r5.id, \"\\n            \");\n  }\n}\nexport let ServiceMapUpdateComponent = /*#__PURE__*/(() => {\n  class ServiceMapUpdateComponent {\n    constructor(serviceMapService, rideCostsService, createYourEventServiceService, activatedRoute, fb) {\n      this.serviceMapService = serviceMapService;\n      this.rideCostsService = rideCostsService;\n      this.createYourEventServiceService = createYourEventServiceService;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.isSaving = false;\n      this.rideCostsCollection = [];\n      this.createYourEventServicesSharedCollection = [];\n      this.editForm = this.fb.group({\n        id: [],\n        title: [null, [Validators.required]],\n        rideCost: [],\n        createYourEventService: []\n      });\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        serviceMap\n      }) => {\n        this.updateForm(serviceMap);\n        this.loadRelationshipsOptions();\n      });\n    }\n    previousState() {\n      window.history.back();\n    }\n    save() {\n      this.isSaving = true;\n      const serviceMap = this.createFromForm();\n      if (serviceMap.id !== undefined) {\n        this.subscribeToSaveResponse(this.serviceMapService.update(serviceMap));\n      } else {\n        this.subscribeToSaveResponse(this.serviceMapService.create(serviceMap));\n      }\n    }\n    trackRideCostsById(index, item) {\n      return item.id;\n    }\n    trackCreateYourEventServiceById(index, item) {\n      return item.id;\n    }\n    subscribeToSaveResponse(result) {\n      result.pipe(finalize(() => this.onSaveFinalize())).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n    }\n    onSaveSuccess() {\n      this.previousState();\n    }\n    onSaveError() {\n      // Api for inheritance.\n    }\n    onSaveFinalize() {\n      this.isSaving = false;\n    }\n    updateForm(serviceMap) {\n      this.editForm.patchValue({\n        id: serviceMap.id,\n        title: serviceMap.title,\n        rideCost: serviceMap.rideCost,\n        createYourEventService: serviceMap.createYourEventService\n      });\n      this.rideCostsCollection = this.rideCostsService.addRideCostsToCollectionIfMissing(this.rideCostsCollection, serviceMap.rideCost);\n      this.createYourEventServicesSharedCollection = this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(this.createYourEventServicesSharedCollection, serviceMap.createYourEventService);\n    }\n    loadRelationshipsOptions() {\n      this.rideCostsService.query({\n        filter: 'servicemap-is-null'\n      }).pipe(map(res => res.body ?? [])).pipe(map(rideCosts => this.rideCostsService.addRideCostsToCollectionIfMissing(rideCosts, this.editForm.get('rideCost').value))).subscribe(rideCosts => this.rideCostsCollection = rideCosts);\n      this.createYourEventServiceService.query().pipe(map(res => res.body ?? [])).pipe(map(createYourEventServices => this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(createYourEventServices, this.editForm.get('createYourEventService').value))).subscribe(createYourEventServices => this.createYourEventServicesSharedCollection = createYourEventServices);\n    }\n    createFromForm() {\n      return {\n        ...new ServiceMap(),\n        id: this.editForm.get(['id']).value,\n        title: this.editForm.get(['title']).value,\n        rideCost: this.editForm.get(['rideCost']).value,\n        createYourEventService: this.editForm.get(['createYourEventService']).value\n      };\n    }\n  }\n  ServiceMapUpdateComponent.ɵfac = function ServiceMapUpdateComponent_Factory(t) {\n    return new (t || ServiceMapUpdateComponent)(i0.ɵɵdirectiveInject(i1.ServiceMapService), i0.ɵɵdirectiveInject(i2.RideCostsService), i0.ɵɵdirectiveInject(i3.CreateYourEventServiceService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder));\n  };\n  ServiceMapUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServiceMapUpdateComponent,\n    selectors: [[\"jhi-service-map-update\"]],\n    decls: 80,\n    vars: 11,\n    consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-service-map-heading\", \"data-cy\", \"ServiceMapCreateUpdateHeading\", \"jhiTranslate\", \"createyoureventApp.serviceMap.home.createOrEditLabel\"], [1, \"form-group\", 3, \"hidden\"], [\"jhiTranslate\", \"global.field.id\", \"for\", \"field_id\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"id\", \"id\", \"field_id\", \"data-cy\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.title\", \"for\", \"field_title\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"field_title\", \"data-cy\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [4, \"ngIf\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.rideCost\", \"for\", \"field_rideCost\", 1, \"form-control-label\"], [\"id\", \"field_rideCost\", \"data-cy\", \"rideCost\", \"name\", \"rideCost\", \"formControlName\", \"rideCost\", 1, \"form-control\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.createYourEventService\", \"for\", \"field_createYourEventService\", 1, \"form-control-label\"], [\"id\", \"field_createYourEventService\", \"data-cy\", \"createYourEventService\", \"name\", \"createYourEventService\", \"formControlName\", \"createYourEventService\", 1, \"form-control\"], [\"type\", \"button\", \"id\", \"cancel-save\", \"data-cy\", \"entityCreateCancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", \"data-cy\", \"entityCreateSaveButton\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"entity.validation.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"entity.validation.required\", 1, \"form-text\", \"text-danger\"]],\n    template: function ServiceMapUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n    \");\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ServiceMapUpdateComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(5, \"\\n      \");\n        i0.ɵɵelementStart(6, \"h2\", 3);\n        i0.ɵɵtext(7, \"\\n        Create or edit a Service Map\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\n\\n      \");\n        i0.ɵɵelementStart(9, \"div\");\n        i0.ɵɵtext(10, \"\\n        \");\n        i0.ɵɵelement(11, \"jhi-alert-error\");\n        i0.ɵɵtext(12, \"\\n\\n        \");\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵtext(14, \"\\n          \");\n        i0.ɵɵelementStart(15, \"label\", 5);\n        i0.ɵɵtext(16, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \"\\n          \");\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵtext(19, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n\\n        \");\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵtext(22, \"\\n          \");\n        i0.ɵɵelementStart(23, \"label\", 8);\n        i0.ɵɵtext(24, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\n          \");\n        i0.ɵɵelement(26, \"input\", 9);\n        i0.ɵɵtext(27, \"\\n          \");\n        i0.ɵɵtemplate(28, ServiceMapUpdateComponent_div_28_Template, 4, 1, \"div\", 10);\n        i0.ɵɵtext(29, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \"\\n\\n        \");\n        i0.ɵɵelementStart(31, \"div\", 7);\n        i0.ɵɵtext(32, \"\\n          \");\n        i0.ɵɵelementStart(33, \"label\", 11);\n        i0.ɵɵtext(34, \"Ride Cost\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \"\\n          \");\n        i0.ɵɵelementStart(36, \"select\", 12);\n        i0.ɵɵtext(37, \"\\n            \");\n        i0.ɵɵelement(38, \"option\", 13);\n        i0.ɵɵtext(39, \"\\n            \");\n        i0.ɵɵtemplate(40, ServiceMapUpdateComponent_option_40_Template, 2, 2, \"option\", 14);\n        i0.ɵɵtext(41, \"\\n          \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(42, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \"\\n\\n        \");\n        i0.ɵɵelementStart(44, \"div\", 7);\n        i0.ɵɵtext(45, \"\\n          \");\n        i0.ɵɵelementStart(46, \"label\", 15);\n        i0.ɵɵtext(47, \"Create Your Event Service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48, \"\\n          \");\n        i0.ɵɵelementStart(49, \"select\", 16);\n        i0.ɵɵtext(50, \"\\n            \");\n        i0.ɵɵelement(51, \"option\", 13);\n        i0.ɵɵtext(52, \"\\n            \");\n        i0.ɵɵtemplate(53, ServiceMapUpdateComponent_option_53_Template, 2, 2, \"option\", 14);\n        i0.ɵɵtext(54, \"\\n          \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(55, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(56, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(57, \"\\n\\n      \");\n        i0.ɵɵelementStart(58, \"div\");\n        i0.ɵɵtext(59, \"\\n        \");\n        i0.ɵɵelementStart(60, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function ServiceMapUpdateComponent_Template_button_click_60_listener() {\n          return ctx.previousState();\n        });\n        i0.ɵɵtext(61, \"\\n          \");\n        i0.ɵɵelement(62, \"fa-icon\", 18);\n        i0.ɵɵtext(63, \"\\u00A0\");\n        i0.ɵɵelementStart(64, \"span\", 19);\n        i0.ɵɵtext(65, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(66, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(67, \"\\n\\n        \");\n        i0.ɵɵelementStart(68, \"button\", 20);\n        i0.ɵɵtext(69, \"\\n          \");\n        i0.ɵɵelement(70, \"fa-icon\", 21);\n        i0.ɵɵtext(71, \"\\u00A0\");\n        i0.ɵɵelementStart(72, \"span\", 22);\n        i0.ɵɵtext(73, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(74, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(75, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(76, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(77, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(78, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(79, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"hidden\", ctx.editForm.get(\"id\").value == null);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"title\").invalid && (ctx.editForm.get(\"title\").dirty || ctx.editForm.get(\"title\").touched));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rideCostsCollection)(\"ngForTrackBy\", ctx.trackRideCostsById);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.createYourEventServicesSharedCollection)(\"ngForTrackBy\", ctx.trackCreateYourEventServiceById);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n      }\n    },\n    dependencies: [i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.NgForOf, i6.NgIf, i7.FaIconComponent, i5.FormGroupDirective, i5.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent],\n    encapsulation: 2\n  });\n  return ServiceMapUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}