{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nfunction MetricsSystemComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"div\", 2);\n    i0.ɵɵtext(5, \"Uptime\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n    i0.ɵɵelementStart(7, \"div\", 3);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n\\n  \");\n    i0.ɵɵelementStart(11, \"div\", 1);\n    i0.ɵɵtext(12, \"\\n    \");\n    i0.ɵɵelementStart(13, \"div\", 2);\n    i0.ɵɵtext(14, \"Start time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n    \");\n    i0.ɵɵelementStart(16, \"div\", 3);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n\\n  \");\n    i0.ɵɵelementStart(21, \"div\", 1);\n    i0.ɵɵtext(22, \"\\n    \");\n    i0.ɵɵelementStart(23, \"div\", 4);\n    i0.ɵɵtext(24, \"Process CPU usage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n    \");\n    i0.ɵɵelementStart(26, \"div\", 5);\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n\\n  \");\n    i0.ɵɵelementStart(31, \"ngb-progressbar\", 6);\n    i0.ɵɵtext(32, \"\\n    \");\n    i0.ɵɵelementStart(33, \"span\");\n    i0.ɵɵtext(34);\n    i0.ɵɵpipe(35, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n\\n  \");\n    i0.ɵɵelementStart(38, \"div\", 1);\n    i0.ɵɵtext(39, \"\\n    \");\n    i0.ɵɵelementStart(40, \"div\", 4);\n    i0.ɵɵtext(41, \"System CPU usage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n    \");\n    i0.ɵɵelementStart(43, \"div\", 5);\n    i0.ɵɵtext(44);\n    i0.ɵɵpipe(45, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n\\n  \");\n    i0.ɵɵelementStart(48, \"ngb-progressbar\", 6);\n    i0.ɵɵtext(49, \"\\n    \");\n    i0.ɵɵelementStart(50, \"span\");\n    i0.ɵɵtext(51);\n    i0.ɵɵpipe(52, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(53, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n\\n  \");\n    i0.ɵɵelementStart(55, \"div\", 1);\n    i0.ɵɵtext(56, \"\\n    \");\n    i0.ɵɵelementStart(57, \"div\", 4);\n    i0.ɵɵtext(58, \"System CPU count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59, \"\\n    \");\n    i0.ɵɵelementStart(60, \"div\", 5);\n    i0.ɵɵtext(61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(62, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n\\n  \");\n    i0.ɵɵelementStart(64, \"div\", 1);\n    i0.ɵɵtext(65, \"\\n    \");\n    i0.ɵɵelementStart(66, \"div\", 4);\n    i0.ɵɵtext(67, \"System 1m Load average\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(68, \"\\n    \");\n    i0.ɵɵelementStart(69, \"div\", 5);\n    i0.ɵɵtext(70);\n    i0.ɵɵpipe(71, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(72, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(73, \"\\n\\n  \");\n    i0.ɵɵelementStart(74, \"div\", 1);\n    i0.ɵɵtext(75, \"\\n    \");\n    i0.ɵɵelementStart(76, \"div\", 4);\n    i0.ɵɵtext(77, \"Process files max\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(78, \"\\n    \");\n    i0.ɵɵelementStart(79, \"div\", 5);\n    i0.ɵɵtext(80);\n    i0.ɵɵpipe(81, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(82, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(83, \"\\n\\n  \");\n    i0.ɵɵelementStart(84, \"div\", 1);\n    i0.ɵɵtext(85, \"\\n    \");\n    i0.ɵɵelementStart(86, \"div\", 4);\n    i0.ɵɵtext(87, \"Process files open\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(88, \"\\n    \");\n    i0.ɵɵelementStart(89, \"div\", 5);\n    i0.ɵɵtext(90);\n    i0.ɵɵpipe(91, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(92, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(93, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r0.convertMillisecondsToDuration(ctx_r0.systemMetrics[\"process.uptime\"]));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 16, ctx_r0.systemMetrics[\"process.start.time\"], \"full\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(28, 19, 100 * ctx_r0.systemMetrics[\"process.cpu.usage\"], \"1.0-2\"), \" %\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", 100 * ctx_r0.systemMetrics[\"process.cpu.usage\"])(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(35, 22, 100 * ctx_r0.systemMetrics[\"process.cpu.usage\"], \"1.0-2\"), \" %\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(45, 25, 100 * ctx_r0.systemMetrics[\"system.cpu.usage\"], \"1.0-2\"), \" %\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", 100 * ctx_r0.systemMetrics[\"system.cpu.usage\"])(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(52, 28, 100 * ctx_r0.systemMetrics[\"system.cpu.usage\"], \"1.0-2\"), \" %\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r0.systemMetrics[\"system.cpu.count\"]);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(71, 31, ctx_r0.systemMetrics[\"system.load.average.1m\"], \"1.0-2\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(81, 34, ctx_r0.systemMetrics[\"process.files.max\"], \"1.0-0\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(91, 37, ctx_r0.systemMetrics[\"process.files.open\"], \"1.0-0\"));\n  }\n}\nexport let MetricsSystemComponent = /*#__PURE__*/(() => {\n  class MetricsSystemComponent {\n    convertMillisecondsToDuration(ms) {\n      const times = {\n        year: 31557600000,\n        month: 2629746000,\n        day: 86400000,\n        hour: 3600000,\n        minute: 60000,\n        second: 1000\n      };\n      let timeString = '';\n      for (const [key, value] of Object.entries(times)) {\n        if (Math.floor(ms / value) > 0) {\n          let plural = '';\n          if (Math.floor(ms / value) > 1) {\n            plural = 's';\n          }\n          timeString += Math.floor(ms / value).toString() + ' ' + key.toString() + plural + ' ';\n          ms = ms - value * Math.floor(ms / value);\n        }\n      }\n      return timeString;\n    }\n  }\n  MetricsSystemComponent.ɵfac = function MetricsSystemComponent_Factory(t) {\n    return new (t || MetricsSystemComponent)();\n  };\n  MetricsSystemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MetricsSystemComponent,\n    selectors: [[\"jhi-metrics-system\"]],\n    inputs: {\n      systemMetrics: \"systemMetrics\",\n      updating: \"updating\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"col-md-8\", \"text-right\"], [1, \"col-md-9\"], [1, \"col-md-3\", \"text-right\"], [\"type\", \"success\", 3, \"value\", \"striped\", \"animated\"]],\n    template: function MetricsSystemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵtemplate(3, MetricsSystemComponent_ng_container_3_Template, 94, 40, \"ng-container\", 0);\n        i0.ɵɵtext(4, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.systemMetrics);\n      }\n    },\n    dependencies: [i1.NgIf, i2.NgbProgressbar, i1.DecimalPipe, i1.DatePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MetricsSystemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}