{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/util/alert.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nfunction AlertComponent_div_2_ngb_alert_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngb-alert\", 4);\n    i0.ɵɵlistener(\"closed\", function AlertComponent_div_2_ngb_alert_2_Template_ngb_alert_closed_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const alert_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.close(alert_r1));\n    });\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelement(2, \"pre\", 5);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alert_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", alert_r1.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", alert_r1.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AlertComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, AlertComponent_div_2_ngb_alert_2_Template, 4, 2, \"ngb-alert\", 3);\n    i0.ɵɵtext(3, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alert_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.setClasses(alert_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", alert_r1.message);\n  }\n}\nexport let AlertComponent = /*#__PURE__*/(() => {\n  class AlertComponent {\n    constructor(alertService) {\n      this.alertService = alertService;\n      this.alerts = [];\n    }\n    ngOnInit() {\n      this.alerts = this.alertService.get();\n    }\n    setClasses(alert) {\n      const classes = {\n        'jhi-toast': Boolean(alert.toast)\n      };\n      if (alert.position) {\n        return {\n          ...classes,\n          [alert.position]: true\n        };\n      }\n      return classes;\n    }\n    ngOnDestroy() {\n      this.alertService.clear();\n    }\n    close(alert) {\n      alert.close?.(this.alerts);\n    }\n  }\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i1.AlertService));\n  };\n  AlertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"jhi-alert\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"role\", \"alert\", 1, \"alerts\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"type\", \"closed\", 4, \"ngIf\"], [3, \"type\", \"closed\"], [3, \"innerHTML\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵtemplate(2, AlertComponent_div_2_Template, 4, 2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.alerts);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgbAlert],\n    encapsulation: 2\n  });\n  return AlertComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}