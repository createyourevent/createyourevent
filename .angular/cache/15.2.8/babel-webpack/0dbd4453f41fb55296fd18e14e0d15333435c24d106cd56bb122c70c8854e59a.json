{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-webstorage\";\nexport class StateStorageService {\n  constructor($sessionStorage) {\n    _defineProperty(this, \"$sessionStorage\", void 0);\n    _defineProperty(this, \"previousUrlKey\", 'previousUrl');\n    this.$sessionStorage = $sessionStorage;\n  }\n  storeUrl(url) {\n    this.$sessionStorage.store(this.previousUrlKey, url);\n  }\n  getUrl() {\n    return this.$sessionStorage.retrieve(this.previousUrlKey);\n  }\n  clearUrl() {\n    this.$sessionStorage.clear(this.previousUrlKey);\n  }\n}\n_defineProperty(StateStorageService, \"\\u0275fac\", function StateStorageService_Factory(t) {\n  return new (t || StateStorageService)(i0.ɵɵinject(i1.SessionStorageService));\n});\n_defineProperty(StateStorageService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StateStorageService,\n  factory: StateStorageService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";;;AAIA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,eAAsC;IAAA;IAAA,wCAFjC,aAAa;IAElB,oBAAe,GAAfA,eAAe;EAA0B;EAE7DC,QAAQ,CAACC,GAAW;IAClB,IAAI,CAACF,eAAe,CAACG,KAAK,CAAC,IAAI,CAACC,cAAc,EAAEF,GAAG,CAAC;EACtD;EAEAG,MAAM;IACJ,OAAO,IAAI,CAACL,eAAe,CAACM,QAAQ,CAAC,IAAI,CAACF,cAAc,CAAkB;EAC5E;EAEAG,QAAQ;IACN,IAAI,CAACP,eAAe,CAACQ,KAAK,CAAC,IAAI,CAACJ,cAAc,CAAC;EACjD;;gBAfWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAA,gBAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAW,SAAnBX,mBAAmB;EAAAY,YADN;AAAM","names":["StateStorageService","constructor","$sessionStorage","storeUrl","url","store","previousUrlKey","getUrl","retrieve","clearUrl","clear","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/core/auth/state-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SessionStorageService } from 'ngx-webstorage';\n\n@Injectable({ providedIn: 'root' })\nexport class StateStorageService {\n  private previousUrlKey = 'previousUrl';\n\n  constructor(private $sessionStorage: SessionStorageService) {}\n\n  storeUrl(url: string): void {\n    this.$sessionStorage.store(this.previousUrlKey, url);\n  }\n\n  getUrl(): string | null {\n    return this.$sessionStorage.retrieve(this.previousUrlKey) as string | null;\n  }\n\n  clearUrl(): void {\n    this.$sessionStorage.clear(this.previousUrlKey);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}