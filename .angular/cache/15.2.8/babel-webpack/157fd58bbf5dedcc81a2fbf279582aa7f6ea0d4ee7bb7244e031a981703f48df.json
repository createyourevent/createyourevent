{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/entities/point/service/point.service\";\nimport * as i3 from \"app/entities/chips/service/chips.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../../shared/language/translate.directive\";\nimport * as i6 from \"primeng/card\";\nfunction ChipsOverviewComponent_ng_container_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelement(2, \"hr\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"span\", 13);\n    i0.ɵɵtext(7, \"Congratulations. All chips founded.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n     \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n  \");\n    i0.ɵɵelement(10, \"hr\");\n    i0.ɵɵtext(11, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ChipsOverviewComponent_ng_container_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"p-card\", 14);\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"div\", 15);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelement(8, \"img\", 16);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementStart(10, \"div\", 17);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const chips_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"header\", chips_r2.website);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", \"data:\" + chips_r2.imageContentType + \";base64,\" + chips_r2.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(\"color: \" + chips_r2.color + \";\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(chips_r2.points);\n  }\n}\nexport class ChipsOverviewComponent {\n  constructor(generalService, pointService, chipsService) {\n    _defineProperty(this, \"generalService\", void 0);\n    _defineProperty(this, \"pointService\", void 0);\n    _defineProperty(this, \"chipsService\", void 0);\n    _defineProperty(this, \"user\", void 0);\n    _defineProperty(this, \"foundedChips\", []);\n    _defineProperty(this, \"allChips\", []);\n    _defineProperty(this, \"totalPoints\", 0);\n    _defineProperty(this, \"totalCoins\", 0);\n    this.generalService = generalService;\n    this.pointService = pointService;\n    this.chipsService = chipsService;\n  }\n  ngOnInit() {\n    this.chipsService.query().subscribe(cs => {\n      this.allChips = cs.body;\n      cs.body.forEach(c => {\n        this.totalPoints += c.points;\n      });\n      this.totalCoins = this.allChips.length;\n    });\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body;\n      this.generalService.findChipsCollectionByUserId(this.user.id).subscribe(col => {\n        this.generalService.findAllChipsCollectionChipsByChipsCollectionId(col.body.id).subscribe(ccc => {\n          ccc.body.forEach(element => {\n            this.foundedChips.push(element.chips);\n          });\n        });\n      });\n    });\n  }\n  getRandomColor() {\n    const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n    return c;\n  }\n}\n_defineProperty(ChipsOverviewComponent, \"\\u0275fac\", function ChipsOverviewComponent_Factory(t) {\n  return new (t || ChipsOverviewComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.PointService), i0.ɵɵdirectiveInject(i3.ChipsService));\n});\n_defineProperty(ChipsOverviewComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChipsOverviewComponent,\n  selectors: [[\"jhi-chips-overview\"]],\n  decls: 37,\n  vars: 4,\n  consts: [[\"jhiTranslate\", \"chips-overview.overview-chips\"], [\"src\", \"https://docs.google.com/drawings/d/e/2PACX-1vT1cTBX39xbDdsOr7EObYwCN5rEXC6g5PP1IPQYSoGzDE9utDLwnNIi4WliwO75YcV52wJVf57NKmLF/pub?w=960&h=540\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"font-weight\"], [\"jhiTranslate\", \"chips-overview.how-many-points\", 1, \"point-font\", \"point-chips\"], [\"jhiTranslate\", \"chips-overview.points\", 1, \"point-font\"], [\"jhiTranslate\", \"chips-overview.how-many-coins\", 1, \"point-font\", \"point-chips\"], [\"jhiTranslate\", \"chips-overview.coins\", 1, \"point-font\"], [\"jhiTranslate\", \"chips-overview.founded-chips\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"clear\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"jhiTranslate\", \"chips-overview.all-chips-found\", 1, \"point-font\"], [1, \"point-card\", 3, \"header\"], [1, \"point-container\", \"container_chip\"], [1, \"chip_img\", 3, \"src\"], [1, \"centered\"]],\n  template: function ChipsOverviewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Overview for the \\\"Find the chip\\\"-Game\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2, \"\\n\\n\");\n      i0.ɵɵelement(3, \"img\", 1);\n      i0.ɵɵtext(4, \"\\n\\n\");\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8, \"\\n        \");\n      i0.ɵɵelementStart(9, \"span\", 3)(10, \"span\", 4);\n      i0.ɵɵtext(11, \"In this round you could find maximum points:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12);\n      i0.ɵɵelement(13, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n    \");\n      i0.ɵɵelementStart(16, \"p\");\n      i0.ɵɵtext(17, \"\\n        \");\n      i0.ɵɵelementStart(18, \"span\", 3)(19, \"span\", 6);\n      i0.ɵɵtext(20, \"In this round you must find:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21);\n      i0.ɵɵelement(22, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n\");\n      i0.ɵɵelement(26, \"hr\");\n      i0.ɵɵtext(27, \"\\n\\n\");\n      i0.ɵɵelementStart(28, \"h2\", 8);\n      i0.ɵɵtext(29, \"Founded chips\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n\\n\");\n      i0.ɵɵtemplate(31, ChipsOverviewComponent_ng_container_31_Template, 12, 0, \"ng-container\", 9);\n      i0.ɵɵtext(32, \"\\n\\n\");\n      i0.ɵɵtemplate(33, ChipsOverviewComponent_ng_container_33_Template, 16, 5, \"ng-container\", 10);\n      i0.ɵɵtext(34, \"\\n\");\n      i0.ɵɵelement(35, \"div\", 11);\n      i0.ɵɵtext(36, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate1(\" \", ctx.totalPoints, \" \");\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\" \", ctx.totalCoins, \" \");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.allChips.length === ctx.foundedChips.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.foundedChips);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.TranslateDirective, i6.Card],\n  styles: [\".point-card[_ngcontent-%COMP%] {\\n  float: left;\\n  width: 300px;\\n  margin: 20px 20px;\\n  box-shadow: 5px 5px 15px 5px #FF8080, -9px 5px 15px 5px #FFE488, -7px -5px 15px 5px #8CFF85, 12px -5px 15px 5px #80C7FF, 12px 10px 15px 7px #E488FF, -10px 10px 15px 7px #FF616B, -10px -7px 27px 1px #8E5CFF, 5px 5px 15px 5px rgba(0, 0, 0, 0);\\n}\\n\\n.p-card[_ngcontent-%COMP%]   .p-card-body[_ngcontent-%COMP%] {\\n  \\n  background: rgb(210, 255, 82) !important;   \\n  background: linear-gradient(to bottom, rgb(210, 255, 82) 0%, rgb(145, 232, 66) 100%) !important; \\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\\\"#d2ff52\\\", endColorstr=\\\"#91e842\\\",GradientType=0 ) !important; \\n}\\n\\n.point-container[_ngcontent-%COMP%] {\\n  margin: auto;\\n}\\n\\n.point-font[_ngcontent-%COMP%] {\\n  font-family: \\\"Paytone One\\\", sans-serif;\\n}\\n\\n.centered[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  font-size: xx-large;\\n  font-weight: bolder;\\n}\\n\\n.container_chip[_ngcontent-%COMP%] {\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.font-weight[_ngcontent-%COMP%] {\\n  font-size: xx-large;\\n}\\n\\n.clear[_ngcontent-%COMP%] {\\n  clear: both;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvdmlld3MvZ2FtZXMvZmluZC10aGUtY2hpcHMvY2hpcHMtb3ZlcnZpZXcvY2hpcHMtb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBRUEsZ1BBQUE7QUFDRjs7QUFFQTtFQUNFLHNIQUFBO0VBQ0Esd0NBQUEsRUFBQSxpQkFBQSxFQUNBLGFBQUEsRUFDQSw0QkFBQTtFQUNBLCtGQUFBLEVBQUEscURBQUE7RUFDQSw4SEFBQSxFQUFBLFVBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLHNDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsZ0NBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLnBvaW50LWNhcmQge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW46IDIwcHggMjBweDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiA1cHggNXB4IDE1cHggNXB4ICNGRjgwODAsIC05cHggNXB4IDE1cHggNXB4ICNGRkU0ODgsIC03cHggLTVweCAxNXB4IDVweCAjOENGRjg1LCAxMnB4IC01cHggMTVweCA1cHggIzgwQzdGRiwgMTJweCAxMHB4IDE1cHggN3B4ICNFNDg4RkYsIC0xMHB4IDEwcHggMTVweCA3cHggI0ZGNjE2QiwgLTEwcHggLTdweCAyN3B4IDFweCAjOEU1Q0ZGLCA1cHggNXB4IDE1cHggNXB4IHJnYmEoMCwwLDAsMCk7XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMTVweCA1cHggI0ZGODA4MCwgLTlweCA1cHggMTVweCA1cHggI0ZGRTQ4OCwgLTdweCAtNXB4IDE1cHggNXB4ICM4Q0ZGODUsIDEycHggLTVweCAxNXB4IDVweCAjODBDN0ZGLCAxMnB4IDEwcHggMTVweCA3cHggI0U0ODhGRiwgLTEwcHggMTBweCAxNXB4IDdweCAjRkY2MTZCLCAtMTBweCAtN3B4IDI3cHggMXB4ICM4RTVDRkYsIDVweCA1cHggMTVweCA1cHggcmdiYSgwLDAsMCwwKTtcbn1cblxuLnAtY2FyZCAucC1jYXJkLWJvZHkge1xuICAvKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cHM6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvI2QyZmY1MiswLDkxZTg0MisxMDA7TmVvbiAqL1xuICBiYWNrZ3JvdW5kOiByZ2IoMjEwLDI1NSw4MikgIWltcG9ydGFudDsgLyogT2xkIGJyb3dzZXJzICovXG4gIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIHJnYmEoMjEwLDI1NSw4MiwxKSAwJSwgcmdiYSgxNDUsMjMyLDY2LDEpIDEwMCUpICFpbXBvcnRhbnQ7ICAvKiBGRjMuNi0xNSAqL1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICByZ2JhKDIxMCwyNTUsODIsMSkgMCUscmdiYSgxNDUsMjMyLDY2LDEpIDEwMCUpICFpbXBvcnRhbnQ7IC8qIENocm9tZTEwLTI1LFNhZmFyaTUuMS02ICovXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICByZ2JhKDIxMCwyNTUsODIsMSkgMCUscmdiYSgxNDUsMjMyLDY2LDEpIDEwMCUpICFpbXBvcnRhbnQ7IC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqL1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nI2QyZmY1MicsIGVuZENvbG9yc3RyPScjOTFlODQyJyxHcmFkaWVudFR5cGU9MCApICFpbXBvcnRhbnQ7IC8qIElFNi05ICovXG59XG5cbi5wb2ludC1jb250YWluZXIge1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5wb2ludC1mb250IHtcbiAgZm9udC1mYW1pbHk6ICdQYXl0b25lIE9uZScsIHNhbnMtc2VyaWY7XG59XG5cbi5jZW50ZXJlZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi5jb250YWluZXJfY2hpcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9udC13ZWlnaHQge1xuICBmb250LXNpemU6IHh4LWxhcmdlO1xufVxuXG4uY2xlYXIge1xuICBjbGVhcjogYm90aDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n}));","map":{"version":3,"mappings":"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","names":["i0","ChipsOverviewComponent","constructor","generalService","pointService","chipsService","ngOnInit","query","subscribe","cs","allChips","body","forEach","c","totalPoints","points","totalCoins","length","findWidthAuthorities","u","user","findChipsCollectionByUserId","id","col","findAllChipsCollectionChipsByChipsCollectionId","ccc","element","foundedChips","push","chips","getRandomColor","Math","random","toString","substr","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/find-the-chips/chips-overview/chips-overview.component.html","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/find-the-chips/chips-overview/chips-overview.component.ts"],"sourcesContent":["<h1 jhiTranslate=\"chips-overview.overview-chips\">Overview for the \"Find the chip\"-Game</h1>\n\n<img src=\"https://docs.google.com/drawings/d/e/2PACX-1vT1cTBX39xbDdsOr7EObYwCN5rEXC6g5PP1IPQYSoGzDE9utDLwnNIi4WliwO75YcV52wJVf57NKmLF/pub?w=960&amp;h=540\">\n\n<div class=\"alert alert-info\" role=\"alert\">\n    <p>\n        <span class=\"font-weight\"><span class=\"point-font point-chips\" jhiTranslate=\"chips-overview.how-many-points\">In this round you could find maximum points:</span> {{ totalPoints }} <span class=\"point-font\" jhiTranslate=\"chips-overview.points\"></span></span>\n    </p>\n    <p>\n        <span class=\"font-weight\"><span class=\"point-font point-chips\" jhiTranslate=\"chips-overview.how-many-coins\">In this round you must find:</span> {{ totalCoins}} <span class=\"point-font\" jhiTranslate=\"chips-overview.coins\"></span></span>\n    </p>\n</div>\n<hr/>\n\n<h2 jhiTranslate=\"chips-overview.founded-chips\">Founded chips</h2>\n\n<ng-container *ngIf=\"allChips.length === foundedChips.length\">\n  <hr/>\n    <div class=\"alert alert-success\" role=\"alert\">\n        <span class=\"point-font\" jhiTranslate=\"chips-overview.all-chips-found\">Congratulations. All chips founded.</span>\n     </div>\n  <hr/>\n</ng-container>\n\n<ng-container *ngFor=\"let chips of foundedChips\">\n <div>\n    <p-card header=\"{{ chips.website }}\" class=\"point-card\">\n        <div class=\"point-container container_chip\">\n            <img class=\"chip_img\" [src]=\"'data:' + chips.imageContentType + ';base64,' + chips.image\" />\n            <div [style]=\"'color: ' + chips.color + ';'\" class=\"centered\">{{ chips.points }}</div>\n        </div>\n    </p-card>\n </div>\n</ng-container>\n<div class=\"clear\"></div>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { IChips } from \"app/entities/chips/chips.model\";\nimport { ChipsService } from \"app/entities/chips/service/chips.service\";\nimport { PointService } from \"app/entities/point/service/point.service\";\nimport { IUser } from \"app/entities/user/user.model\";\nimport { GeneralService } from \"app/general.service\";\n\n@Component({\n  selector: 'jhi-chips-overview',\n  templateUrl: './chips-overview.component.html',\n  styleUrls: ['./chips-overview.component.scss']\n})\nexport class ChipsOverviewComponent implements OnInit {\n\n\n  user: IUser;\n  foundedChips: IChips[] = [];\n  allChips: IChips[] = [];\n  totalPoints = 0;\n  totalCoins = 0;\n\n  constructor(private generalService: GeneralService, private pointService: PointService, private chipsService: ChipsService) { }\n\n  ngOnInit(): void {\n    this.chipsService.query().subscribe(cs => {\n      this.allChips = cs.body;\n      cs.body.forEach(c => {\n        this.totalPoints += c.points;\n      });\n      this.totalCoins = this.allChips.length;\n    });\n    this.generalService.findWidthAuthorities().subscribe(u => {\n      this.user = u.body;\n      this.generalService.findChipsCollectionByUserId(this.user.id).subscribe(col => {\n        this.generalService.findAllChipsCollectionChipsByChipsCollectionId(col.body.id).subscribe(ccc => {\n          ccc.body.forEach(element => {\n            this.foundedChips.push(element.chips);\n          });\n        });\n      });\n    });\n  }\n\n  getRandomColor(): string {\n    const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n    return c;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}