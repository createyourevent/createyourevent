{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getCouponIdentifier } from '../coupon.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class CouponService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/coupons');\n  }\n  create(coupon) {\n    return this.http.post(this.resourceUrl, coupon, {\n      observe: 'response'\n    });\n  }\n  update(coupon) {\n    return this.http.put(`${this.resourceUrl}/${getCouponIdentifier(coupon)}`, coupon, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(coupon) {\n    return this.http.patch(`${this.resourceUrl}/${getCouponIdentifier(coupon)}`, coupon, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addCouponToCollectionIfMissing(couponCollection, ...couponsToCheck) {\n    const coupons = couponsToCheck.filter(isPresent);\n    if (coupons.length > 0) {\n      const couponCollectionIdentifiers = couponCollection.map(couponItem => getCouponIdentifier(couponItem));\n      const couponsToAdd = coupons.filter(couponItem => {\n        const couponIdentifier = getCouponIdentifier(couponItem);\n        if (couponIdentifier == null || couponCollectionIdentifiers.includes(couponIdentifier)) {\n          return false;\n        }\n        couponCollectionIdentifiers.push(couponIdentifier);\n        return true;\n      });\n      return [...couponsToAdd, ...couponCollection];\n    }\n    return couponCollection;\n  }\n}\nCouponService.ɵfac = function CouponService_Factory(t) {\n  return new (t || CouponService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nCouponService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CouponService,\n  factory: CouponService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAkBC,mBAAmB,QAAQ,iBAAiB;;;;AAM9D,OAAM,MAAOC,aAAa;EAGxBC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAA9E,SAAI,GAAJD,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;IAFhE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,aAAa,CAAC;EAEoB;EAEvGC,MAAM,CAACC,MAAe;IACpB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAU,IAAI,CAACC,WAAW,EAAEF,MAAM,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACnF;EAEAC,MAAM,CAACJ,MAAe;IACpB,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACH,WAAW,IAAIT,mBAAmB,CAACO,MAAM,CAAW,EAAE,EAAEA,MAAM,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAChI;EAEAG,aAAa,CAACN,MAAe;IAC3B,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAAU,GAAG,IAAI,CAACL,WAAW,IAAIT,mBAAmB,CAACO,MAAM,CAAW,EAAE,EAAEA,MAAM,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAClI;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAU,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EACrF;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAY,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EAC7F;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,8BAA8B,CAACC,gBAA2B,EAAE,GAAGC,cAA8C;IAC3G,MAAMC,OAAO,GAAcD,cAAc,CAACE,MAAM,CAAC7B,SAAS,CAAC;IAC3D,IAAI4B,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACtB,MAAMC,2BAA2B,GAAGL,gBAAgB,CAACM,GAAG,CAACC,UAAU,IAAI/B,mBAAmB,CAAC+B,UAAU,CAAE,CAAC;MACxG,MAAMC,YAAY,GAAGN,OAAO,CAACC,MAAM,CAACI,UAAU,IAAG;QAC/C,MAAME,gBAAgB,GAAGjC,mBAAmB,CAAC+B,UAAU,CAAC;QACxD,IAAIE,gBAAgB,IAAI,IAAI,IAAIJ,2BAA2B,CAACK,QAAQ,CAACD,gBAAgB,CAAC,EAAE;UACtF,OAAO,KAAK;;QAEdJ,2BAA2B,CAACM,IAAI,CAACF,gBAAgB,CAAC;QAClD,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,YAAY,EAAE,GAAGR,gBAAgB,CAAC;;IAE/C,OAAOA,gBAAgB;EACzB;;;mBA7CWvB,aAAa;AAAA;;SAAbA,aAAa;EAAAmC,SAAbnC,aAAa;EAAAoC,YADA;AAAM","names":["isPresent","createRequestOption","getCouponIdentifier","CouponService","constructor","http","applicationConfigService","getEndpointFor","create","coupon","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addCouponToCollectionIfMissing","couponCollection","couponsToCheck","coupons","filter","length","couponCollectionIdentifiers","map","couponItem","couponsToAdd","couponIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/coupon/service/coupon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ICoupon, getCouponIdentifier } from '../coupon.model';\n\nexport type EntityResponseType = HttpResponse<ICoupon>;\nexport type EntityArrayResponseType = HttpResponse<ICoupon[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class CouponService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/coupons');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(coupon: ICoupon): Observable<EntityResponseType> {\n    return this.http.post<ICoupon>(this.resourceUrl, coupon, { observe: 'response' });\n  }\n\n  update(coupon: ICoupon): Observable<EntityResponseType> {\n    return this.http.put<ICoupon>(`${this.resourceUrl}/${getCouponIdentifier(coupon) as number}`, coupon, { observe: 'response' });\n  }\n\n  partialUpdate(coupon: ICoupon): Observable<EntityResponseType> {\n    return this.http.patch<ICoupon>(`${this.resourceUrl}/${getCouponIdentifier(coupon) as number}`, coupon, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ICoupon>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ICoupon[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addCouponToCollectionIfMissing(couponCollection: ICoupon[], ...couponsToCheck: (ICoupon | null | undefined)[]): ICoupon[] {\n    const coupons: ICoupon[] = couponsToCheck.filter(isPresent);\n    if (coupons.length > 0) {\n      const couponCollectionIdentifiers = couponCollection.map(couponItem => getCouponIdentifier(couponItem)!);\n      const couponsToAdd = coupons.filter(couponItem => {\n        const couponIdentifier = getCouponIdentifier(couponItem);\n        if (couponIdentifier == null || couponCollectionIdentifiers.includes(couponIdentifier)) {\n          return false;\n        }\n        couponCollectionIdentifiers.push(couponIdentifier);\n        return true;\n      });\n      return [...couponsToAdd, ...couponCollection];\n    }\n    return couponCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}