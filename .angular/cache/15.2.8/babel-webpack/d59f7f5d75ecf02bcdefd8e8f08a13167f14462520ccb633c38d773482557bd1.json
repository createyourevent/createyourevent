{"ast":null,"code":"import { SERVER_API_URL } from \"app/app.constants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EventService = /*#__PURE__*/(() => {\n  class EventService {\n    constructor(http) {\n      this.http = http;\n      this.resourceUrl = SERVER_API_URL + 'api/users';\n      this.resourceUrlEventrating = SERVER_API_URL + 'api/eventratings';\n      this.resourceUrlEvent = SERVER_API_URL + 'api/events';\n      this.resourceUrlEventProductRating = SERVER_API_URL + 'api/event-product-ratings';\n      this.resourceUrlWishlistEntry = SERVER_API_URL + 'api/wishlist-entries';\n      this.resourceUrlEventProductOrder = SERVER_API_URL + 'api/event-product-orders';\n      this.resourceUrlLocation = SERVER_API_URL + 'api/locations';\n      this.resourceUrlAddress = SERVER_API_URL + 'api/addresses';\n      this.resourceUrlEventProductRatingComment = SERVER_API_URL + 'api/event-product-rating-comments';\n    }\n    findWidthAuthorities() {\n      return this.http.get(`${this.resourceUrl}/all`, {\n        observe: 'response'\n      });\n    }\n    findEvent(id) {\n      return this.http.get(`${this.resourceUrlEvent}/${id}`, {\n        observe: 'response'\n      });\n    }\n    findEventProductRatingByEventAndProductAndUser(eventId, productId, userId) {\n      return this.http.get(`${this.resourceUrlEventProductRating}/${eventId}/${productId}/${userId}`, {\n        observe: 'response'\n      });\n    }\n    findEventProductRatingByEventAndProduct(eventId, productId) {\n      return this.http.get(`${this.resourceUrlEventProductRating}/${eventId}/${productId}`, {\n        observe: 'response'\n      });\n    }\n    getProductsWithEventId(eventId) {\n      return this.http.get(`${this.resourceUrlEventProductOrder}/${eventId}/getProductsByEvent`, {\n        observe: 'response'\n      });\n    }\n    getEventProductOrderByProductAndUser(productId, userId) {\n      return this.http.get(`${this.resourceUrlEventProductOrder}/${productId}/${userId}/getByProductAndUser`, {\n        observe: 'response'\n      });\n    }\n    findLocationByEventId(eventId) {\n      return this.http.get(`${this.resourceUrlLocation}/${eventId}/findByEventId`, {\n        observe: 'response'\n      });\n    }\n    findAddressByLocationId(addressId) {\n      return this.http.get(`${this.resourceUrlAddress}/${addressId}/findByLocationId`, {\n        observe: 'response'\n      });\n    }\n    findEventProductRatingCommentByEventAndProduct(eventId, productId) {\n      return this.http.get(`${this.resourceUrlEventProductRatingComment}/${eventId}/${productId}`, {\n        observe: 'response'\n      });\n    }\n  }\n  EventService.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}