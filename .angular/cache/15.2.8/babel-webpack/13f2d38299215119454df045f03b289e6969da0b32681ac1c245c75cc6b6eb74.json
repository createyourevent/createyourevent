{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { translationNotFoundMessage } from 'app/config/translation.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\n/**\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\n */\nexport let TranslateDirective = /*#__PURE__*/(() => {\n  class TranslateDirective {\n    constructor(el, translateService) {\n      this.el = el;\n      this.translateService = translateService;\n      this.directiveDestroyed = new Subject();\n    }\n    ngOnInit() {\n      this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(() => {\n        this.getTranslation();\n      });\n    }\n    ngOnChanges() {\n      this.getTranslation();\n    }\n    ngOnDestroy() {\n      this.directiveDestroyed.next();\n      this.directiveDestroyed.complete();\n    }\n    getTranslation() {\n      this.translateService.get(this.jhiTranslate, this.translateValues).pipe(takeUntil(this.directiveDestroyed)).subscribe(value => {\n        this.el.nativeElement.innerHTML = value;\n      }, () => `${translationNotFoundMessage}[${this.jhiTranslate}]`);\n    }\n  }\n  TranslateDirective.ɵfac = function TranslateDirective_Factory(t) {\n    return new (t || TranslateDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TranslateService));\n  };\n  TranslateDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TranslateDirective,\n    selectors: [[\"\", \"jhiTranslate\", \"\"]],\n    inputs: {\n      jhiTranslate: \"jhiTranslate\",\n      translateValues: \"translateValues\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return TranslateDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}