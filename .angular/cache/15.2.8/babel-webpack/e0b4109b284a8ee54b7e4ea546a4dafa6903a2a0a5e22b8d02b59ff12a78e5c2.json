{"ast":null,"code":"import { createRequestOption } from 'app/core/request/request-util';\nimport { isPresent } from 'app/core/util/operators';\nimport { getUserIdentifier } from './user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/users');\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    addUserToCollectionIfMissing(userCollection, ...usersToCheck) {\n      const users = usersToCheck.filter(isPresent);\n      if (users.length > 0) {\n        const userCollectionIdentifiers = userCollection.map(userItem => getUserIdentifier(userItem));\n        const usersToAdd = users.filter(userItem => {\n          const userIdentifier = getUserIdentifier(userItem);\n          if (userIdentifier == null || userCollectionIdentifiers.includes(userIdentifier)) {\n            return false;\n          }\n          userCollectionIdentifiers.push(userIdentifier);\n          return true;\n        });\n        return [...usersToAdd, ...userCollection];\n      }\n      return userCollection;\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}