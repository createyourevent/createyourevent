{"ast":null,"code":"import { of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { SlotListOrange } from '../slot-list-orange.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/slot-list-orange.service\";\nimport * as i2 from \"@angular/router\";\nexport let SlotListOrangeRoutingResolveService = /*#__PURE__*/(() => {\n  class SlotListOrangeRoutingResolveService {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['id'];\n      if (id) {\n        return this.service.find(id).pipe(mergeMap(slotListOrange => {\n          if (slotListOrange.body) {\n            return of(slotListOrange.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new SlotListOrange());\n    }\n  }\n  SlotListOrangeRoutingResolveService.ɵfac = function SlotListOrangeRoutingResolveService_Factory(t) {\n    return new (t || SlotListOrangeRoutingResolveService)(i0.ɵɵinject(i1.SlotListOrangeService), i0.ɵɵinject(i2.Router));\n  };\n  SlotListOrangeRoutingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SlotListOrangeRoutingResolveService,\n    factory: SlotListOrangeRoutingResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return SlotListOrangeRoutingResolveService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}