{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getSlotListClockIdentifier } from '../slot-list-clock.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class SlotListClockService {\n  constructor(http, applicationConfigService) {\n    _defineProperty(this, \"http\", void 0);\n    _defineProperty(this, \"applicationConfigService\", void 0);\n    _defineProperty(this, \"resourceUrl\", this.applicationConfigService.getEndpointFor('api/slot-list-clocks'));\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  create(slotListClock) {\n    return this.http.post(this.resourceUrl, slotListClock, {\n      observe: 'response'\n    });\n  }\n  update(slotListClock) {\n    return this.http.put(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock)}`, slotListClock, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(slotListClock) {\n    return this.http.patch(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock)}`, slotListClock, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addSlotListClockToCollectionIfMissing(slotListClockCollection, ...slotListClocksToCheck) {\n    const slotListClocks = slotListClocksToCheck.filter(isPresent);\n    if (slotListClocks.length > 0) {\n      const slotListClockCollectionIdentifiers = slotListClockCollection.map(slotListClockItem => getSlotListClockIdentifier(slotListClockItem));\n      const slotListClocksToAdd = slotListClocks.filter(slotListClockItem => {\n        const slotListClockIdentifier = getSlotListClockIdentifier(slotListClockItem);\n        if (slotListClockIdentifier == null || slotListClockCollectionIdentifiers.includes(slotListClockIdentifier)) {\n          return false;\n        }\n        slotListClockCollectionIdentifiers.push(slotListClockIdentifier);\n        return true;\n      });\n      return [...slotListClocksToAdd, ...slotListClockCollection];\n    }\n    return slotListClockCollection;\n  }\n}\n_defineProperty(SlotListClockService, \"\\u0275fac\", function SlotListClockService_Factory(t) {\n  return new (t || SlotListClockService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n});\n_defineProperty(SlotListClockService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SlotListClockService,\n  factory: SlotListClockService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAyBC,0BAA0B,QAAQ,0BAA0B;;;;AAMrF,OAAM,MAAOC,oBAAoB;EAG/BC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAAA;IAAA;IAAA,qCAF5E,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,sBAAsB,CAAC;IAEtE,SAAI,GAAJF,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEvGE,MAAM,CAACC,aAA6B;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAiB,IAAI,CAACC,WAAW,EAAEF,aAAa,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACjG;EAEAC,MAAM,CAACJ,aAA6B;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAiB,GAAG,IAAI,CAACH,WAAW,IAAIT,0BAA0B,CAACO,aAAa,CAAW,EAAE,EAAEA,aAAa,EAAE;MAChIG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAG,aAAa,CAACN,aAA6B;IACzC,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAAiB,GAAG,IAAI,CAACL,WAAW,IAAIT,0BAA0B,CAACO,aAAa,CAAW,EAAE,EAAEA,aAAa,EAAE;MAClIG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAiB,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC5F;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAmB,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EACpG;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,qCAAqC,CACnCC,uBAAyC,EACzC,GAAGC,qBAA4D;IAE/D,MAAMC,cAAc,GAAqBD,qBAAqB,CAACE,MAAM,CAAC7B,SAAS,CAAC;IAChF,IAAI4B,cAAc,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,kCAAkC,GAAGL,uBAAuB,CAACM,GAAG,CACpEC,iBAAiB,IAAI/B,0BAA0B,CAAC+B,iBAAiB,CAAE,CACpE;MACD,MAAMC,mBAAmB,GAAGN,cAAc,CAACC,MAAM,CAACI,iBAAiB,IAAG;QACpE,MAAME,uBAAuB,GAAGjC,0BAA0B,CAAC+B,iBAAiB,CAAC;QAC7E,IAAIE,uBAAuB,IAAI,IAAI,IAAIJ,kCAAkC,CAACK,QAAQ,CAACD,uBAAuB,CAAC,EAAE;UAC3G,OAAO,KAAK;;QAEdJ,kCAAkC,CAACM,IAAI,CAACF,uBAAuB,CAAC;QAChE,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,mBAAmB,EAAE,GAAGR,uBAAuB,CAAC;;IAE7D,OAAOA,uBAAuB;EAChC;;gBAtDWvB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAAA,gBAApBA,oBAAoB;SAApBA,oBAAoB;EAAAmC,SAApBnC,oBAAoB;EAAAoC,YADP;AAAM","names":["isPresent","createRequestOption","getSlotListClockIdentifier","SlotListClockService","constructor","http","applicationConfigService","getEndpointFor","create","slotListClock","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addSlotListClockToCollectionIfMissing","slotListClockCollection","slotListClocksToCheck","slotListClocks","filter","length","slotListClockCollectionIdentifiers","map","slotListClockItem","slotListClocksToAdd","slotListClockIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/slot-list-clock/service/slot-list-clock.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ISlotListClock, getSlotListClockIdentifier } from '../slot-list-clock.model';\n\nexport type EntityResponseType = HttpResponse<ISlotListClock>;\nexport type EntityArrayResponseType = HttpResponse<ISlotListClock[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class SlotListClockService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/slot-list-clocks');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(slotListClock: ISlotListClock): Observable<EntityResponseType> {\n    return this.http.post<ISlotListClock>(this.resourceUrl, slotListClock, { observe: 'response' });\n  }\n\n  update(slotListClock: ISlotListClock): Observable<EntityResponseType> {\n    return this.http.put<ISlotListClock>(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock) as number}`, slotListClock, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(slotListClock: ISlotListClock): Observable<EntityResponseType> {\n    return this.http.patch<ISlotListClock>(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock) as number}`, slotListClock, {\n      observe: 'response',\n    });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ISlotListClock>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ISlotListClock[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addSlotListClockToCollectionIfMissing(\n    slotListClockCollection: ISlotListClock[],\n    ...slotListClocksToCheck: (ISlotListClock | null | undefined)[]\n  ): ISlotListClock[] {\n    const slotListClocks: ISlotListClock[] = slotListClocksToCheck.filter(isPresent);\n    if (slotListClocks.length > 0) {\n      const slotListClockCollectionIdentifiers = slotListClockCollection.map(\n        slotListClockItem => getSlotListClockIdentifier(slotListClockItem)!\n      );\n      const slotListClocksToAdd = slotListClocks.filter(slotListClockItem => {\n        const slotListClockIdentifier = getSlotListClockIdentifier(slotListClockItem);\n        if (slotListClockIdentifier == null || slotListClockCollectionIdentifiers.includes(slotListClockIdentifier)) {\n          return false;\n        }\n        slotListClockCollectionIdentifiers.push(slotListClockIdentifier);\n        return true;\n      });\n      return [...slotListClocksToAdd, ...slotListClockCollection];\n    }\n    return slotListClockCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}