{"ast":null,"code":"import { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChipsService {\n  constructor(http) {\n    this.http = http;\n    this.resourceUrl = SERVER_API_URL + 'api/chips';\n  }\n  create(chips) {\n    return this.http.post(this.resourceUrl, chips, {\n      observe: 'response'\n    });\n  }\n  update(chips) {\n    return this.http.put(this.resourceUrl, chips, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n}\nChipsService.ɵfac = function ChipsService_Factory(t) {\n  return new (t || ChipsService)(i0.ɵɵinject(i1.HttpClient));\n};\nChipsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChipsService,\n  factory: ChipsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAASC,mBAAmB,QAAQ,+BAA+B;;;AAQnE,OAAM,MAAOC,YAAY;EAGvBC,YAAsBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFnB,gBAAW,GAAGJ,cAAc,GAAG,WAAW;EAER;EAEzCK,MAAM,CAACC,KAAa;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAS,IAAI,CAACC,WAAW,EAAEF,KAAK,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACjF;EAEAC,MAAM,CAACJ,KAAa;IAClB,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAS,IAAI,CAACH,WAAW,EAAEF,KAAK,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAChF;EAEAG,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACN,WAAW,IAAIK,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAE;IAAU,CAAE,CAAC;EACpF;EAEAM,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGhB,mBAAmB,CAACe,GAAG,CAAC;IACxC,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAW,IAAI,CAACN,WAAW,EAAE;MAAEU,MAAM,EAAED,OAAO;MAAER,OAAO,EAAE;IAAU,CAAE,CAAC;EAC5F;EAEAU,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACX,WAAW,IAAIK,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;;;mBAxBWP,YAAY;AAAA;;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YADC;AAAM","names":["SERVER_API_URL","createRequestOption","ChipsService","constructor","http","create","chips","post","resourceUrl","observe","update","put","find","id","get","query","req","options","params","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/find-the-chips/admin-chips/chips.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IChips } from 'app/entities/chips/chips.model';\n\n\ntype EntityResponseType = HttpResponse<IChips>;\ntype EntityArrayResponseType = HttpResponse<IChips[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class ChipsService {\n  public resourceUrl = SERVER_API_URL + 'api/chips';\n\n  constructor(protected http: HttpClient) {}\n\n  create(chips: IChips): Observable<EntityResponseType> {\n    return this.http.post<IChips>(this.resourceUrl, chips, { observe: 'response' });\n  }\n\n  update(chips: IChips): Observable<EntityResponseType> {\n    return this.http.put<IChips>(this.resourceUrl, chips, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IChips>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IChips[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}