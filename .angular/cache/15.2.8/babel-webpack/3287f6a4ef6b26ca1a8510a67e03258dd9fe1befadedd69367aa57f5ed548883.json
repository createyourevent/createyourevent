{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize, map } from 'rxjs/operators';\nimport { ServiceMap } from '../service-map.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/service-map.service\";\nimport * as i2 from \"app/entities/ride-costs/service/ride-costs.service\";\nimport * as i3 from \"app/entities/create-your-event-service/service/create-your-event-service.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../../shared/language/translate.directive\";\nimport * as i9 from \"../../../shared/alert/alert-error.component\";\nfunction ServiceMapUpdateComponent_div_28_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 24);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ServiceMapUpdateComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ServiceMapUpdateComponent_div_28_small_2_Template, 2, 0, \"small\", 23);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.editForm.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ServiceMapUpdateComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rideCostsOption_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", rideCostsOption_r4.id === (ctx_r1.editForm.get(\"rideCost\").value == null ? null : ctx_r1.editForm.get(\"rideCost\").value.id) ? ctx_r1.editForm.get(\"rideCost\").value : rideCostsOption_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", rideCostsOption_r4.id, \"\\n            \");\n  }\n}\nfunction ServiceMapUpdateComponent_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const createYourEventServiceOption_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", createYourEventServiceOption_r5.id === (ctx_r2.editForm.get(\"createYourEventService\").value == null ? null : ctx_r2.editForm.get(\"createYourEventService\").value.id) ? ctx_r2.editForm.get(\"createYourEventService\").value : createYourEventServiceOption_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", createYourEventServiceOption_r5.id, \"\\n            \");\n  }\n}\nexport class ServiceMapUpdateComponent {\n  constructor(serviceMapService, rideCostsService, createYourEventServiceService, activatedRoute, fb) {\n    this.serviceMapService = serviceMapService;\n    this.rideCostsService = rideCostsService;\n    this.createYourEventServiceService = createYourEventServiceService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.isSaving = false;\n    this.rideCostsCollection = [];\n    this.createYourEventServicesSharedCollection = [];\n    this.editForm = this.fb.group({\n      id: [],\n      title: [null, [Validators.required]],\n      rideCost: [],\n      createYourEventService: []\n    });\n  }\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({\n      serviceMap\n    }) => {\n      this.updateForm(serviceMap);\n      this.loadRelationshipsOptions();\n    });\n  }\n  previousState() {\n    window.history.back();\n  }\n  save() {\n    this.isSaving = true;\n    const serviceMap = this.createFromForm();\n    if (serviceMap.id !== undefined) {\n      this.subscribeToSaveResponse(this.serviceMapService.update(serviceMap));\n    } else {\n      this.subscribeToSaveResponse(this.serviceMapService.create(serviceMap));\n    }\n  }\n  trackRideCostsById(index, item) {\n    return item.id;\n  }\n  trackCreateYourEventServiceById(index, item) {\n    return item.id;\n  }\n  subscribeToSaveResponse(result) {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n  }\n  onSaveSuccess() {\n    this.previousState();\n  }\n  onSaveError() {\n    // Api for inheritance.\n  }\n  onSaveFinalize() {\n    this.isSaving = false;\n  }\n  updateForm(serviceMap) {\n    this.editForm.patchValue({\n      id: serviceMap.id,\n      title: serviceMap.title,\n      rideCost: serviceMap.rideCost,\n      createYourEventService: serviceMap.createYourEventService\n    });\n    this.rideCostsCollection = this.rideCostsService.addRideCostsToCollectionIfMissing(this.rideCostsCollection, serviceMap.rideCost);\n    this.createYourEventServicesSharedCollection = this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(this.createYourEventServicesSharedCollection, serviceMap.createYourEventService);\n  }\n  loadRelationshipsOptions() {\n    this.rideCostsService.query({\n      filter: 'servicemap-is-null'\n    }).pipe(map(res => res.body ?? [])).pipe(map(rideCosts => this.rideCostsService.addRideCostsToCollectionIfMissing(rideCosts, this.editForm.get('rideCost').value))).subscribe(rideCosts => this.rideCostsCollection = rideCosts);\n    this.createYourEventServiceService.query().pipe(map(res => res.body ?? [])).pipe(map(createYourEventServices => this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(createYourEventServices, this.editForm.get('createYourEventService').value))).subscribe(createYourEventServices => this.createYourEventServicesSharedCollection = createYourEventServices);\n  }\n  createFromForm() {\n    return {\n      ...new ServiceMap(),\n      id: this.editForm.get(['id']).value,\n      title: this.editForm.get(['title']).value,\n      rideCost: this.editForm.get(['rideCost']).value,\n      createYourEventService: this.editForm.get(['createYourEventService']).value\n    };\n  }\n}\nServiceMapUpdateComponent.ɵfac = function ServiceMapUpdateComponent_Factory(t) {\n  return new (t || ServiceMapUpdateComponent)(i0.ɵɵdirectiveInject(i1.ServiceMapService), i0.ɵɵdirectiveInject(i2.RideCostsService), i0.ɵɵdirectiveInject(i3.CreateYourEventServiceService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder));\n};\nServiceMapUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServiceMapUpdateComponent,\n  selectors: [[\"jhi-service-map-update\"]],\n  decls: 80,\n  vars: 11,\n  consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-service-map-heading\", \"data-cy\", \"ServiceMapCreateUpdateHeading\", \"jhiTranslate\", \"createyoureventApp.serviceMap.home.createOrEditLabel\"], [1, \"form-group\", 3, \"hidden\"], [\"jhiTranslate\", \"global.field.id\", \"for\", \"field_id\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"id\", \"id\", \"field_id\", \"data-cy\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.title\", \"for\", \"field_title\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"field_title\", \"data-cy\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [4, \"ngIf\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.rideCost\", \"for\", \"field_rideCost\", 1, \"form-control-label\"], [\"id\", \"field_rideCost\", \"data-cy\", \"rideCost\", \"name\", \"rideCost\", \"formControlName\", \"rideCost\", 1, \"form-control\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"jhiTranslate\", \"createyoureventApp.serviceMap.createYourEventService\", \"for\", \"field_createYourEventService\", 1, \"form-control-label\"], [\"id\", \"field_createYourEventService\", \"data-cy\", \"createYourEventService\", \"name\", \"createYourEventService\", \"formControlName\", \"createYourEventService\", 1, \"form-control\"], [\"type\", \"button\", \"id\", \"cancel-save\", \"data-cy\", \"entityCreateCancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", \"data-cy\", \"entityCreateSaveButton\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"entity.validation.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"entity.validation.required\", 1, \"form-text\", \"text-danger\"]],\n  template: function ServiceMapUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ServiceMapUpdateComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"h2\", 3);\n      i0.ɵɵtext(7, \"\\n        Create or edit a Service Map\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n      \");\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelement(11, \"jhi-alert-error\");\n      i0.ɵɵtext(12, \"\\n\\n        \");\n      i0.ɵɵelementStart(13, \"div\", 4);\n      i0.ɵɵtext(14, \"\\n          \");\n      i0.ɵɵelementStart(15, \"label\", 5);\n      i0.ɵɵtext(16, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n          \");\n      i0.ɵɵelement(18, \"input\", 6);\n      i0.ɵɵtext(19, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n        \");\n      i0.ɵɵelementStart(21, \"div\", 7);\n      i0.ɵɵtext(22, \"\\n          \");\n      i0.ɵɵelementStart(23, \"label\", 8);\n      i0.ɵɵtext(24, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n          \");\n      i0.ɵɵelement(26, \"input\", 9);\n      i0.ɵɵtext(27, \"\\n          \");\n      i0.ɵɵtemplate(28, ServiceMapUpdateComponent_div_28_Template, 4, 1, \"div\", 10);\n      i0.ɵɵtext(29, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n\\n        \");\n      i0.ɵɵelementStart(31, \"div\", 7);\n      i0.ɵɵtext(32, \"\\n          \");\n      i0.ɵɵelementStart(33, \"label\", 11);\n      i0.ɵɵtext(34, \"Ride Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n          \");\n      i0.ɵɵelementStart(36, \"select\", 12);\n      i0.ɵɵtext(37, \"\\n            \");\n      i0.ɵɵelement(38, \"option\", 13);\n      i0.ɵɵtext(39, \"\\n            \");\n      i0.ɵɵtemplate(40, ServiceMapUpdateComponent_option_40_Template, 2, 2, \"option\", 14);\n      i0.ɵɵtext(41, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n\\n        \");\n      i0.ɵɵelementStart(44, \"div\", 7);\n      i0.ɵɵtext(45, \"\\n          \");\n      i0.ɵɵelementStart(46, \"label\", 15);\n      i0.ɵɵtext(47, \"Create Your Event Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \"\\n          \");\n      i0.ɵɵelementStart(49, \"select\", 16);\n      i0.ɵɵtext(50, \"\\n            \");\n      i0.ɵɵelement(51, \"option\", 13);\n      i0.ɵɵtext(52, \"\\n            \");\n      i0.ɵɵtemplate(53, ServiceMapUpdateComponent_option_53_Template, 2, 2, \"option\", 14);\n      i0.ɵɵtext(54, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n\\n      \");\n      i0.ɵɵelementStart(58, \"div\");\n      i0.ɵɵtext(59, \"\\n        \");\n      i0.ɵɵelementStart(60, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ServiceMapUpdateComponent_Template_button_click_60_listener() {\n        return ctx.previousState();\n      });\n      i0.ɵɵtext(61, \"\\n          \");\n      i0.ɵɵelement(62, \"fa-icon\", 18);\n      i0.ɵɵtext(63, \"\\u00A0\");\n      i0.ɵɵelementStart(64, \"span\", 19);\n      i0.ɵɵtext(65, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \"\\n\\n        \");\n      i0.ɵɵelementStart(68, \"button\", 20);\n      i0.ɵɵtext(69, \"\\n          \");\n      i0.ɵɵelement(70, \"fa-icon\", 21);\n      i0.ɵɵtext(71, \"\\u00A0\");\n      i0.ɵɵelementStart(72, \"span\", 22);\n      i0.ɵɵtext(73, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(74, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(75, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(76, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(77, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(78, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(79, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"hidden\", ctx.editForm.get(\"id\").value == null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"readonly\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"title\").invalid && (ctx.editForm.get(\"title\").dirty || ctx.editForm.get(\"title\").touched));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rideCostsCollection)(\"ngForTrackBy\", ctx.trackRideCostsById);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.createYourEventServicesSharedCollection)(\"ngForTrackBy\", ctx.trackCreateYourEventServiceById);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.NgForOf, i6.NgIf, i7.FaIconComponent, i5.FormGroupDirective, i5.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","finalize","map","ServiceMap","i0","ServiceMapUpdateComponent","constructor","serviceMapService","rideCostsService","createYourEventServiceService","activatedRoute","fb","group","id","title","required","rideCost","createYourEventService","ngOnInit","data","subscribe","serviceMap","updateForm","loadRelationshipsOptions","previousState","window","history","back","save","isSaving","createFromForm","undefined","subscribeToSaveResponse","update","create","trackRideCostsById","index","item","trackCreateYourEventServiceById","result","pipe","onSaveFinalize","onSaveSuccess","onSaveError","editForm","patchValue","rideCostsCollection","addRideCostsToCollectionIfMissing","createYourEventServicesSharedCollection","addCreateYourEventServiceToCollectionIfMissing","query","filter","res","body","rideCosts","get","value","createYourEventServices","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/service-map/update/service-map-update.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/service-map/update/service-map-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\n\nimport { IServiceMap, ServiceMap } from '../service-map.model';\nimport { ServiceMapService } from '../service/service-map.service';\nimport { IRideCosts } from 'app/entities/ride-costs/ride-costs.model';\nimport { RideCostsService } from 'app/entities/ride-costs/service/ride-costs.service';\nimport { ICreateYourEventService } from 'app/entities/create-your-event-service/create-your-event-service.model';\nimport { CreateYourEventServiceService } from 'app/entities/create-your-event-service/service/create-your-event-service.service';\n\n@Component({\n  selector: 'jhi-service-map-update',\n  templateUrl: './service-map-update.component.html',\n})\nexport class ServiceMapUpdateComponent implements OnInit {\n  isSaving = false;\n\n  rideCostsCollection: IRideCosts[] = [];\n  createYourEventServicesSharedCollection: ICreateYourEventService[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    title: [null, [Validators.required]],\n    rideCost: [],\n    createYourEventService: [],\n  });\n\n  constructor(\n    protected serviceMapService: ServiceMapService,\n    protected rideCostsService: RideCostsService,\n    protected createYourEventServiceService: CreateYourEventServiceService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: UntypedFormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ serviceMap }) => {\n      this.updateForm(serviceMap);\n\n      this.loadRelationshipsOptions();\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const serviceMap = this.createFromForm();\n    if (serviceMap.id !== undefined) {\n      this.subscribeToSaveResponse(this.serviceMapService.update(serviceMap));\n    } else {\n      this.subscribeToSaveResponse(this.serviceMapService.create(serviceMap));\n    }\n  }\n\n  trackRideCostsById(index: number, item: IRideCosts): number {\n    return item.id!;\n  }\n\n  trackCreateYourEventServiceById(index: number, item: ICreateYourEventService): number {\n    return item.id!;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IServiceMap>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(serviceMap: IServiceMap): void {\n    this.editForm.patchValue({\n      id: serviceMap.id,\n      title: serviceMap.title,\n      rideCost: serviceMap.rideCost,\n      createYourEventService: serviceMap.createYourEventService,\n    });\n\n    this.rideCostsCollection = this.rideCostsService.addRideCostsToCollectionIfMissing(this.rideCostsCollection, serviceMap.rideCost);\n    this.createYourEventServicesSharedCollection = this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(\n      this.createYourEventServicesSharedCollection,\n      serviceMap.createYourEventService\n    );\n  }\n\n  protected loadRelationshipsOptions(): void {\n    this.rideCostsService\n      .query({ filter: 'servicemap-is-null' })\n      .pipe(map((res: HttpResponse<IRideCosts[]>) => res.body ?? []))\n      .pipe(\n        map((rideCosts: IRideCosts[]) =>\n          this.rideCostsService.addRideCostsToCollectionIfMissing(rideCosts, this.editForm.get('rideCost')!.value)\n        )\n      )\n      .subscribe((rideCosts: IRideCosts[]) => (this.rideCostsCollection = rideCosts));\n\n    this.createYourEventServiceService\n      .query()\n      .pipe(map((res: HttpResponse<ICreateYourEventService[]>) => res.body ?? []))\n      .pipe(\n        map((createYourEventServices: ICreateYourEventService[]) =>\n          this.createYourEventServiceService.addCreateYourEventServiceToCollectionIfMissing(\n            createYourEventServices,\n            this.editForm.get('createYourEventService')!.value\n          )\n        )\n      )\n      .subscribe(\n        (createYourEventServices: ICreateYourEventService[]) => (this.createYourEventServicesSharedCollection = createYourEventServices)\n      );\n  }\n\n  protected createFromForm(): IServiceMap {\n    return {\n      ...new ServiceMap(),\n      id: this.editForm.get(['id'])!.value,\n      title: this.editForm.get(['title'])!.value,\n      rideCost: this.editForm.get(['rideCost'])!.value,\n      createYourEventService: this.editForm.get(['createYourEventService'])!.value,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2\n        id=\"jhi-service-map-heading\"\n        data-cy=\"ServiceMapCreateUpdateHeading\"\n        jhiTranslate=\"createyoureventApp.serviceMap.home.createOrEditLabel\"\n      >\n        Create or edit a Service Map\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.serviceMap.title\" for=\"field_title\">Title</label>\n          <input type=\"text\" class=\"form-control\" name=\"title\" id=\"field_title\" data-cy=\"title\" formControlName=\"title\" />\n          <div *ngIf=\"editForm.get('title')!.invalid && (editForm.get('title')!.dirty || editForm.get('title')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('title')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.serviceMap.rideCost\" for=\"field_rideCost\">Ride Cost</label>\n          <select class=\"form-control\" id=\"field_rideCost\" data-cy=\"rideCost\" name=\"rideCost\" formControlName=\"rideCost\">\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"rideCostsOption.id === editForm.get('rideCost')!.value?.id ? editForm.get('rideCost')!.value : rideCostsOption\"\n              *ngFor=\"let rideCostsOption of rideCostsCollection; trackBy: trackRideCostsById\"\n            >\n              {{ rideCostsOption.id }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label\n            class=\"form-control-label\"\n            jhiTranslate=\"createyoureventApp.serviceMap.createYourEventService\"\n            for=\"field_createYourEventService\"\n            >Create Your Event Service</label\n          >\n          <select\n            class=\"form-control\"\n            id=\"field_createYourEventService\"\n            data-cy=\"createYourEventService\"\n            name=\"createYourEventService\"\n            formControlName=\"createYourEventService\"\n          >\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"\n                createYourEventServiceOption.id === editForm.get('createYourEventService')!.value?.id\n                  ? editForm.get('createYourEventService')!.value\n                  : createYourEventServiceOption\n              \"\n              *ngFor=\"let createYourEventServiceOption of createYourEventServicesSharedCollection; trackBy: trackCreateYourEventServiceById\"\n            >\n              {{ createYourEventServiceOption.id }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}