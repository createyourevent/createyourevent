{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getClubIdentifier } from '../club.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let ClubService = /*#__PURE__*/(() => {\n  class ClubService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/clubs');\n    }\n    create(club) {\n      return this.http.post(this.resourceUrl, club, {\n        observe: 'response'\n      });\n    }\n    update(club) {\n      return this.http.put(`${this.resourceUrl}/${getClubIdentifier(club)}`, club, {\n        observe: 'response'\n      });\n    }\n    partialUpdate(club) {\n      return this.http.patch(`${this.resourceUrl}/${getClubIdentifier(club)}`, club, {\n        observe: 'response'\n      });\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addClubToCollectionIfMissing(clubCollection, ...clubsToCheck) {\n      const clubs = clubsToCheck.filter(isPresent);\n      if (clubs.length > 0) {\n        const clubCollectionIdentifiers = clubCollection.map(clubItem => getClubIdentifier(clubItem));\n        const clubsToAdd = clubs.filter(clubItem => {\n          const clubIdentifier = getClubIdentifier(clubItem);\n          if (clubIdentifier == null || clubCollectionIdentifiers.includes(clubIdentifier)) {\n            return false;\n          }\n          clubCollectionIdentifiers.push(clubIdentifier);\n          return true;\n        });\n        return [...clubsToAdd, ...clubCollection];\n      }\n      return clubCollection;\n    }\n  }\n  ClubService.ɵfac = function ClubService_Factory(t) {\n    return new (t || ClubService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  ClubService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClubService,\n    factory: ClubService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClubService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}