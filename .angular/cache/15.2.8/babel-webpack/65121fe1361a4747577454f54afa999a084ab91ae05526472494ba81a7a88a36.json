{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { RideCosts } from 'app/entities/ride-costs/ride-costs.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/ride-costs/service/ride-costs.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"app/general.service\";\nimport * as i5 from \"app/entities/service-map/service/service-map.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../shared/language/translate.directive\";\nimport * as i9 from \"../../shared/alert/alert-error.component\";\nfunction AddRideCostsComponent_div_23_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \"\\n                        This field is required.\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRideCostsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtemplate(2, AddRideCostsComponent_div_23_small_2_Template, 2, 0, \"small\", 15);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵelementStart(4, \"small\", 16);\n    i0.ɵɵtext(5, \"\\n                            This field should be a number.\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.editForm.get(\"pricePerKilometre\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !((tmp_1_0 = ctx_r0.editForm.get(\"pricePerKilometre\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.number));\n  }\n}\nexport let AddRideCostsComponent = /*#__PURE__*/(() => {\n  class AddRideCostsComponent {\n    constructor(rideCostsService, activatedRoute, fb, route, generalService, serviceMapService, router) {\n      this.rideCostsService = rideCostsService;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.route = route;\n      this.generalService = generalService;\n      this.serviceMapService = serviceMapService;\n      this.router = router;\n      this.isSaving = false;\n      this.editForm = this.fb.group({\n        id: [],\n        pricePerKilometre: [null, [Validators.required]]\n      });\n    }\n    ngOnInit() {\n      this.serviceMapId = Number(this.route.snapshot.paramMap.get('serviceMapId'));\n      this.serviceId = Number(this.route.snapshot.paramMap.get('serviceId'));\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n        this.serviceMapService.find(this.serviceMapId).subscribe(res => {\n          this.serviceMap = res.body;\n          this.updateForm(this.serviceMap.rideCost);\n        });\n      });\n    }\n    updateForm(rideCosts) {\n      this.editForm.patchValue({\n        id: rideCosts.id,\n        pricePerKilometre: rideCosts.pricePerKilometre\n      });\n    }\n    previousState() {\n      window.history.back();\n    }\n    save() {\n      this.isSaving = true;\n      const rideCosts = this.createFromForm();\n      if (rideCosts.id !== null) {\n        this.subscribeToSaveResponse(this.rideCostsService.update(rideCosts));\n      } else {\n        this.rideCostsService.create(rideCosts).subscribe(res => {\n          this.serviceMap.rideCost = res.body;\n          this.serviceMapService.update(this.serviceMap).subscribe(() => {\n            this.router.navigate(['/service/service-maps/service-offers/' + this.serviceId + '/' + this.serviceMapId]);\n            this.isSaving = false;\n          });\n        });\n      }\n    }\n    createFromForm() {\n      return {\n        ...new RideCosts(),\n        id: this.editForm.get(['id']).value,\n        pricePerKilometre: this.editForm.get(['pricePerKilometre']).value\n      };\n    }\n    subscribeToSaveResponse(result) {\n      result.subscribe(() => {\n        this.router.navigate(['/service/service-maps/service-offers/' + this.serviceId + '/' + this.serviceMapId]);\n      });\n    }\n    onSaveError() {\n      this.isSaving = false;\n    }\n  }\n  AddRideCostsComponent.ɵfac = function AddRideCostsComponent_Factory(t) {\n    return new (t || AddRideCostsComponent)(i0.ɵɵdirectiveInject(i1.RideCostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.GeneralService), i0.ɵɵdirectiveInject(i5.ServiceMapService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  AddRideCostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRideCostsComponent,\n    selectors: [[\"jhi-add-ride-costs\"]],\n    decls: 49,\n    vars: 3,\n    consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-ride-costs-heading\", \"jhiTranslate\", \"add-ride-costs.createLabel\"], [\"jhiTranslate\", \"add-ride-costs.createRideCost.info\"], [1, \"form-group\"], [\"jhiTranslate\", \"add-ride-costs.pricePerKilometre\", \"for\", \"field_pricePerKilometre\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"pricePerKilometre\", \"id\", \"field_pricePerKilometre\", \"formControlName\", \"pricePerKilometre\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"button\", \"id\", \"cancel-save\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"entity.validation.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"entity.validation.number\", 1, \"form-text\", \"text-danger\", 3, \"hidden\"], [\"jhiTranslate\", \"entity.validation.required\", 1, \"form-text\", \"text-danger\"]],\n    template: function AddRideCostsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n    \");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n        \");\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddRideCostsComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.save();\n        })(\"ngSubmit\", function AddRideCostsComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(5, \"\\n            \");\n        i0.ɵɵelementStart(6, \"h2\", 3);\n        i0.ɵɵtext(7, \"Create or edit a Ride Costs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\n\\n            \");\n        i0.ɵɵelementStart(9, \"div\");\n        i0.ɵɵtext(10, \"\\n                \");\n        i0.ɵɵelement(11, \"jhi-alert-error\");\n        i0.ɵɵtext(12, \"\\n\\n                \");\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵtext(14, \"\\n                    Here you can enter a price, which you calculate as the kilometer price for this service map if you use a car for these tasks.\\n                    The costs which are then calculated are from the address that you have entered in your service location up to the event for which\\n                    the customer then books you.\\n                \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n\\n                \");\n        i0.ɵɵelementStart(16, \"div\", 5);\n        i0.ɵɵtext(17, \"\\n                    \");\n        i0.ɵɵelementStart(18, \"label\", 6);\n        i0.ɵɵtext(19, \"Price Per Kilometre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n                    \");\n        i0.ɵɵelement(21, \"input\", 7);\n        i0.ɵɵtext(22, \"\\n                    \");\n        i0.ɵɵtemplate(23, AddRideCostsComponent_div_23_Template, 7, 2, \"div\", 8);\n        i0.ɵɵtext(24, \"\\n                \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\n            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\n\\n            \");\n        i0.ɵɵelementStart(27, \"div\");\n        i0.ɵɵtext(28, \"\\n                \");\n        i0.ɵɵelementStart(29, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AddRideCostsComponent_Template_button_click_29_listener() {\n          return ctx.previousState();\n        });\n        i0.ɵɵtext(30, \"\\n                    \");\n        i0.ɵɵelement(31, \"fa-icon\", 10);\n        i0.ɵɵtext(32, \"\\u00A0\");\n        i0.ɵɵelementStart(33, \"span\", 11);\n        i0.ɵɵtext(34, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \"\\n                \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \"\\n\\n                \");\n        i0.ɵɵelementStart(37, \"button\", 12);\n        i0.ɵɵtext(38, \"\\n                    \");\n        i0.ɵɵelement(39, \"fa-icon\", 13);\n        i0.ɵɵtext(40, \"\\u00A0\");\n        i0.ɵɵelementStart(41, \"span\", 14);\n        i0.ɵɵtext(42, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \"\\n                \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44, \"\\n            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(45, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(46, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(47, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"pricePerKilometre\").invalid && (ctx.editForm.get(\"pricePerKilometre\").dirty || ctx.editForm.get(\"pricePerKilometre\").touched));\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i6.NgIf, i7.FaIconComponent, i3.FormGroupDirective, i3.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent],\n    encapsulation: 2\n  });\n  return AddRideCostsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}