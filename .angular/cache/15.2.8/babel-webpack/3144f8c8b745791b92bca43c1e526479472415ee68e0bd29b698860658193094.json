{"ast":null,"code":"import { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CalendarService {\n  constructor(http) {\n    this.http = http;\n    this.resourceUrl = SERVER_API_URL + 'api/events';\n  }\n  queryIsPublicAndActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl}/public/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n}\nCalendarService.ɵfac = function CalendarService_Factory(t) {\n  return new (t || CalendarService)(i0.ɵɵinject(i1.HttpClient));\n};\nCalendarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalendarService,\n  factory: CalendarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAASC,mBAAmB,QAAQ,+BAA+B;;;AAQnE,OAAM,MAAOC,eAAe;EAG1BC,YAAsBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFnB,gBAAW,GAAGJ,cAAc,GAAG,YAAY;EAET;EAEzCK,sBAAsB,CAACC,GAAS;IAC9B,MAAMC,OAAO,GAAGN,mBAAmB,CAACK,GAAG,CAAC;IACxC,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACC,WAAW,gBAAgB,EAAE;MAAEC,MAAM,EAAEH,OAAO;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/G;;;mBARWT,eAAe;AAAA;;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YADF;AAAM","names":["SERVER_API_URL","createRequestOption","CalendarService","constructor","http","queryIsPublicAndActive","req","options","get","resourceUrl","params","observe","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/calendar/calendar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IEvent } from 'app/entities/event/event.model';\n\n\ntype EntityResponseType = HttpResponse<IEvent>;\ntype EntityArrayResponseType = HttpResponse<IEvent[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class CalendarService {\n  public resourceUrl = SERVER_API_URL + 'api/events';\n\n  constructor(protected http: HttpClient) {}\n\n  queryIsPublicAndActive(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(`${this.resourceUrl}/public/active`, { params: options, observe: 'response' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}