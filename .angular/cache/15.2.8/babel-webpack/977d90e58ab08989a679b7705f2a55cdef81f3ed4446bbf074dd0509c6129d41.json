{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, HostListener, NgModule } from '@angular/core';\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_WIDTH = 1;\nconst DEFAULT_STEP = 1;\nclass TagCloudComponent {\n  constructor(el, r2) {\n    this.el = el;\n    this.r2 = r2;\n    this.data = [];\n    this.config = {};\n    this.clicked = new EventEmitter();\n    this.dataChanges = new EventEmitter();\n    this.afterInit = new EventEmitter();\n    this.afterChecked = new EventEmitter();\n    this.cloudDataHtmlElements = [];\n    this.dataArr = [];\n  }\n  get calculatedWidth() {\n    let width = this.config.width || this.width || DEFAULT_WIDTH;\n    if (this.el.nativeElement.parentNode.offsetWidth > 0 && width <= 1 && width > 0) {\n      width = this.el.nativeElement.parentNode.offsetWidth * width;\n    }\n    return width;\n  }\n  get calculatedHeight() {\n    let height = this.config.height || this.height || DEFAULT_HEIGHT;\n    if (this.el.nativeElement.parentNode.offsetHeight > 0 && height <= 1 && height > 0) {\n      height = this.el.nativeElement.parentNode.offsetHeight * height;\n    }\n    return height;\n  }\n  onResize(event) {\n    this.logMessage('debug', 'rezisze triggered');\n    window.clearTimeout(this.timeoutId);\n    this.timeoutId = window.setTimeout(() => {\n      if (this.options.realignOnResize) {\n        this.reDraw();\n      }\n    }, 200);\n  }\n  ngOnChanges(changes) {\n    this.logMessage('debug', 'ngOnChanges fired', changes);\n    // set default values\n    this.config = Object.assign({\n      width: 500,\n      height: 300,\n      overflow: true,\n      strict: false,\n      zoomOnHover: {\n        transitionTime: 0,\n        scale: 1,\n        delay: 0\n      },\n      realignOnResize: false,\n      randomizeAngle: false,\n      step: 2.0,\n      log: false\n    }, this.config);\n    // override properties if explicitly set\n    if (this.width) {\n      this.config.width = this.width;\n    }\n    if (this.height) {\n      this.config.height = this.height;\n    }\n    if (typeof this.overflow === 'boolean') {\n      this.config.overflow = this.overflow;\n    }\n    if (typeof this.strict === 'boolean') {\n      this.config.strict = this.strict;\n    }\n    if (typeof this.realignOnResize === 'boolean') {\n      this.config.realignOnResize = this.realignOnResize;\n    }\n    if (typeof this.randomizeAngle === 'boolean') {\n      this.config.randomizeAngle = this.randomizeAngle;\n    }\n    if (typeof this.background === 'string') {\n      this.config.background = this.background;\n    }\n    if (typeof this.font === 'string') {\n      this.config.font = this.font;\n    }\n    if (this.zoomOnHover) {\n      this.config.zoomOnHover = this.zoomOnHover;\n    }\n    if (this.step) {\n      this.config.step = this.step;\n    }\n    if (this.log) {\n      this.config.log = this.log;\n    }\n    if (this.delay) {\n      this.config.delay = this.delay;\n    }\n    this.logMessage('warn', 'cloud configuration', this.config);\n    // set the basic font style if property is provided\n    if (this.config.font) {\n      this.r2.setStyle(this.el.nativeElement, 'font', this.config.font);\n    }\n    // set a background image if property is provided\n    if (this.config.background) {\n      this.r2.setStyle(this.el.nativeElement, 'background', this.config.background);\n    }\n    this.reDraw(changes);\n  }\n  ngAfterContentInit() {\n    var _a;\n    (_a = this.afterInit) === null || _a === void 0 ? void 0 : _a.emit();\n    this.logMessage('debug', 'afterInit emitted');\n  }\n  ngAfterContentChecked() {\n    var _a;\n    (_a = this.afterChecked) === null || _a === void 0 ? void 0 : _a.emit();\n    this.logMessage('debug', 'afterChecked emitted');\n  }\n  /**\n   * re-draw the word cloud\n   * @param changes the change set\n   */\n  reDraw(changes) {\n    var _a, _b;\n    (_a = this.dataChanges) === null || _a === void 0 ? void 0 : _a.emit(changes);\n    (_b = this.afterChecked) === null || _b === void 0 ? void 0 : _b.emit();\n    this.logMessage('debug', 'dataChanges emitted');\n    this.cloudDataHtmlElements = [];\n    // check if data is not null or empty\n    if (!this.data) {\n      console.error('angular-tag-cloud: No data passed. Please pass an Array of CloudData');\n      return;\n    }\n    // values changed, reset cloud\n    this.el.nativeElement.innerHTML = '';\n    // set value changes\n    if (changes && changes.data) {\n      this.dataArr = changes.data.currentValue;\n    }\n    // set options\n    this.options = Object.assign(Object.assign({}, this.config), {\n      aspectRatio: this.calculatedWidth / this.calculatedHeight,\n      width: this.calculatedWidth,\n      height: this.calculatedHeight,\n      center: {\n        x: this.calculatedWidth / 2.0,\n        y: this.calculatedHeight / 2.0\n      }\n    });\n    // set the dimensions\n    this.r2.setStyle(this.el.nativeElement, 'width', this.options.width + 'px');\n    this.r2.setStyle(this.el.nativeElement, 'height', this.options.height + 'px');\n    // draw the cloud\n    this.drawWordCloud();\n    this.logMessage('debug', 'reDraw finished');\n  }\n  /**\n   * helper to generate a descriptive string for an entry to use when sorting alphabetically\n   * @param entry the cloud entry to be used\n   */\n  descriptiveEntry(entry) {\n    let description = entry.text;\n    description += entry.color ? `-${entry.color}` : '';\n    description += entry.external ? `-${entry.external}` : '';\n    description += entry.link ? `-${entry.link}` : '';\n    description += entry.rotate ? `-${entry.rotate}` : '';\n    return description;\n  }\n  /**\n   * proceed draw the cloud\n   */\n  drawWordCloud() {\n    // Sort alphabetically to ensure that, all things being equal, words are placed uniformly\n    this.dataArr.sort((a, b) => this.descriptiveEntry(a).localeCompare(this.descriptiveEntry(b)));\n    // Sort this._dataArr from the word with the highest weight to the one with the lowest\n    this.dataArr.sort((a, b) => b.weight - a.weight);\n    // place fixed elements first\n    const elementsWithFixedPositions = this.dataArr.filter(item => item.position);\n    const elementsWithRandomPositions = this.dataArr.filter(item => !item.position);\n    elementsWithFixedPositions.forEach((elem, index) => {\n      this.drawWord(index, elem);\n    });\n    elementsWithRandomPositions.forEach((elem, index) => {\n      this.drawWord(index, elem);\n    });\n  }\n  /**\n   * Helper function to test if an element overlaps others\n   * @param testEl the HTML Element to be tested\n   */\n  hitTest(testEl) {\n    // Check elements for overlap one by one, stop and return false as soon as an overlap is found\n    for (const item of this.cloudDataHtmlElements) {\n      if (this.overlapping(testEl, item)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Pairwise overlap detection\n   * @param e1 the first element for overlap detection\n   * @param e2 the second element for overlap detection\n   */\n  overlapping(e1, e2) {\n    const rect1 = e1.getBoundingClientRect();\n    const rect2 = e2.getBoundingClientRect();\n    const overlap = !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom);\n    return overlap;\n  }\n  /**\n   * Check if min(weight) > max(weight) otherwise use default\n   * @param word the particular word configuration\n   */\n  getWeightForWord(word) {\n    let weight = 5;\n    if (this.dataArr[0].weight > this.dataArr[this.dataArr.length - 1].weight) {\n      // check if strict mode is active\n      if (!this.options.strict) {\n        // Linearly map the original weight to a discrete scale from 1 to 10\n        weight = Math.round((word.weight - this.dataArr[this.dataArr.length - 1].weight) / (this.dataArr[0].weight - this.dataArr[this.dataArr.length - 1].weight) * 9.0) + 1;\n      } else {\n        // use given value for weigth directly\n        // fallback to 10\n        if (word.weight > 10) {\n          weight = 10;\n          this.logMessage('warn', `[TagCloud strict] Weight property ${word.weight} > 10. Fallback to 10 as you are using strict mode`, word);\n        } else if (word.weight < 1) {\n          // fallback to 1\n          weight = 1;\n          this.logMessage('warn', `[TagCloud strict] Given weight property ${word.weight} < 1. Fallback to 1 as you are using strict mode`, word);\n        } else if (word.weight % 1 !== 0) {\n          // round if given value is not an integer\n          weight = Math.round(word.weight);\n          this.logMessage('warn', `[TagCloud strict] Given weight property ${word.weight} is not an integer. Rounded value to ${weight}`, word);\n        } else {\n          weight = word.weight;\n        }\n      }\n    }\n    return weight;\n  }\n  /**\n   * change the HTMLElements color style\n   * @param el the HTML element\n   * @param color the CSS color value\n   */\n  setWordColor(el, color) {\n    this.r2.setStyle(el, 'color', color);\n  }\n  /**\n   * Add a tooltip to the element\n   * @param el the HTML element\n   * @param tooltip the tooltip text\n   */\n  setTooltip(el, tooltip) {\n    this.r2.addClass(el, 'tooltip');\n    const tooltipSpan = this.r2.createElement('span');\n    tooltipSpan.className = 'tooltiptext';\n    const text = this.r2.createText(tooltip);\n    tooltipSpan.appendChild(text);\n    el.appendChild(tooltipSpan);\n  }\n  /**\n   * change the HTMLElements rotation style\n   * @param el the HTML element\n   * @param deg the rotation value (degrees)\n   */\n  setWordRotation(el, deg) {\n    const transformString = deg ? `rotate(${deg}deg)` : '';\n    this.r2.setStyle(el, 'transform', transformString);\n    return transformString;\n  }\n  /**\n   * wrap the given node into an HTML anchor element\n   * @param node the HTML node that should be wrapped\n   * @param word the particular word configuration\n   */\n  wrapNodeIntoAnchorElement(node, word) {\n    const wordLink = this.r2.createElement('a');\n    wordLink.href = word.link || '';\n    if (word.external !== undefined && word.external) {\n      wordLink.target = '_blank';\n    }\n    wordLink.appendChild(node);\n    return wordLink;\n  }\n  /**\n   * wrap the given node into an HTML anchor element\n   * @param node the HTML node that should be wrapped\n   * @param word the particular word configuration\n   */\n  applyZoomStyle(node, el, link, transformString) {\n    if (this.options.zoomOnHover && this.options.zoomOnHover.scale !== 1) {\n      if (!this.options.zoomOnHover.transitionTime) {\n        this.options.zoomOnHover.transitionTime = 0;\n      }\n      if (!this.options.zoomOnHover.scale) {\n        this.options.zoomOnHover.scale = 1;\n      }\n      el.onmouseover = () => {\n        var _a, _b, _c, _d;\n        if ((_a = this.options.zoomOnHover) === null || _a === void 0 ? void 0 : _a.transitionTime) {\n          this.r2.setStyle(el, 'transition', `transform ${this.options.zoomOnHover.transitionTime}s`);\n        }\n        if ((_b = this.options.zoomOnHover) === null || _b === void 0 ? void 0 : _b.scale) {\n          this.r2.setStyle(el, 'transform', `scale(${this.options.zoomOnHover.scale}) ${transformString}`);\n        }\n        if ((_c = this.options.zoomOnHover) === null || _c === void 0 ? void 0 : _c.delay) {\n          this.r2.setStyle(el, 'transition-delay', `${this.options.zoomOnHover.delay}s`);\n        }\n        if ((_d = this.options.zoomOnHover) === null || _d === void 0 ? void 0 : _d.color) {\n          link ? this.r2.setStyle(node, 'color', this.options.zoomOnHover.color) : this.r2.setStyle(el, 'color', this.options.zoomOnHover.color);\n        }\n      };\n      el.onmouseout = () => {\n        var _a;\n        this.r2.setStyle(el, 'transform', `none ${transformString}`);\n        if ((_a = this.options.zoomOnHover) === null || _a === void 0 ? void 0 : _a.color) {\n          link ? this.r2.removeStyle(node, 'color') : this.r2.removeStyle(el, 'color');\n        }\n      };\n    }\n  }\n  /**\n   * Place the word at a calculated position\n   * @param wordSpan The HTML Span element to be placed\n   * @param word The word to be placed\n   * @param index The index of the element\n   */\n  setPosition(wordSpan, word, index) {\n    var _a, _b;\n    let angle = this.options.randomizeAngle ? 6.28 * Math.random() : 0;\n    let radius = 0;\n    // Save a reference to the style property, for better performance\n    const wordStyle = wordSpan.style;\n    wordStyle.position = 'absolute';\n    const useFixedPosition = Boolean(word.position && word.position.left && word.position.top);\n    const width = wordSpan.offsetWidth;\n    const height = wordSpan.offsetHeight;\n    let left = useFixedPosition && ((_a = word.position) === null || _a === void 0 ? void 0 : _a.left) ? word.position.left : this.options.center.x - width / 2;\n    let top = useFixedPosition && ((_b = word.position) === null || _b === void 0 ? void 0 : _b.top) ? word.position.top : this.options.center.y - height / 2;\n    // place the first word\n    wordStyle.left = left + 'px';\n    wordStyle.top = top + 'px';\n    // delayed appearance\n    if (this.options.delay) {\n      wordStyle.animation = 'fadeIn 0.5s';\n      wordStyle.opacity = '0';\n      wordStyle.animationFillMode = 'forwards';\n      wordStyle.animationDelay = `${this.options.delay * index}ms`;\n    }\n    // default case: place randomly\n    if (!useFixedPosition) {\n      // do not place the first word always right in the middle\n      if (index === 0) {\n        wordStyle.left = left + (Math.random() - 0.5) * 2 * (this.calculatedWidth / 5) + 'px';\n        wordStyle.top = top + (Math.random() - 0.5) * 2 * (this.calculatedHeight / 5) + '30px';\n      } else {\n        while (this.options.width && this.options.height && wordSpan.offsetHeight && wordSpan.offsetWidth && this.hitTest(wordSpan)) {\n          radius += this.options.step || DEFAULT_STEP;\n          angle += (index % 2 === 0 ? 1 : -1) * (this.options.step || DEFAULT_STEP);\n          left = this.options.center.x - width / 2.0 + radius * Math.cos(angle) * this.options.aspectRatio;\n          top = this.options.center.y + radius * Math.sin(angle) - height / 2.0;\n          wordStyle.left = left + 'px';\n          wordStyle.top = top + 'px';\n        }\n      }\n    }\n    // Don't render word if part of it would be outside the container\n    if (!this.options.overflow && (left < 0 || top < 0 || left + width > this.calculatedWidth || top + height > this.calculatedHeight)) {\n      this.logMessage('warn', \"Word did not fit into the cloud and overflow is set to 'false'. The element will be removed\", wordSpan);\n      wordSpan.remove();\n      return;\n    }\n  }\n  /**\n   * Methods to draw a word, by moving it in spiral until it finds a suitable empty place.\n   * This will be iterated on each word.\n   * @param index the index number for the word\n   * @param word the particular word configuration\n   */\n  drawWord(index, word) {\n    let wordSpan;\n    // get calculated word weight\n    const weight = this.getWeightForWord(word);\n    // Create a new span and insert node.\n    wordSpan = this.r2.createElement('span');\n    wordSpan.className = `w${weight}`;\n    // emit onclick event\n    wordSpan.onclick = () => {\n      var _a;\n      (_a = this.clicked) === null || _a === void 0 ? void 0 : _a.emit(word);\n    };\n    // Put the word (and its tooltip) in foreground when cursor is above\n    wordSpan.onmouseenter = () => {\n      wordSpan.style.zIndex = '2';\n    };\n    // Otherwise, restore standard priority\n    wordSpan.onmouseleave = () => {\n      wordSpan.style.zIndex = '1';\n    };\n    // append word text\n    let node = this.r2.createText(word.text);\n    // set color\n    if (word.color) this.setWordColor(wordSpan, word.color);\n    // rotate word possibly\n    const transformString = this.setWordRotation(wordSpan, word.rotate);\n    // Append href if there's a link along with the tag\n    if (word.link) node = this.wrapNodeIntoAnchorElement(node, word);\n    // set zoomOption\n    if (this.options.zoomOnHover && this.options.zoomOnHover.scale !== 1) {\n      this.applyZoomStyle(node, wordSpan, word.link, transformString);\n    }\n    wordSpan.appendChild(node);\n    this.r2.appendChild(this.el.nativeElement, wordSpan);\n    // add tooltip if provided\n    if (word.tooltip) this.setTooltip(wordSpan, word.tooltip);\n    // set a unique id\n    wordSpan.id = `angular-tag-cloud-item-${index}`;\n    // define the elements position\n    this.setPosition(wordSpan, word, index);\n    this.logMessage('debug', 'Adds new word <span>', wordSpan);\n    this.cloudDataHtmlElements.push(wordSpan);\n    this.logMessage('debug', 'Placed words', this.cloudDataHtmlElements);\n  }\n  /**\n   * Log messages to console\n   * @param level the log level\n   * @param args extra args to be logged\n   */\n  logMessage(level, ...args) {\n    if (!this.config) {\n      return;\n    }\n    if (this.config.log === 'debug') {\n      console.log(`[AngularTagCloudModule ${level}]`, ...args);\n    } else if (this.config.log === 'warn' && level === 'warn') {\n      console.warn(`[AngularTagCloudModule ${level}]`, ...args);\n    }\n  }\n}\nTagCloudComponent.ɵfac = function TagCloudComponent_Factory(t) {\n  return new (t || TagCloudComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTagCloudComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagCloudComponent,\n  selectors: [[\"angular-tag-cloud\"], [\"ng-tag-cloud\"], [\"ngtc\"]],\n  hostBindings: function TagCloudComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TagCloudComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    step: \"step\",\n    overflow: \"overflow\",\n    strict: \"strict\",\n    zoomOnHover: \"zoomOnHover\",\n    realignOnResize: \"realignOnResize\",\n    randomizeAngle: \"randomizeAngle\",\n    background: \"background\",\n    font: \"font\",\n    delay: \"delay\",\n    config: \"config\",\n    log: \"log\"\n  },\n  outputs: {\n    clicked: \"clicked\",\n    dataChanges: \"dataChanges\",\n    afterInit: \"afterInit\",\n    afterChecked: \"afterChecked\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function TagCloudComponent_Template(rf, ctx) {},\n  styles: [\"[_nghost-%COMP%]{font-family:\\\"Helvetica\\\",\\\"Arial\\\",sans-serif;font-size:10px;line-height:normal;color:#09f;overflow:hidden;position:relative;display:block}span[_ngcontent-%COMP%]{padding:0}span.w10[_ngcontent-%COMP%]{font-size:550%}span.w9[_ngcontent-%COMP%]{font-size:500%}span.w8[_ngcontent-%COMP%]{font-size:450%}span.w7[_ngcontent-%COMP%]{font-size:400%}span.w6[_ngcontent-%COMP%]{font-size:350%}span.w5[_ngcontent-%COMP%]{font-size:300%}span.w4[_ngcontent-%COMP%]{font-size:250%}span.w3[_ngcontent-%COMP%]{font-size:200%}span.w2[_ngcontent-%COMP%]{font-size:150%}span.w1[_ngcontent-%COMP%]{font-size:100%}a[_ngcontent-%COMP%]:hover{color:#0df}a[_ngcontent-%COMP%]:hover{color:#0cf}span.w10[_ngcontent-%COMP%]{color:#0cf}span.w9[_ngcontent-%COMP%]{color:#0cf}span.w8[_ngcontent-%COMP%]{color:#0cf}span.w7[_ngcontent-%COMP%]{color:#39d}span.w6[_ngcontent-%COMP%]{color:#90c5f0}span.w5[_ngcontent-%COMP%]{color:#90a0dd}span.w4[_ngcontent-%COMP%]{color:#90c5f0}span.w3[_ngcontent-%COMP%]{color:#a0ddff}span.w2[_ngcontent-%COMP%]{color:#9ce}span.w1[_ngcontent-%COMP%]{color:#aab5f0}.tooltip[_ngcontent-%COMP%]   .tooltiptext[_ngcontent-%COMP%]{visibility:hidden;width:inherit;background-color:#555;color:#fff;text-align:center;border-radius:6px;padding:5px 10px;position:absolute;bottom:100%;left:0px;opacity:0;transition:opacity .3s}.tooltip[_ngcontent-%COMP%]   .tooltiptext[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#555 transparent transparent transparent}.tooltip[_ngcontent-%COMP%]:hover   .tooltiptext[_ngcontent-%COMP%]{visibility:visible;opacity:1}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0}to{opacity:1}}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagCloudComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular-tag-cloud, ng-tag-cloud, ngtc',\n      template: '',\n      styleUrls: ['./tag-cloud.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    overflow: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    zoomOnHover: [{\n      type: Input\n    }],\n    realignOnResize: [{\n      type: Input\n    }],\n    randomizeAngle: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    font: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    log: [{\n      type: Input\n    }],\n    clicked: [{\n      type: Output\n    }],\n    dataChanges: [{\n      type: Output\n    }],\n    afterInit: [{\n      type: Output\n    }],\n    afterChecked: [{\n      type: Output\n    }],\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }]\n  });\n})();\nclass TagCloudModule {}\nTagCloudModule.ɵfac = function TagCloudModule_Factory(t) {\n  return new (t || TagCloudModule)();\n};\nTagCloudModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TagCloudModule\n});\nTagCloudModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagCloudModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TagCloudComponent],\n      exports: [TagCloudComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of angular-tag-cloud-module\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TagCloudComponent, TagCloudModule };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","HostListener","NgModule","DEFAULT_HEIGHT","DEFAULT_WIDTH","DEFAULT_STEP","TagCloudComponent","constructor","el","r2","data","config","clicked","dataChanges","afterInit","afterChecked","cloudDataHtmlElements","dataArr","calculatedWidth","width","nativeElement","parentNode","offsetWidth","calculatedHeight","height","offsetHeight","onResize","event","logMessage","window","clearTimeout","timeoutId","setTimeout","options","realignOnResize","reDraw","ngOnChanges","changes","Object","assign","overflow","strict","zoomOnHover","transitionTime","scale","delay","randomizeAngle","step","log","background","font","setStyle","ngAfterContentInit","_a","emit","ngAfterContentChecked","_b","console","error","innerHTML","currentValue","aspectRatio","center","x","y","drawWordCloud","descriptiveEntry","entry","description","text","color","external","link","rotate","sort","a","b","localeCompare","weight","elementsWithFixedPositions","filter","item","position","elementsWithRandomPositions","forEach","elem","index","drawWord","hitTest","testEl","overlapping","e1","e2","rect1","getBoundingClientRect","rect2","overlap","right","left","bottom","top","getWeightForWord","word","length","Math","round","setWordColor","setTooltip","tooltip","addClass","tooltipSpan","createElement","className","createText","appendChild","setWordRotation","deg","transformString","wrapNodeIntoAnchorElement","node","wordLink","href","undefined","target","applyZoomStyle","onmouseover","_c","_d","onmouseout","removeStyle","setPosition","wordSpan","angle","random","radius","wordStyle","style","useFixedPosition","Boolean","animation","opacity","animationFillMode","animationDelay","cos","sin","remove","onclick","onmouseenter","zIndex","onmouseleave","id","push","level","args","warn","ɵfac","ElementRef","Renderer2","ɵcmp","type","selector","template","styleUrls","TagCloudModule","ɵmod","ɵinj","declarations","exports"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/angular-tag-cloud-module/fesm2015/angular-tag-cloud-module.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, HostListener, NgModule } from '@angular/core';\n\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_WIDTH = 1;\nconst DEFAULT_STEP = 1;\nclass TagCloudComponent {\n    constructor(el, r2) {\n        this.el = el;\n        this.r2 = r2;\n        this.data = [];\n        this.config = {};\n        this.clicked = new EventEmitter();\n        this.dataChanges = new EventEmitter();\n        this.afterInit = new EventEmitter();\n        this.afterChecked = new EventEmitter();\n        this.cloudDataHtmlElements = [];\n        this.dataArr = [];\n    }\n    get calculatedWidth() {\n        let width = this.config.width || this.width || DEFAULT_WIDTH;\n        if (this.el.nativeElement.parentNode.offsetWidth > 0 &&\n            width <= 1 &&\n            width > 0) {\n            width = this.el.nativeElement.parentNode.offsetWidth * width;\n        }\n        return width;\n    }\n    get calculatedHeight() {\n        let height = this.config.height || this.height || DEFAULT_HEIGHT;\n        if (this.el.nativeElement.parentNode.offsetHeight > 0 &&\n            height <= 1 &&\n            height > 0) {\n            height = this.el.nativeElement.parentNode.offsetHeight * height;\n        }\n        return height;\n    }\n    onResize(event) {\n        this.logMessage('debug', 'rezisze triggered');\n        window.clearTimeout(this.timeoutId);\n        this.timeoutId = window.setTimeout(() => {\n            if (this.options.realignOnResize) {\n                this.reDraw();\n            }\n        }, 200);\n    }\n    ngOnChanges(changes) {\n        this.logMessage('debug', 'ngOnChanges fired', changes);\n        // set default values\n        this.config = Object.assign({ width: 500, height: 300, overflow: true, strict: false, zoomOnHover: {\n                transitionTime: 0,\n                scale: 1,\n                delay: 0,\n            }, realignOnResize: false, randomizeAngle: false, step: 2.0, log: false }, this.config);\n        // override properties if explicitly set\n        if (this.width) {\n            this.config.width = this.width;\n        }\n        if (this.height) {\n            this.config.height = this.height;\n        }\n        if (typeof this.overflow === 'boolean') {\n            this.config.overflow = this.overflow;\n        }\n        if (typeof this.strict === 'boolean') {\n            this.config.strict = this.strict;\n        }\n        if (typeof this.realignOnResize === 'boolean') {\n            this.config.realignOnResize = this.realignOnResize;\n        }\n        if (typeof this.randomizeAngle === 'boolean') {\n            this.config.randomizeAngle = this.randomizeAngle;\n        }\n        if (typeof this.background === 'string') {\n            this.config.background = this.background;\n        }\n        if (typeof this.font === 'string') {\n            this.config.font = this.font;\n        }\n        if (this.zoomOnHover) {\n            this.config.zoomOnHover = this.zoomOnHover;\n        }\n        if (this.step) {\n            this.config.step = this.step;\n        }\n        if (this.log) {\n            this.config.log = this.log;\n        }\n        if (this.delay) {\n            this.config.delay = this.delay;\n        }\n        this.logMessage('warn', 'cloud configuration', this.config);\n        // set the basic font style if property is provided\n        if (this.config.font) {\n            this.r2.setStyle(this.el.nativeElement, 'font', this.config.font);\n        }\n        // set a background image if property is provided\n        if (this.config.background) {\n            this.r2.setStyle(this.el.nativeElement, 'background', this.config.background);\n        }\n        this.reDraw(changes);\n    }\n    ngAfterContentInit() {\n        var _a;\n        (_a = this.afterInit) === null || _a === void 0 ? void 0 : _a.emit();\n        this.logMessage('debug', 'afterInit emitted');\n    }\n    ngAfterContentChecked() {\n        var _a;\n        (_a = this.afterChecked) === null || _a === void 0 ? void 0 : _a.emit();\n        this.logMessage('debug', 'afterChecked emitted');\n    }\n    /**\n     * re-draw the word cloud\n     * @param changes the change set\n     */\n    reDraw(changes) {\n        var _a, _b;\n        (_a = this.dataChanges) === null || _a === void 0 ? void 0 : _a.emit(changes);\n        (_b = this.afterChecked) === null || _b === void 0 ? void 0 : _b.emit();\n        this.logMessage('debug', 'dataChanges emitted');\n        this.cloudDataHtmlElements = [];\n        // check if data is not null or empty\n        if (!this.data) {\n            console.error('angular-tag-cloud: No data passed. Please pass an Array of CloudData');\n            return;\n        }\n        // values changed, reset cloud\n        this.el.nativeElement.innerHTML = '';\n        // set value changes\n        if (changes && changes.data) {\n            this.dataArr = changes.data.currentValue;\n        }\n        // set options\n        this.options = Object.assign(Object.assign({}, this.config), { aspectRatio: this.calculatedWidth / this.calculatedHeight, width: this.calculatedWidth, height: this.calculatedHeight, center: {\n                x: this.calculatedWidth / 2.0,\n                y: this.calculatedHeight / 2.0,\n            } });\n        // set the dimensions\n        this.r2.setStyle(this.el.nativeElement, 'width', this.options.width + 'px');\n        this.r2.setStyle(this.el.nativeElement, 'height', this.options.height + 'px');\n        // draw the cloud\n        this.drawWordCloud();\n        this.logMessage('debug', 'reDraw finished');\n    }\n    /**\n     * helper to generate a descriptive string for an entry to use when sorting alphabetically\n     * @param entry the cloud entry to be used\n     */\n    descriptiveEntry(entry) {\n        let description = entry.text;\n        description += entry.color ? `-${entry.color}` : '';\n        description += entry.external ? `-${entry.external}` : '';\n        description += entry.link ? `-${entry.link}` : '';\n        description += entry.rotate ? `-${entry.rotate}` : '';\n        return description;\n    }\n    /**\n     * proceed draw the cloud\n     */\n    drawWordCloud() {\n        // Sort alphabetically to ensure that, all things being equal, words are placed uniformly\n        this.dataArr.sort((a, b) => this.descriptiveEntry(a).localeCompare(this.descriptiveEntry(b)));\n        // Sort this._dataArr from the word with the highest weight to the one with the lowest\n        this.dataArr.sort((a, b) => b.weight - a.weight);\n        // place fixed elements first\n        const elementsWithFixedPositions = this.dataArr.filter((item) => item.position);\n        const elementsWithRandomPositions = this.dataArr.filter((item) => !item.position);\n        elementsWithFixedPositions.forEach((elem, index) => {\n            this.drawWord(index, elem);\n        });\n        elementsWithRandomPositions.forEach((elem, index) => {\n            this.drawWord(index, elem);\n        });\n    }\n    /**\n     * Helper function to test if an element overlaps others\n     * @param testEl the HTML Element to be tested\n     */\n    hitTest(testEl) {\n        // Check elements for overlap one by one, stop and return false as soon as an overlap is found\n        for (const item of this.cloudDataHtmlElements) {\n            if (this.overlapping(testEl, item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Pairwise overlap detection\n     * @param e1 the first element for overlap detection\n     * @param e2 the second element for overlap detection\n     */\n    overlapping(e1, e2) {\n        const rect1 = e1.getBoundingClientRect();\n        const rect2 = e2.getBoundingClientRect();\n        const overlap = !(rect1.right < rect2.left ||\n            rect1.left > rect2.right ||\n            rect1.bottom < rect2.top ||\n            rect1.top > rect2.bottom);\n        return overlap;\n    }\n    /**\n     * Check if min(weight) > max(weight) otherwise use default\n     * @param word the particular word configuration\n     */\n    getWeightForWord(word) {\n        let weight = 5;\n        if (this.dataArr[0].weight > this.dataArr[this.dataArr.length - 1].weight) {\n            // check if strict mode is active\n            if (!this.options.strict) {\n                // Linearly map the original weight to a discrete scale from 1 to 10\n                weight =\n                    Math.round(((word.weight - this.dataArr[this.dataArr.length - 1].weight) /\n                        (this.dataArr[0].weight -\n                            this.dataArr[this.dataArr.length - 1].weight)) *\n                        9.0) + 1;\n            }\n            else {\n                // use given value for weigth directly\n                // fallback to 10\n                if (word.weight > 10) {\n                    weight = 10;\n                    this.logMessage('warn', `[TagCloud strict] Weight property ${word.weight} > 10. Fallback to 10 as you are using strict mode`, word);\n                }\n                else if (word.weight < 1) {\n                    // fallback to 1\n                    weight = 1;\n                    this.logMessage('warn', `[TagCloud strict] Given weight property ${word.weight} < 1. Fallback to 1 as you are using strict mode`, word);\n                }\n                else if (word.weight % 1 !== 0) {\n                    // round if given value is not an integer\n                    weight = Math.round(word.weight);\n                    this.logMessage('warn', `[TagCloud strict] Given weight property ${word.weight} is not an integer. Rounded value to ${weight}`, word);\n                }\n                else {\n                    weight = word.weight;\n                }\n            }\n        }\n        return weight;\n    }\n    /**\n     * change the HTMLElements color style\n     * @param el the HTML element\n     * @param color the CSS color value\n     */\n    setWordColor(el, color) {\n        this.r2.setStyle(el, 'color', color);\n    }\n    /**\n     * Add a tooltip to the element\n     * @param el the HTML element\n     * @param tooltip the tooltip text\n     */\n    setTooltip(el, tooltip) {\n        this.r2.addClass(el, 'tooltip');\n        const tooltipSpan = this.r2.createElement('span');\n        tooltipSpan.className = 'tooltiptext';\n        const text = this.r2.createText(tooltip);\n        tooltipSpan.appendChild(text);\n        el.appendChild(tooltipSpan);\n    }\n    /**\n     * change the HTMLElements rotation style\n     * @param el the HTML element\n     * @param deg the rotation value (degrees)\n     */\n    setWordRotation(el, deg) {\n        const transformString = deg ? `rotate(${deg}deg)` : '';\n        this.r2.setStyle(el, 'transform', transformString);\n        return transformString;\n    }\n    /**\n     * wrap the given node into an HTML anchor element\n     * @param node the HTML node that should be wrapped\n     * @param word the particular word configuration\n     */\n    wrapNodeIntoAnchorElement(node, word) {\n        const wordLink = this.r2.createElement('a');\n        wordLink.href = word.link || '';\n        if (word.external !== undefined && word.external) {\n            wordLink.target = '_blank';\n        }\n        wordLink.appendChild(node);\n        return wordLink;\n    }\n    /**\n     * wrap the given node into an HTML anchor element\n     * @param node the HTML node that should be wrapped\n     * @param word the particular word configuration\n     */\n    applyZoomStyle(node, el, link, transformString) {\n        if (this.options.zoomOnHover && this.options.zoomOnHover.scale !== 1) {\n            if (!this.options.zoomOnHover.transitionTime) {\n                this.options.zoomOnHover.transitionTime = 0;\n            }\n            if (!this.options.zoomOnHover.scale) {\n                this.options.zoomOnHover.scale = 1;\n            }\n            el.onmouseover = () => {\n                var _a, _b, _c, _d;\n                if ((_a = this.options.zoomOnHover) === null || _a === void 0 ? void 0 : _a.transitionTime) {\n                    this.r2.setStyle(el, 'transition', `transform ${this.options.zoomOnHover.transitionTime}s`);\n                }\n                if ((_b = this.options.zoomOnHover) === null || _b === void 0 ? void 0 : _b.scale) {\n                    this.r2.setStyle(el, 'transform', `scale(${this.options.zoomOnHover.scale}) ${transformString}`);\n                }\n                if ((_c = this.options.zoomOnHover) === null || _c === void 0 ? void 0 : _c.delay) {\n                    this.r2.setStyle(el, 'transition-delay', `${this.options.zoomOnHover.delay}s`);\n                }\n                if ((_d = this.options.zoomOnHover) === null || _d === void 0 ? void 0 : _d.color) {\n                    link\n                        ? this.r2.setStyle(node, 'color', this.options.zoomOnHover.color)\n                        : this.r2.setStyle(el, 'color', this.options.zoomOnHover.color);\n                }\n            };\n            el.onmouseout = () => {\n                var _a;\n                this.r2.setStyle(el, 'transform', `none ${transformString}`);\n                if ((_a = this.options.zoomOnHover) === null || _a === void 0 ? void 0 : _a.color) {\n                    link\n                        ? this.r2.removeStyle(node, 'color')\n                        : this.r2.removeStyle(el, 'color');\n                }\n            };\n        }\n    }\n    /**\n     * Place the word at a calculated position\n     * @param wordSpan The HTML Span element to be placed\n     * @param word The word to be placed\n     * @param index The index of the element\n     */\n    setPosition(wordSpan, word, index) {\n        var _a, _b;\n        let angle = this.options.randomizeAngle ? 6.28 * Math.random() : 0;\n        let radius = 0;\n        // Save a reference to the style property, for better performance\n        const wordStyle = wordSpan.style;\n        wordStyle.position = 'absolute';\n        const useFixedPosition = Boolean(word.position && word.position.left && word.position.top);\n        const width = wordSpan.offsetWidth;\n        const height = wordSpan.offsetHeight;\n        let left = useFixedPosition && ((_a = word.position) === null || _a === void 0 ? void 0 : _a.left)\n            ? word.position.left\n            : this.options.center.x - width / 2;\n        let top = useFixedPosition && ((_b = word.position) === null || _b === void 0 ? void 0 : _b.top)\n            ? word.position.top\n            : this.options.center.y - height / 2;\n        // place the first word\n        wordStyle.left = left + 'px';\n        wordStyle.top = top + 'px';\n        // delayed appearance\n        if (this.options.delay) {\n            wordStyle.animation = 'fadeIn 0.5s';\n            wordStyle.opacity = '0';\n            wordStyle.animationFillMode = 'forwards';\n            wordStyle.animationDelay = `${this.options.delay * index}ms`;\n        }\n        // default case: place randomly\n        if (!useFixedPosition) {\n            // do not place the first word always right in the middle\n            if (index === 0) {\n                wordStyle.left =\n                    left + (Math.random() - 0.5) * 2 * (this.calculatedWidth / 5) + 'px';\n                wordStyle.top =\n                    top +\n                        (Math.random() - 0.5) * 2 * (this.calculatedHeight / 5) +\n                        '30px';\n            }\n            else {\n                while (this.options.width &&\n                    this.options.height &&\n                    wordSpan.offsetHeight &&\n                    wordSpan.offsetWidth &&\n                    this.hitTest(wordSpan)) {\n                    radius += this.options.step || DEFAULT_STEP;\n                    angle +=\n                        (index % 2 === 0 ? 1 : -1) * (this.options.step || DEFAULT_STEP);\n                    left =\n                        this.options.center.x -\n                            width / 2.0 +\n                            radius * Math.cos(angle) * this.options.aspectRatio;\n                    top = this.options.center.y + radius * Math.sin(angle) - height / 2.0;\n                    wordStyle.left = left + 'px';\n                    wordStyle.top = top + 'px';\n                }\n            }\n        }\n        // Don't render word if part of it would be outside the container\n        if (!this.options.overflow &&\n            (left < 0 ||\n                top < 0 ||\n                left + width > this.calculatedWidth ||\n                top + height > this.calculatedHeight)) {\n            this.logMessage('warn', \"Word did not fit into the cloud and overflow is set to 'false'. The element will be removed\", wordSpan);\n            wordSpan.remove();\n            return;\n        }\n    }\n    /**\n     * Methods to draw a word, by moving it in spiral until it finds a suitable empty place.\n     * This will be iterated on each word.\n     * @param index the index number for the word\n     * @param word the particular word configuration\n     */\n    drawWord(index, word) {\n        let wordSpan;\n        // get calculated word weight\n        const weight = this.getWeightForWord(word);\n        // Create a new span and insert node.\n        wordSpan = this.r2.createElement('span');\n        wordSpan.className = `w${weight}`;\n        // emit onclick event\n        wordSpan.onclick = () => {\n            var _a;\n            (_a = this.clicked) === null || _a === void 0 ? void 0 : _a.emit(word);\n        };\n        // Put the word (and its tooltip) in foreground when cursor is above\n        wordSpan.onmouseenter = () => {\n            wordSpan.style.zIndex = '2';\n        };\n        // Otherwise, restore standard priority\n        wordSpan.onmouseleave = () => {\n            wordSpan.style.zIndex = '1';\n        };\n        // append word text\n        let node = this.r2.createText(word.text);\n        // set color\n        if (word.color)\n            this.setWordColor(wordSpan, word.color);\n        // rotate word possibly\n        const transformString = this.setWordRotation(wordSpan, word.rotate);\n        // Append href if there's a link along with the tag\n        if (word.link)\n            node = this.wrapNodeIntoAnchorElement(node, word);\n        // set zoomOption\n        if (this.options.zoomOnHover && this.options.zoomOnHover.scale !== 1) {\n            this.applyZoomStyle(node, wordSpan, word.link, transformString);\n        }\n        wordSpan.appendChild(node);\n        this.r2.appendChild(this.el.nativeElement, wordSpan);\n        // add tooltip if provided\n        if (word.tooltip)\n            this.setTooltip(wordSpan, word.tooltip);\n        // set a unique id\n        wordSpan.id = `angular-tag-cloud-item-${index}`;\n        // define the elements position\n        this.setPosition(wordSpan, word, index);\n        this.logMessage('debug', 'Adds new word <span>', wordSpan);\n        this.cloudDataHtmlElements.push(wordSpan);\n        this.logMessage('debug', 'Placed words', this.cloudDataHtmlElements);\n    }\n    /**\n     * Log messages to console\n     * @param level the log level\n     * @param args extra args to be logged\n     */\n    logMessage(level, ...args) {\n        if (!this.config) {\n            return;\n        }\n        if (this.config.log === 'debug') {\n            console.log(`[AngularTagCloudModule ${level}]`, ...args);\n        }\n        else if (this.config.log === 'warn' && level === 'warn') {\n            console.warn(`[AngularTagCloudModule ${level}]`, ...args);\n        }\n    }\n}\nTagCloudComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nTagCloudComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.5\", type: TagCloudComponent, selector: \"angular-tag-cloud, ng-tag-cloud, ngtc\", inputs: { data: \"data\", width: \"width\", height: \"height\", step: \"step\", overflow: \"overflow\", strict: \"strict\", zoomOnHover: \"zoomOnHover\", realignOnResize: \"realignOnResize\", randomizeAngle: \"randomizeAngle\", background: \"background\", font: \"font\", delay: \"delay\", config: \"config\", log: \"log\" }, outputs: { clicked: \"clicked\", dataChanges: \"dataChanges\", afterInit: \"afterInit\", afterChecked: \"afterChecked\" }, host: { listeners: { \"window:resize\": \"onResize($event)\" } }, usesOnChanges: true, ngImport: i0, template: '', isInline: true, styles: [\":host{font-family:\\\"Helvetica\\\",\\\"Arial\\\",sans-serif;font-size:10px;line-height:normal;color:#09f;overflow:hidden;position:relative;display:block}span{padding:0}span.w10{font-size:550%}span.w9{font-size:500%}span.w8{font-size:450%}span.w7{font-size:400%}span.w6{font-size:350%}span.w5{font-size:300%}span.w4{font-size:250%}span.w3{font-size:200%}span.w2{font-size:150%}span.w1{font-size:100%}a:hover{color:#0df}a:hover{color:#0cf}span.w10{color:#0cf}span.w9{color:#0cf}span.w8{color:#0cf}span.w7{color:#39d}span.w6{color:#90c5f0}span.w5{color:#90a0dd}span.w4{color:#90c5f0}span.w3{color:#a0ddff}span.w2{color:#9ce}span.w1{color:#aab5f0}.tooltip .tooltiptext{visibility:hidden;width:inherit;background-color:#555;color:#fff;text-align:center;border-radius:6px;padding:5px 10px;position:absolute;bottom:100%;left:0px;opacity:0;transition:opacity .3s}.tooltip .tooltiptext:after{content:\\\"\\\";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#555 transparent transparent transparent}.tooltip:hover .tooltiptext{visibility:visible;opacity:1}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular-tag-cloud, ng-tag-cloud, ngtc',\n                    template: '',\n                    styleUrls: ['./tag-cloud.component.css'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], overflow: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], zoomOnHover: [{\n                type: Input\n            }], realignOnResize: [{\n                type: Input\n            }], randomizeAngle: [{\n                type: Input\n            }], background: [{\n                type: Input\n            }], font: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], log: [{\n                type: Input\n            }], clicked: [{\n                type: Output\n            }], dataChanges: [{\n                type: Output\n            }], afterInit: [{\n                type: Output\n            }], afterChecked: [{\n                type: Output\n            }], onResize: [{\n                type: HostListener,\n                args: ['window:resize', ['$event']]\n            }] } });\n\nclass TagCloudModule {\n}\nTagCloudModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTagCloudModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudModule, declarations: [TagCloudComponent], exports: [TagCloudComponent] });\nTagCloudModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.5\", ngImport: i0, type: TagCloudModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TagCloudComponent],\n                    exports: [TagCloudComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of angular-tag-cloud-module\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TagCloudComponent, TagCloudModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}