{"ast":null,"code":"import { Authority } from \"app/config/authority.constants\";\nimport { UserRouteAccessService } from \"app/core/auth/user-route-access.service\";\nimport { Product } from \"app/entities/product/product.model\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { AddProductComponent } from \"./add-product.component\";\nimport { OverviewProductComponent } from \"./overview-product.component\";\nimport { RegisterProductComponent } from \"./register-product.component\";\nimport { UpdateProductComponent } from \"./update-product.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/product/service/product.service\";\nimport * as i2 from \"@angular/router\";\nexport let AddProductResolve = /*#__PURE__*/(() => {\n  class AddProductResolve {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['id'];\n      if (id) {\n        return this.service.find(id).pipe(flatMap(product => {\n          if (product.body) {\n            return of(product.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new Product());\n    }\n  }\n  AddProductResolve.ɵfac = function AddProductResolve_Factory(t) {\n    return new (t || AddProductResolve)(i0.ɵɵinject(i1.ProductService), i0.ɵɵinject(i2.Router));\n  };\n  AddProductResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AddProductResolve,\n    factory: AddProductResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return AddProductResolve;\n})();\nexport const RegisterProductRoute = [{\n  path: '',\n  component: RegisterProductComponent,\n  data: {\n    authorities: [Authority.SUPPLIER],\n    pageTitle: 'register-product.register-product'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: ':shopId/addProduct',\n  component: AddProductComponent,\n  data: {\n    authorities: [Authority.SUPPLIER],\n    pageTitle: 'register-product.addProduct'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: ':id/updateProduct',\n  component: UpdateProductComponent,\n  resolve: {\n    product: AddProductResolve\n  },\n  data: {\n    authorities: [Authority.SUPPLIER],\n    pageTitle: 'register-product.updateProduct'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: ':id/overviewProduct',\n  component: OverviewProductComponent,\n  data: {\n    authorities: [Authority.SUPPLIER],\n    pageTitle: 'register-product.overviewProduct'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}