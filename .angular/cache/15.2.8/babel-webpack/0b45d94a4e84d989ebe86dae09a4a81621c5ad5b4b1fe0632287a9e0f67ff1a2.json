{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getSlotListClockIdentifier } from '../slot-list-clock.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let SlotListClockService = /*#__PURE__*/(() => {\n  class SlotListClockService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/slot-list-clocks');\n    }\n    create(slotListClock) {\n      return this.http.post(this.resourceUrl, slotListClock, {\n        observe: 'response'\n      });\n    }\n    update(slotListClock) {\n      return this.http.put(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock)}`, slotListClock, {\n        observe: 'response'\n      });\n    }\n    partialUpdate(slotListClock) {\n      return this.http.patch(`${this.resourceUrl}/${getSlotListClockIdentifier(slotListClock)}`, slotListClock, {\n        observe: 'response'\n      });\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addSlotListClockToCollectionIfMissing(slotListClockCollection, ...slotListClocksToCheck) {\n      const slotListClocks = slotListClocksToCheck.filter(isPresent);\n      if (slotListClocks.length > 0) {\n        const slotListClockCollectionIdentifiers = slotListClockCollection.map(slotListClockItem => getSlotListClockIdentifier(slotListClockItem));\n        const slotListClocksToAdd = slotListClocks.filter(slotListClockItem => {\n          const slotListClockIdentifier = getSlotListClockIdentifier(slotListClockItem);\n          if (slotListClockIdentifier == null || slotListClockCollectionIdentifiers.includes(slotListClockIdentifier)) {\n            return false;\n          }\n          slotListClockCollectionIdentifiers.push(slotListClockIdentifier);\n          return true;\n        });\n        return [...slotListClocksToAdd, ...slotListClockCollection];\n      }\n      return slotListClockCollection;\n    }\n  }\n  SlotListClockService.ɵfac = function SlotListClockService_Factory(t) {\n    return new (t || SlotListClockService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  SlotListClockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SlotListClockService,\n    factory: SlotListClockService.ɵfac,\n    providedIn: 'root'\n  });\n  return SlotListClockService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}