{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getAdminFeesPriceIdentifier } from '../admin-fees-price.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class AdminFeesPriceService {\n  constructor(http, applicationConfigService) {\n    _defineProperty(this, \"http\", void 0);\n    _defineProperty(this, \"applicationConfigService\", void 0);\n    _defineProperty(this, \"resourceUrl\", this.applicationConfigService.getEndpointFor('api/admin-fees-prices'));\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  create(adminFeesPrice) {\n    return this.http.post(this.resourceUrl, adminFeesPrice, {\n      observe: 'response'\n    });\n  }\n  update(adminFeesPrice) {\n    return this.http.put(`${this.resourceUrl}/${getAdminFeesPriceIdentifier(adminFeesPrice)}`, adminFeesPrice, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(adminFeesPrice) {\n    return this.http.patch(`${this.resourceUrl}/${getAdminFeesPriceIdentifier(adminFeesPrice)}`, adminFeesPrice, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addAdminFeesPriceToCollectionIfMissing(adminFeesPriceCollection, ...adminFeesPricesToCheck) {\n    const adminFeesPrices = adminFeesPricesToCheck.filter(isPresent);\n    if (adminFeesPrices.length > 0) {\n      const adminFeesPriceCollectionIdentifiers = adminFeesPriceCollection.map(adminFeesPriceItem => getAdminFeesPriceIdentifier(adminFeesPriceItem));\n      const adminFeesPricesToAdd = adminFeesPrices.filter(adminFeesPriceItem => {\n        const adminFeesPriceIdentifier = getAdminFeesPriceIdentifier(adminFeesPriceItem);\n        if (adminFeesPriceIdentifier == null || adminFeesPriceCollectionIdentifiers.includes(adminFeesPriceIdentifier)) {\n          return false;\n        }\n        adminFeesPriceCollectionIdentifiers.push(adminFeesPriceIdentifier);\n        return true;\n      });\n      return [...adminFeesPricesToAdd, ...adminFeesPriceCollection];\n    }\n    return adminFeesPriceCollection;\n  }\n}\n_defineProperty(AdminFeesPriceService, \"\\u0275fac\", function AdminFeesPriceService_Factory(t) {\n  return new (t || AdminFeesPriceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n});\n_defineProperty(AdminFeesPriceService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminFeesPriceService,\n  factory: AdminFeesPriceService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAA0BC,2BAA2B,QAAQ,2BAA2B;;;;AAMxF,OAAM,MAAOC,qBAAqB;EAGhCC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAAA;IAAA;IAAA,qCAF5E,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,uBAAuB,CAAC;IAEvE,SAAI,GAAJF,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEvGE,MAAM,CAACC,cAA+B;IACpC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAkB,IAAI,CAACC,WAAW,EAAEF,cAAc,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACnG;EAEAC,MAAM,CAACJ,cAA+B;IACpC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAkB,GAAG,IAAI,CAACH,WAAW,IAAIT,2BAA2B,CAACO,cAAc,CAAW,EAAE,EAAEA,cAAc,EAAE;MACpIG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAG,aAAa,CAACN,cAA+B;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CACpB,GAAG,IAAI,CAACL,WAAW,IAAIT,2BAA2B,CAACO,cAAc,CAAW,EAAE,EAC9EA,cAAc,EACd;MAAEG,OAAO,EAAE;IAAU,CAAE,CACxB;EACH;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAkB,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC7F;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAoB,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EACrG;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,sCAAsC,CACpCC,wBAA2C,EAC3C,GAAGC,sBAA8D;IAEjE,MAAMC,eAAe,GAAsBD,sBAAsB,CAACE,MAAM,CAAC7B,SAAS,CAAC;IACnF,IAAI4B,eAAe,CAACE,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,mCAAmC,GAAGL,wBAAwB,CAACM,GAAG,CACtEC,kBAAkB,IAAI/B,2BAA2B,CAAC+B,kBAAkB,CAAE,CACvE;MACD,MAAMC,oBAAoB,GAAGN,eAAe,CAACC,MAAM,CAACI,kBAAkB,IAAG;QACvE,MAAME,wBAAwB,GAAGjC,2BAA2B,CAAC+B,kBAAkB,CAAC;QAChF,IAAIE,wBAAwB,IAAI,IAAI,IAAIJ,mCAAmC,CAACK,QAAQ,CAACD,wBAAwB,CAAC,EAAE;UAC9G,OAAO,KAAK;;QAEdJ,mCAAmC,CAACM,IAAI,CAACF,wBAAwB,CAAC;QAClE,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,oBAAoB,EAAE,GAAGR,wBAAwB,CAAC;;IAE/D,OAAOA,wBAAwB;EACjC;;gBAxDWvB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAAA,gBAArBA,qBAAqB;SAArBA,qBAAqB;EAAAmC,SAArBnC,qBAAqB;EAAAoC,YADR;AAAM","names":["isPresent","createRequestOption","getAdminFeesPriceIdentifier","AdminFeesPriceService","constructor","http","applicationConfigService","getEndpointFor","create","adminFeesPrice","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addAdminFeesPriceToCollectionIfMissing","adminFeesPriceCollection","adminFeesPricesToCheck","adminFeesPrices","filter","length","adminFeesPriceCollectionIdentifiers","map","adminFeesPriceItem","adminFeesPricesToAdd","adminFeesPriceIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/admin-fees-price/service/admin-fees-price.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IAdminFeesPrice, getAdminFeesPriceIdentifier } from '../admin-fees-price.model';\n\nexport type EntityResponseType = HttpResponse<IAdminFeesPrice>;\nexport type EntityArrayResponseType = HttpResponse<IAdminFeesPrice[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class AdminFeesPriceService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/admin-fees-prices');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(adminFeesPrice: IAdminFeesPrice): Observable<EntityResponseType> {\n    return this.http.post<IAdminFeesPrice>(this.resourceUrl, adminFeesPrice, { observe: 'response' });\n  }\n\n  update(adminFeesPrice: IAdminFeesPrice): Observable<EntityResponseType> {\n    return this.http.put<IAdminFeesPrice>(`${this.resourceUrl}/${getAdminFeesPriceIdentifier(adminFeesPrice) as number}`, adminFeesPrice, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(adminFeesPrice: IAdminFeesPrice): Observable<EntityResponseType> {\n    return this.http.patch<IAdminFeesPrice>(\n      `${this.resourceUrl}/${getAdminFeesPriceIdentifier(adminFeesPrice) as number}`,\n      adminFeesPrice,\n      { observe: 'response' }\n    );\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IAdminFeesPrice>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IAdminFeesPrice[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addAdminFeesPriceToCollectionIfMissing(\n    adminFeesPriceCollection: IAdminFeesPrice[],\n    ...adminFeesPricesToCheck: (IAdminFeesPrice | null | undefined)[]\n  ): IAdminFeesPrice[] {\n    const adminFeesPrices: IAdminFeesPrice[] = adminFeesPricesToCheck.filter(isPresent);\n    if (adminFeesPrices.length > 0) {\n      const adminFeesPriceCollectionIdentifiers = adminFeesPriceCollection.map(\n        adminFeesPriceItem => getAdminFeesPriceIdentifier(adminFeesPriceItem)!\n      );\n      const adminFeesPricesToAdd = adminFeesPrices.filter(adminFeesPriceItem => {\n        const adminFeesPriceIdentifier = getAdminFeesPriceIdentifier(adminFeesPriceItem);\n        if (adminFeesPriceIdentifier == null || adminFeesPriceCollectionIdentifiers.includes(adminFeesPriceIdentifier)) {\n          return false;\n        }\n        adminFeesPriceCollectionIdentifiers.push(adminFeesPriceIdentifier);\n        return true;\n      });\n      return [...adminFeesPricesToAdd, ...adminFeesPriceCollection];\n    }\n    return adminFeesPriceCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}