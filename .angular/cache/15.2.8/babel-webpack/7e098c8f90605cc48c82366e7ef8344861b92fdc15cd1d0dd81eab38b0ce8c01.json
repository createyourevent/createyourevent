{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\nimport { Contact } from '../contact.model';\nimport { EventWithContent } from 'app/core/util/event-manager.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/util/data-util.service\";\nimport * as i2 from \"app/core/util/event-manager.service\";\nimport * as i3 from \"../service/contact.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../../shared/language/translate.directive\";\nimport * as i9 from \"../../../shared/alert/alert-error.component\";\nfunction ContactUpdateComponent_div_28_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_28_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.editForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ContactUpdateComponent_div_38_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_38_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.editForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction ContactUpdateComponent_div_48_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              This field is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUpdateComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, ContactUpdateComponent_div_48_small_2_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.editForm.get(\"message\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nexport let ContactUpdateComponent = /*#__PURE__*/(() => {\n  class ContactUpdateComponent {\n    constructor(dataUtils, eventManager, contactService, activatedRoute, fb) {\n      this.dataUtils = dataUtils;\n      this.eventManager = eventManager;\n      this.contactService = contactService;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.isSaving = false;\n      this.editForm = this.fb.group({\n        id: [],\n        name: [null, [Validators.required]],\n        email: [null, [Validators.required]],\n        message: [null, [Validators.required]],\n        date: []\n      });\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        contact\n      }) => {\n        if (contact.id === undefined) {\n          const today = dayjs().startOf('day');\n          contact.date = today;\n        }\n        this.updateForm(contact);\n      });\n    }\n    byteSize(base64String) {\n      return this.dataUtils.byteSize(base64String);\n    }\n    openFile(base64String, contentType) {\n      this.dataUtils.openFile(base64String, contentType);\n    }\n    setFileData(event, field, isImage) {\n      this.dataUtils.loadFileToForm(event, this.editForm, field, isImage).subscribe({\n        error: err => this.eventManager.broadcast(new EventWithContent('createyoureventApp.error', {\n          ...err,\n          key: 'error.file.' + err.key\n        }))\n      });\n    }\n    previousState() {\n      window.history.back();\n    }\n    save() {\n      this.isSaving = true;\n      const contact = this.createFromForm();\n      if (contact.id !== undefined) {\n        this.subscribeToSaveResponse(this.contactService.update(contact));\n      } else {\n        this.subscribeToSaveResponse(this.contactService.create(contact));\n      }\n    }\n    subscribeToSaveResponse(result) {\n      result.pipe(finalize(() => this.onSaveFinalize())).subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n    }\n    onSaveSuccess() {\n      this.previousState();\n    }\n    onSaveError() {\n      // Api for inheritance.\n    }\n    onSaveFinalize() {\n      this.isSaving = false;\n    }\n    updateForm(contact) {\n      this.editForm.patchValue({\n        id: contact.id,\n        name: contact.name,\n        email: contact.email,\n        message: contact.message,\n        date: contact.date ? contact.date.format(DATE_TIME_FORMAT) : null\n      });\n    }\n    createFromForm() {\n      return {\n        ...new Contact(),\n        id: this.editForm.get(['id']).value,\n        name: this.editForm.get(['name']).value,\n        email: this.editForm.get(['email']).value,\n        message: this.editForm.get(['message']).value,\n        date: this.editForm.get(['date']).value ? dayjs(this.editForm.get(['date']).value, DATE_TIME_FORMAT) : undefined\n      };\n    }\n  }\n  ContactUpdateComponent.ɵfac = function ContactUpdateComponent_Factory(t) {\n    return new (t || ContactUpdateComponent)(i0.ɵɵdirectiveInject(i1.DataUtils), i0.ɵɵdirectiveInject(i2.EventManager), i0.ɵɵdirectiveInject(i3.ContactService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder));\n  };\n  ContactUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactUpdateComponent,\n    selectors: [[\"jhi-contact-update\"]],\n    decls: 85,\n    vars: 7,\n    consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-contact-heading\", \"data-cy\", \"ContactCreateUpdateHeading\", \"jhiTranslate\", \"createyoureventApp.contact.home.createOrEditLabel\"], [1, \"form-group\", 3, \"hidden\"], [\"jhiTranslate\", \"global.field.id\", \"for\", \"field_id\", 1, \"form-control-label\"], [\"type\", \"number\", \"name\", \"id\", \"id\", \"field_id\", \"data-cy\", \"id\", \"formControlName\", \"id\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.contact.name\", \"for\", \"field_name\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"field_name\", \"data-cy\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [4, \"ngIf\"], [\"jhiTranslate\", \"createyoureventApp.contact.email\", \"for\", \"field_email\", 1, \"form-control-label\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"field_email\", \"data-cy\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"jhiTranslate\", \"createyoureventApp.contact.message\", \"for\", \"field_message\", 1, \"form-control-label\"], [\"name\", \"message\", \"id\", \"field_message\", \"data-cy\", \"message\", \"formControlName\", \"message\", 1, \"form-control\"], [\"jhiTranslate\", \"createyoureventApp.contact.date\", \"for\", \"field_date\", 1, \"form-control-label\"], [1, \"d-flex\"], [\"id\", \"field_date\", \"data-cy\", \"date\", \"type\", \"datetime-local\", \"name\", \"date\", \"formControlName\", \"date\", \"placeholder\", \"YYYY-MM-DD HH:mm\", 1, \"form-control\"], [\"type\", \"button\", \"id\", \"cancel-save\", \"data-cy\", \"entityCreateCancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", \"data-cy\", \"entityCreateSaveButton\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"entity.validation.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"entity.validation.required\", 1, \"form-text\", \"text-danger\"]],\n    template: function ContactUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n    \");\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ContactUpdateComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(5, \"\\n      \");\n        i0.ɵɵelementStart(6, \"h2\", 3);\n        i0.ɵɵtext(7, \"\\n        Create or edit a Contact\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\n\\n      \");\n        i0.ɵɵelementStart(9, \"div\");\n        i0.ɵɵtext(10, \"\\n        \");\n        i0.ɵɵelement(11, \"jhi-alert-error\");\n        i0.ɵɵtext(12, \"\\n\\n        \");\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵtext(14, \"\\n          \");\n        i0.ɵɵelementStart(15, \"label\", 5);\n        i0.ɵɵtext(16, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \"\\n          \");\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵtext(19, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n\\n        \");\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵtext(22, \"\\n          \");\n        i0.ɵɵelementStart(23, \"label\", 8);\n        i0.ɵɵtext(24, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\n          \");\n        i0.ɵɵelement(26, \"input\", 9);\n        i0.ɵɵtext(27, \"\\n          \");\n        i0.ɵɵtemplate(28, ContactUpdateComponent_div_28_Template, 4, 1, \"div\", 10);\n        i0.ɵɵtext(29, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \"\\n\\n        \");\n        i0.ɵɵelementStart(31, \"div\", 7);\n        i0.ɵɵtext(32, \"\\n          \");\n        i0.ɵɵelementStart(33, \"label\", 11);\n        i0.ɵɵtext(34, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \"\\n          \");\n        i0.ɵɵelement(36, \"input\", 12);\n        i0.ɵɵtext(37, \"\\n          \");\n        i0.ɵɵtemplate(38, ContactUpdateComponent_div_38_Template, 4, 1, \"div\", 10);\n        i0.ɵɵtext(39, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \"\\n\\n        \");\n        i0.ɵɵelementStart(41, \"div\", 7);\n        i0.ɵɵtext(42, \"\\n          \");\n        i0.ɵɵelementStart(43, \"label\", 13);\n        i0.ɵɵtext(44, \"Message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(45, \"\\n          \");\n        i0.ɵɵelement(46, \"textarea\", 14);\n        i0.ɵɵtext(47, \"\\n          \");\n        i0.ɵɵtemplate(48, ContactUpdateComponent_div_48_Template, 4, 1, \"div\", 10);\n        i0.ɵɵtext(49, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(50, \"\\n\\n        \");\n        i0.ɵɵelementStart(51, \"div\", 7);\n        i0.ɵɵtext(52, \"\\n          \");\n        i0.ɵɵelementStart(53, \"label\", 15);\n        i0.ɵɵtext(54, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(55, \"\\n          \");\n        i0.ɵɵelementStart(56, \"div\", 16);\n        i0.ɵɵtext(57, \"\\n            \");\n        i0.ɵɵelement(58, \"input\", 17);\n        i0.ɵɵtext(59, \"\\n          \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(60, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(61, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(62, \"\\n\\n      \");\n        i0.ɵɵelementStart(63, \"div\");\n        i0.ɵɵtext(64, \"\\n        \");\n        i0.ɵɵelementStart(65, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function ContactUpdateComponent_Template_button_click_65_listener() {\n          return ctx.previousState();\n        });\n        i0.ɵɵtext(66, \"\\n          \");\n        i0.ɵɵelement(67, \"fa-icon\", 19);\n        i0.ɵɵtext(68, \"\\u00A0\");\n        i0.ɵɵelementStart(69, \"span\", 20);\n        i0.ɵɵtext(70, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(71, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(72, \"\\n\\n        \");\n        i0.ɵɵelementStart(73, \"button\", 21);\n        i0.ɵɵtext(74, \"\\n          \");\n        i0.ɵɵelement(75, \"fa-icon\", 22);\n        i0.ɵɵtext(76, \"\\u00A0\");\n        i0.ɵɵelementStart(77, \"span\", 23);\n        i0.ɵɵtext(78, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(79, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(80, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(81, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(82, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(83, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(84, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"hidden\", ctx.editForm.get(\"id\").value == null);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"name\").invalid && (ctx.editForm.get(\"name\").dirty || ctx.editForm.get(\"name\").touched));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"email\").invalid && (ctx.editForm.get(\"email\").dirty || ctx.editForm.get(\"email\").touched));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.editForm.get(\"message\").invalid && (ctx.editForm.get(\"message\").dirty || ctx.editForm.get(\"message\").touched));\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n      }\n    },\n    dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.NgIf, i7.FaIconComponent, i5.FormGroupDirective, i5.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent],\n    encapsulation: 2\n  });\n  return ContactUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}