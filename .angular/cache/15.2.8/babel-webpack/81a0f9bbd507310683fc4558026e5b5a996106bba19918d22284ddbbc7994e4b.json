{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getWorksheetIdentifier } from '../worksheet.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let WorksheetService = /*#__PURE__*/(() => {\n  class WorksheetService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/worksheets');\n    }\n    create(worksheet) {\n      const copy = this.convertDateFromClient(worksheet);\n      return this.http.post(this.resourceUrl, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    update(worksheet) {\n      const copy = this.convertDateFromClient(worksheet);\n      return this.http.put(`${this.resourceUrl}/${getWorksheetIdentifier(worksheet)}`, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    partialUpdate(worksheet) {\n      const copy = this.convertDateFromClient(worksheet);\n      return this.http.patch(`${this.resourceUrl}/${getWorksheetIdentifier(worksheet)}`, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      }).pipe(map(res => this.convertDateArrayFromServer(res)));\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addWorksheetToCollectionIfMissing(worksheetCollection, ...worksheetsToCheck) {\n      const worksheets = worksheetsToCheck.filter(isPresent);\n      if (worksheets.length > 0) {\n        const worksheetCollectionIdentifiers = worksheetCollection.map(worksheetItem => getWorksheetIdentifier(worksheetItem));\n        const worksheetsToAdd = worksheets.filter(worksheetItem => {\n          const worksheetIdentifier = getWorksheetIdentifier(worksheetItem);\n          if (worksheetIdentifier == null || worksheetCollectionIdentifiers.includes(worksheetIdentifier)) {\n            return false;\n          }\n          worksheetCollectionIdentifiers.push(worksheetIdentifier);\n          return true;\n        });\n        return [...worksheetsToAdd, ...worksheetCollection];\n      }\n      return worksheetCollection;\n    }\n    convertDateFromClient(worksheet) {\n      return Object.assign({}, worksheet, {\n        start: worksheet.start?.isValid() ? worksheet.start.toJSON() : undefined,\n        end: worksheet.end?.isValid() ? worksheet.end.toJSON() : undefined\n      });\n    }\n    convertDateFromServer(res) {\n      if (res.body) {\n        res.body.start = res.body.start ? dayjs(res.body.start) : undefined;\n        res.body.end = res.body.end ? dayjs(res.body.end) : undefined;\n      }\n      return res;\n    }\n    convertDateArrayFromServer(res) {\n      if (res.body) {\n        res.body.forEach(worksheet => {\n          worksheet.start = worksheet.start ? dayjs(worksheet.start) : undefined;\n          worksheet.end = worksheet.end ? dayjs(worksheet.end) : undefined;\n        });\n      }\n      return res;\n    }\n  }\n  WorksheetService.ɵfac = function WorksheetService_Factory(t) {\n    return new (t || WorksheetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  WorksheetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorksheetService,\n    factory: WorksheetService.ɵfac,\n    providedIn: 'root'\n  });\n  return WorksheetService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}