{"ast":null,"code":"import { ThreadState } from 'app/admin/metrics/metrics.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@fortawesome/angular-fontawesome\";\nimport * as i4 from \"../../../../shared/language/translate.directive\";\nfunction MetricsModalThreadsComponent_fa_icon_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_div_54_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"samp\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"code\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \")\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelement(8, \"span\", 32);\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const st_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", st_r8.className, \".\", st_r8.methodName, \"(\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", st_r8.fileName, \":\", st_r8.lineNumber, \"\");\n  }\n}\nfunction MetricsModalThreadsComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"h6\");\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_div_54_Template_a_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const thread_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(thread_r6.showThreadDump = !thread_r6.showThreadDump);\n    });\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"span\", 19);\n    i0.ɵɵtext(10, \"Show StackTrace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementStart(12, \"span\", 20);\n    i0.ɵɵtext(13, \"Hide StackTrace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n\\n    \");\n    i0.ɵɵelementStart(17, \"div\", 21);\n    i0.ɵɵtext(18, \"\\n      \");\n    i0.ɵɵelementStart(19, \"div\", 22);\n    i0.ɵɵtext(20, \"\\n        \");\n    i0.ɵɵtemplate(21, MetricsModalThreadsComponent_div_54_div_21_Template, 10, 4, \"div\", 23);\n    i0.ɵɵtext(22, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n    \");\n    i0.ɵɵelementStart(25, \"table\", 24);\n    i0.ɵɵtext(26, \"\\n      \");\n    i0.ɵɵelementStart(27, \"caption\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n      \");\n    i0.ɵɵelementStart(30, \"thead\");\n    i0.ɵɵtext(31, \"\\n        \");\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵtext(33, \"\\n          \");\n    i0.ɵɵelementStart(34, \"th\", 25);\n    i0.ɵɵtext(35, \"Blocked Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n          \");\n    i0.ɵɵelementStart(37, \"th\", 26);\n    i0.ɵɵtext(38, \"Blocked Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n          \");\n    i0.ɵɵelementStart(40, \"th\", 27);\n    i0.ɵɵtext(41, \"Waited Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n          \");\n    i0.ɵɵelementStart(43, \"th\", 28);\n    i0.ɵɵtext(44, \"Waited Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n          \");\n    i0.ɵɵelementStart(46, \"th\", 29);\n    i0.ɵɵtext(47, \"Lock Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n      \");\n    i0.ɵɵelementStart(51, \"tbody\");\n    i0.ɵɵtext(52, \"\\n        \");\n    i0.ɵɵelementStart(53, \"tr\");\n    i0.ɵɵtext(54, \"\\n          \");\n    i0.ɵɵelementStart(55, \"td\");\n    i0.ɵɵtext(56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n          \");\n    i0.ɵɵelementStart(58, \"td\");\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(60, \"\\n          \");\n    i0.ɵɵelementStart(61, \"td\");\n    i0.ɵɵtext(62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n          \");\n    i0.ɵɵelementStart(64, \"td\");\n    i0.ɵɵtext(65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(66, \"\\n          \");\n    i0.ɵɵelementStart(67, \"td\", 30);\n    i0.ɵɵtext(68, \"\\n            \");\n    i0.ɵɵelementStart(69, \"code\");\n    i0.ɵɵtext(70);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(71, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(72, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(73, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(74, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(75, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thread_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.getBadgeClass(thread_r6.threadState));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(thread_r6.threadState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n\\n      \\u00A0\", thread_r6.threadName, \" (ID \", thread_r6.threadId, \")\\n\\n      \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"hidden\", thread_r6.showThreadDump);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"hidden\", !thread_r6.showThreadDump);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"hidden\", !thread_r6.showThreadDump);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", thread_r6.stackTrace);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\n        Threads dump:\\n        \", thread_r6.threadName, \"\\n      \");\n    i0.ɵɵadvance(28);\n    i0.ɵɵtextInterpolate(thread_r6.blockedTime);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.blockedCount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.waitedTime);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.waitedCount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", thread_r6.lockName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.lockName);\n  }\n}\nexport let MetricsModalThreadsComponent = /*#__PURE__*/(() => {\n  class MetricsModalThreadsComponent {\n    constructor(activeModal) {\n      this.activeModal = activeModal;\n      this.ThreadState = ThreadState;\n      this.threadDumpAll = 0;\n      this.threadDumpBlocked = 0;\n      this.threadDumpRunnable = 0;\n      this.threadDumpTimedWaiting = 0;\n      this.threadDumpWaiting = 0;\n    }\n    ngOnInit() {\n      this.threads?.forEach(thread => {\n        if (thread.threadState === 'RUNNABLE') {\n          this.threadDumpRunnable += 1;\n        } else if (thread.threadState === 'WAITING') {\n          this.threadDumpWaiting += 1;\n        } else if (thread.threadState === 'TIMED_WAITING') {\n          this.threadDumpTimedWaiting += 1;\n        } else if (thread.threadState === 'BLOCKED') {\n          this.threadDumpBlocked += 1;\n        }\n      });\n      this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting + this.threadDumpTimedWaiting + this.threadDumpBlocked;\n    }\n    getBadgeClass(threadState) {\n      if (threadState === 'RUNNABLE') {\n        return 'badge-success';\n      } else if (threadState === 'WAITING') {\n        return 'badge-info';\n      } else if (threadState === 'TIMED_WAITING') {\n        return 'badge-warning';\n      } else if (threadState === 'BLOCKED') {\n        return 'badge-danger';\n      }\n      return '';\n    }\n    getThreads() {\n      return this.threads?.filter(thread => !this.threadStateFilter || thread.threadState === this.threadStateFilter) ?? [];\n    }\n  }\n  MetricsModalThreadsComponent.ɵfac = function MetricsModalThreadsComponent_Factory(t) {\n    return new (t || MetricsModalThreadsComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal));\n  };\n  MetricsModalThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MetricsModalThreadsComponent,\n    selectors: [[\"jhi-thread-modal\"]],\n    decls: 63,\n    vars: 11,\n    consts: [[1, \"modal-header\"], [\"jhiTranslate\", \"metrics.jvm.threads.dump.title\", 1, \"modal-title\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [1, \"badge\", \"badge-primary\", \"hand\", 3, \"click\"], [\"icon\", \"check\", 4, \"ngIf\"], [1, \"badge\", \"badge-pill\", \"badge-default\"], [1, \"badge\", \"badge-success\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-info\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-warning\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-danger\", \"hand\", 3, \"click\"], [\"class\", \"pad\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", \"float-left\", 3, \"click\"], [\"icon\", \"check\"], [1, \"pad\"], [1, \"badge\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 3, \"click\"], [\"jhiTranslate\", \"metrics.jvm.threads.dump.show\", 3, \"hidden\"], [\"jhiTranslate\", \"metrics.jvm.threads.dump.hide\", 3, \"hidden\"], [1, \"card\", 3, \"hidden\"], [1, \"card-body\"], [\"class\", \"break\", 4, \"ngFor\", \"ngForOf\"], [1, \"table\", \"table-sm\", \"table-responsive\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.threads.dump.blockedtime\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.threads.dump.blockedcount\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.threads.dump.waitedtime\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.threads.dump.waitedcount\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.threads.dump.lockname\"], [1, \"thread-dump-modal-lock\", 3, \"title\"], [1, \"break\"], [1, \"mt-1\"]],\n    template: function MetricsModalThreadsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n  \");\n        i0.ɵɵelementStart(2, \"h4\", 1);\n        i0.ɵɵtext(3, \"Threads dump\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \"\\n\\n  \");\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_button_click_5_listener() {\n          return ctx.activeModal.dismiss();\n        });\n        i0.ɵɵtext(6, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\n\\n\");\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵtext(10, \"\\n  \");\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵtext(12, \"\\n    \");\n        i0.ɵɵelementStart(13, \"span\", 5);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_13_listener() {\n          return ctx.threadStateFilter = undefined;\n        });\n        i0.ɵɵtext(14, \"\\n      \");\n        i0.ɵɵtemplate(15, MetricsModalThreadsComponent_fa_icon_15_Template, 1, 0, \"fa-icon\", 6);\n        i0.ɵɵtext(16, \"\\n      All\\u00A0\");\n        i0.ɵɵelementStart(17, \"span\", 7);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n\\n    \");\n        i0.ɵɵelementStart(21, \"span\", 8);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_21_listener() {\n          return ctx.threadStateFilter = ctx.ThreadState.Runnable;\n        });\n        i0.ɵɵtext(22, \"\\n      \");\n        i0.ɵɵtemplate(23, MetricsModalThreadsComponent_fa_icon_23_Template, 1, 0, \"fa-icon\", 6);\n        i0.ɵɵtext(24, \"\\n      Runnable\\u00A0\");\n        i0.ɵɵelementStart(25, \"span\", 7);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(27, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \"\\n\\n    \");\n        i0.ɵɵelementStart(29, \"span\", 9);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_29_listener() {\n          return ctx.threadStateFilter = ctx.ThreadState.Waiting;\n        });\n        i0.ɵɵtext(30, \"\\n      \");\n        i0.ɵɵtemplate(31, MetricsModalThreadsComponent_fa_icon_31_Template, 1, 0, \"fa-icon\", 6);\n        i0.ɵɵtext(32, \"\\n      Waiting\\u00A0\");\n        i0.ɵɵelementStart(33, \"span\", 7);\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \"\\n\\n    \");\n        i0.ɵɵelementStart(37, \"span\", 10);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_37_listener() {\n          return ctx.threadStateFilter = ctx.ThreadState.TimedWaiting;\n        });\n        i0.ɵɵtext(38, \"\\n      \");\n        i0.ɵɵtemplate(39, MetricsModalThreadsComponent_fa_icon_39_Template, 1, 0, \"fa-icon\", 6);\n        i0.ɵɵtext(40, \"\\n      Timed Waiting\\u00A0\");\n        i0.ɵɵelementStart(41, \"span\", 7);\n        i0.ɵɵtext(42);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44, \"\\n\\n    \");\n        i0.ɵɵelementStart(45, \"span\", 11);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_45_listener() {\n          return ctx.threadStateFilter = ctx.ThreadState.Blocked;\n        });\n        i0.ɵɵtext(46, \"\\n      \");\n        i0.ɵɵtemplate(47, MetricsModalThreadsComponent_fa_icon_47_Template, 1, 0, \"fa-icon\", 6);\n        i0.ɵɵtext(48, \"\\n      Blocked\\u00A0\");\n        i0.ɵɵelementStart(49, \"span\", 7);\n        i0.ɵɵtext(50);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(51, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(52, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(53, \"\\n\\n  \");\n        i0.ɵɵtemplate(54, MetricsModalThreadsComponent_div_54_Template, 76, 15, \"div\", 12);\n        i0.ɵɵtext(55, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(56, \"\\n\");\n        i0.ɵɵelementStart(57, \"div\", 13);\n        i0.ɵɵtext(58, \"\\n  \");\n        i0.ɵɵelementStart(59, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_button_click_59_listener() {\n          return ctx.activeModal.dismiss();\n        });\n        i0.ɵɵtext(60, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(61, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(62, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === undefined);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.threadDumpAll);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Runnable);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.threadDumpRunnable);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Waiting);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.threadDumpWaiting);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.TimedWaiting);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.threadDumpTimedWaiting);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Blocked);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.threadDumpBlocked);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getThreads());\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.FaIconComponent, i4.TranslateDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MetricsModalThreadsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}