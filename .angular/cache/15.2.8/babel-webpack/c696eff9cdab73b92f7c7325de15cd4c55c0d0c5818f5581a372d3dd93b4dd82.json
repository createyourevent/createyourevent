{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"../../../../shared/language/translate.directive\";\nfunction JvmMemoryComponent_div_3_div_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n      (\", i0.ɵɵpipeBind2(5, 3, entry_r2.value.used / 1048576, \"1.0-0\"), \"M / \", i0.ɵɵpipeBind2(6, 6, entry_r2.value.max / 1048576, \"1.0-0\"), \"M)\\n    \");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 2, entry_r2.value.used / 1048576, \"1.0-0\"), \"M\");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_ngb_progressbar_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-progressbar\", 6);\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", 100 * entry_r2.value.used / entry_r2.value.max)(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(4, 4, entry_r2.value.used * 100 / entry_r2.value.max, \"1.0-0\"), \"%\");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, JvmMemoryComponent_div_3_div_2_span_2_Template, 7, 9, \"span\", 3);\n    i0.ɵɵtext(3, \"\\n\\n    \");\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\\n    \");\n    i0.ɵɵtemplate(8, JvmMemoryComponent_div_3_div_2_ng_template_8_Template, 5, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(10, \"\\n\\n    \");\n    i0.ɵɵtemplate(11, JvmMemoryComponent_div_3_div_2_ngb_progressbar_11_Template, 6, 7, \"ngb-progressbar\", 5);\n    i0.ɵɵtext(12, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r2.value.max != -1)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Committed : \", i0.ɵɵpipeBind2(6, 4, entry_r2.value.committed / 1048576, \"1.0-0\"), \"M\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", entry_r2.value.max != -1);\n  }\n}\nfunction JvmMemoryComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵtemplate(2, JvmMemoryComponent_div_3_div_2_Template, 13, 7, \"div\", 2);\n    i0.ɵɵpipe(3, \"keyvalue\");\n    i0.ɵɵtext(4, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r0.jvmMemoryMetrics));\n  }\n}\nexport let JvmMemoryComponent = /*#__PURE__*/(() => {\n  class JvmMemoryComponent {}\n  JvmMemoryComponent.ɵfac = function JvmMemoryComponent_Factory(t) {\n    return new (t || JvmMemoryComponent)();\n  };\n  JvmMemoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JvmMemoryComponent,\n    selectors: [[\"jhi-jvm-memory\"]],\n    inputs: {\n      jvmMemoryMetrics: \"jvmMemoryMetrics\",\n      updating: \"updating\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"jhiTranslate\", \"metrics.jvm.memory.title\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"other\", \"\"], [\"type\", \"success\", 3, \"value\", \"striped\", \"animated\", 4, \"ngIf\"], [\"type\", \"success\", 3, \"value\", \"striped\", \"animated\"]],\n    template: function JvmMemoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\", 0);\n        i0.ɵɵtext(1, \"Memory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵtemplate(3, JvmMemoryComponent_div_3_Template, 5, 3, \"div\", 1);\n        i0.ɵɵtext(4, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.jvmMemoryMetrics);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.NgbProgressbar, i3.TranslateDirective, i1.DecimalPipe, i1.KeyValuePipe],\n    encapsulation: 2\n  });\n  return JvmMemoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}