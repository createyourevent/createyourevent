{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/chat.service\";\nimport * as i2 from \"app/general.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/auth/has-any-authority.directive\";\nfunction ChatNotificationComponent_ng_container_0_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\", 5)(3, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function ChatNotificationComponent_ng_container_0_ng_container_9_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_count_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.openChatWindow(user_count_r2.user));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_count_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", user_count_r2.user.firstName, \" \", user_count_r2.user.lastName, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_count_r2.count);\n  }\n}\nfunction ChatNotificationComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function ChatNotificationComponent_ng_container_0_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openChatNames());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\n        \");\n    i0.ɵɵelementStart(4, \"div\", 2);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n\\n    \");\n    i0.ɵɵelementStart(7, \"div\", 3);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵtemplate(9, ChatNotificationComponent_ng_container_0_ng_container_9_Template, 9, 3, \"ng-container\", 4);\n    i0.ɵɵtext(10, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.totalMessages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isShowUsers);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.usersAndCount);\n  }\n}\nexport let ChatNotificationComponent = /*#__PURE__*/(() => {\n  class ChatNotificationComponent {\n    constructor(sharedChatService, generalService) {\n      this.sharedChatService = sharedChatService;\n      this.generalService = generalService;\n      this.isShowUsers = true;\n      this.messages = [];\n      this.users = [];\n      this.usersAndCount = [];\n      this.totalMessages = 0;\n      if (this.sharedChatService.subsVar === undefined) {\n        this.sharedChatService.subsVar = this.sharedChatService.invokeChatNotification.subscribe(() => {\n          this.loadMessages();\n        });\n      }\n    }\n    loadMessages() {\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n        this.generalService.findAllChatMessagesByMessageToAndDateSeenIsNull(this.user.id).subscribe(m => {\n          this.messages = m.body;\n          this.totalMessages = this.messages.length;\n        });\n      });\n    }\n    openChatWindow(user) {\n      this.sharedChatService.callClickName(user);\n      const uM = this.usersAndCount.find(element => element.user.id === user.id);\n      this.totalMessages -= uM.count;\n      this.usersAndCount = this.usersAndCount.filter(element => element.user.id !== user.id);\n      this.messages.forEach(element => {\n        element.dateSeen = new Date();\n        this.sharedChatService.update(element).subscribe();\n      });\n      if (this.users.length > 0) {\n        this.isShowUsers = !this.isShowUsers;\n      }\n    }\n    openChatNames() {\n      this.messages.forEach(message => {\n        this.generalService.findWidthAuthoritiesWidthId(message.messageFrom).subscribe(user => {\n          const found = this.users.find(element => element.id === message.messageFrom);\n          if (!found) {\n            this.users.push(user.body);\n            const messagesUser = this.messages.filter(element => element.messageFrom === user.body.id);\n            this.usersAndCount.push({\n              user: user.body,\n              count: messagesUser.length\n            });\n          }\n        });\n      });\n      if (this.usersAndCount.length > 0) {\n        this.isShowUsers = !this.isShowUsers;\n      }\n    }\n  }\n  ChatNotificationComponent.ɵfac = function ChatNotificationComponent_Factory(t) {\n    return new (t || ChatNotificationComponent)(i0.ɵɵdirectiveInject(i1.SharedChatService), i0.ɵɵdirectiveInject(i2.GeneralService));\n  };\n  ChatNotificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatNotificationComponent,\n    selectors: [[\"jhi-chat-notification\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"jhiHasAnyAuthority\"], [1, \"chat-notification\", 3, \"click\"], [1, \"totalMessage\"], [1, \"chat-notification-users\", 3, \"hidden\"], [4, \"ngFor\", \"ngForOf\"], [1, \"user\"], [3, \"click\"], [1, \"counterMessages\"]],\n    template: function ChatNotificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChatNotificationComponent_ng_container_0_Template, 12, 3, \"ng-container\", 0);\n        i0.ɵɵtext(1, \"\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"jhiHasAnyAuthority\", \"ROLE_USER\");\n      }\n    },\n    dependencies: [i3.NgForOf, i4.HasAnyAuthorityDirective],\n    styles: [\".chat-notification[_ngcontent-%COMP%]{background-image:url(Chat-2-75.2855ec3ebf52e53c.png);width:75px;height:75px;position:absolute;right:75px;top:175px;z-index:6}.totalMessage[_ngcontent-%COMP%]{position:absolute;right:60px;top:160px;background-color:#0ff;text-align:center;width:40px;font-weight:700;color:#fff;border-radius:20px;z-index:6;font-size:large}.chat-notification-users[_ngcontent-%COMP%]{background-color:#000;opacity:.6;width:250px;min-height:55px;position:absolute;right:37.5px;top:245px;z-index:5;border-radius:10px;border:white 1px solid;color:#fff;padding:20px 5px 5px;font-weight:700}.user[_ngcontent-%COMP%]{width:75%;float:left}.counterMessages[_ngcontent-%COMP%]{background-color:#0ff;border-radius:12.5px;width:25px;margin:0 auto;float:left;text-align:center}\"]\n  });\n  return ChatNotificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}