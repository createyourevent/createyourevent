{"ast":null,"code":"import dayjs from 'dayjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nexport let EventTickerService = /*#__PURE__*/(() => {\n  class EventTickerService {\n    constructor(generalService) {\n      this.generalService = generalService;\n    }\n    load() {\n      return this.generalService.findAllTags().pipe(map(response => {\n        const md = response.body;\n        const tags = md.filter(tag => {\n          if (tag.shop) {\n            return tag.shop.active === true && tag.shop.activeOwner === true;\n          } else if (tag.event) {\n            return tag.event.active === true && tag.event.dateStart > dayjs();\n          } else if (tag.service) {\n            return tag.service.active === true && tag.service.activeOwner === true;\n          }\n          return false;\n        }).map(tag => ({\n          text: tag.tag,\n          weight: this.getRandomInt(5, 9),\n          color: this.getRandomColor(),\n          rotate: this.getRandomInt(-30, 30),\n          link: tag.shop !== null ? '/supplier/shop/' + tag.shop.id + '/overview' : tag.event !== null ? '/events/' + tag.event.id + '/view' : '/services/' + tag.service.id + '/viewService'\n        }));\n        return tags.sort(() => Math.random() - 0.5).slice(0, 50);\n      }));\n    }\n    getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    getRandomColor() {\n      const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n      return c;\n    }\n  }\n  EventTickerService.ɵfac = function EventTickerService_Factory(t) {\n    return new (t || EventTickerService)(i0.ɵɵinject(i1.GeneralService));\n  };\n  EventTickerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventTickerService,\n    factory: EventTickerService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventTickerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}