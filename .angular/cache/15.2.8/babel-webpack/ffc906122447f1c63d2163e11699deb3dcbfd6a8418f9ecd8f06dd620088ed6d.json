{"ast":null,"code":"import * as dayjs from \"dayjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/google-geocode.service\";\nimport * as i3 from \"./../../entities/location/service/location.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../shared/language/translate.directive\";\nimport * as i6 from \"../../views/boxes/event_slider/event__slider.component\";\nimport * as i7 from \"primeng/knob\";\nexport let DistanceComponent = /*#__PURE__*/(() => {\n  class DistanceComponent {\n    constructor(generalService, googleGeocoderService, locationService) {\n      this.generalService = generalService;\n      this.googleGeocoderService = googleGeocoderService;\n      this.locationService = locationService;\n      this.eventsWithDistance = [];\n      this.distance = 0;\n    }\n    ngOnInit() {\n      this.generalService.findWidthAuthorities().subscribe(u => {\n        this.user = u.body;\n      });\n    }\n    changeSliderRadius(e) {\n      this.allEvents = [];\n      this.eventsWithDistance = [];\n      let latUser = 0;\n      let lngUser = 0;\n      let posUser;\n      const queryParam = this.user.address.replace(' ', '+');\n      this.googleGeocoderService.getFromAddress(queryParam).subscribe(res => {\n        const geocoder = res.body['results'];\n        const geometry = geocoder[0].geometry;\n        latUser = geometry.location.lat;\n        lngUser = geometry.location.lng;\n        posUser = new google.maps.LatLng(latUser, lngUser);\n        const now = dayjs();\n        this.generalService.findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter(now).subscribe(events => {\n          this.allEvents = events.body;\n          let i = 0;\n          this.allEvents.forEach(element => {\n            i++;\n            this.locationService.find(element.location.id).subscribe(l => {\n              element.location = l.body;\n              const lat = element.location.address.lat;\n              const lng = element.location.address.lng;\n              const posEvent = new google.maps.LatLng(lat, lng);\n              const distance = google.maps.geometry.spherical.computeDistanceBetween(posUser, posEvent);\n              const maxDistance = this.distance * 1000;\n              if (maxDistance > distance) {\n                this.eventsWithDistance.push(element);\n              }\n              if (i === this.allEvents.length) {\n                this.eventsWithDistance = [].concat(this.eventsWithDistance);\n              }\n            });\n          });\n        });\n      });\n    }\n  }\n  DistanceComponent.ɵfac = function DistanceComponent_Factory(t) {\n    return new (t || DistanceComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.GoogleGeocodeService), i0.ɵɵdirectiveInject(i3.LocationService));\n  };\n  DistanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DistanceComponent,\n    selectors: [[\"jhi-distance\"]],\n    decls: 29,\n    vars: 4,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\"], [\"jhiTranslate\", \"distance.distance\"], [1, \"slider\", 3, \"ngModel\", \"step\", \"ngModelChange\", \"onChange\"], [1, \"col-md-12\"], [\"orientation\", \"horizontal\", \"numVisible\", \"4\", \"numScroll\", \"1\", \"circular\", \"true\", \"verticalViewPortHeight\", \"600\", \"autoplayInterval\", \"3000\", 3, \"events\"]],\n    template: function DistanceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n\\t\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵtext(8, \"\\n            \");\n        i0.ɵɵelementStart(9, \"h5\");\n        i0.ɵɵelement(10, \"span\", 3);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \"\\n            \");\n        i0.ɵɵelementStart(13, \"p-knob\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DistanceComponent_Template_p_knob_ngModelChange_13_listener($event) {\n          return ctx.distance = $event;\n        })(\"onChange\", function DistanceComponent_Template_p_knob_onChange_13_listener($event) {\n          return ctx.changeSliderRadius($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n        \");\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵtext(17, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \"\\n\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n\\t\");\n        i0.ɵɵelementStart(20, \"div\", 1);\n        i0.ɵɵtext(21, \"\\n\\t\\t\");\n        i0.ɵɵelementStart(22, \"div\", 5);\n        i0.ɵɵtext(23, \"\\n        \");\n        i0.ɵɵelement(24, \"jhi-event-slider\", 6);\n        i0.ɵɵtext(25, \"\\n\\t\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\n\\t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(27, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \"\\n\\n\\n\\n\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate1(\"\", ctx.distance, \" Km\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.distance)(\"step\", 5);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"events\", ctx.eventsWithDistance);\n      }\n    },\n    dependencies: [i4.NgControlStatus, i4.NgModel, i5.TranslateDirective, i6.EventSliderComponent, i7.Knob],\n    styles: [\".slider[_ngcontent-%COMP%]{width:250px;margin:25px}\"]\n  });\n  return DistanceComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}