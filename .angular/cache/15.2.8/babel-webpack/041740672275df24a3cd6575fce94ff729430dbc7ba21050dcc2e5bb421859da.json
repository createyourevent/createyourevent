{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport { faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./sort.directive\";\nexport class SortByDirective {\n  constructor(sort) {\n    _defineProperty(this, \"sort\", void 0);\n    _defineProperty(this, \"jhiSortBy\", void 0);\n    _defineProperty(this, \"iconComponent\", void 0);\n    _defineProperty(this, \"sortIcon\", faSort);\n    _defineProperty(this, \"sortAscIcon\", faSortUp);\n    _defineProperty(this, \"sortDescIcon\", faSortDown);\n    _defineProperty(this, \"destroy$\", new Subject());\n    this.sort = sort;\n    sort.predicateChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n    sort.ascendingChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n  }\n  onClick() {\n    this.sort.sort(this.jhiSortBy);\n  }\n  ngAfterContentInit() {\n    this.updateIconDefinition();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  updateIconDefinition() {\n    if (this.iconComponent) {\n      let icon = this.sortIcon;\n      if (this.sort.predicate === this.jhiSortBy) {\n        icon = this.sort.ascending ? this.sortAscIcon : this.sortDescIcon;\n      }\n      this.iconComponent.icon = icon.iconName;\n      this.iconComponent.render();\n    }\n  }\n}\n_defineProperty(SortByDirective, \"\\u0275fac\", function SortByDirective_Factory(t) {\n  return new (t || SortByDirective)(i0.ɵɵdirectiveInject(i1.SortDirective, 1));\n});\n_defineProperty(SortByDirective, \"\\u0275dir\", /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: SortByDirective,\n  selectors: [[\"\", \"jhiSortBy\", \"\"]],\n  contentQueries: function SortByDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, FaIconComponent, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconComponent = _t.first);\n    }\n  },\n  hostBindings: function SortByDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SortByDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    jhiSortBy: \"jhiSortBy\"\n  }\n}));","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,MAAM,EAAEC,UAAU,EAAEC,QAAQ,QAAwB,mCAAmC;;;AAOhG,OAAM,MAAOC,eAAe;EAY1BC,YAA4BC,IAAsB;IAAA;IAAA;IAAA;IAAA,kCANvCL,MAAM;IAAA,qCACHE,QAAQ;IAAA,sCACPD,UAAU;IAAA,kCAEG,IAAIJ,OAAO,EAAQ;IAEnB,SAAI,GAAJQ,IAAI;IAC9BA,IAAI,CAACC,eAAe,CAACC,IAAI,CAACT,SAAS,CAAC,IAAI,CAACU,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACC,oBAAoB,EAAE,CAAC;IAChGL,IAAI,CAACM,eAAe,CAACJ,IAAI,CAACT,SAAS,CAAC,IAAI,CAACU,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACC,oBAAoB,EAAE,CAAC;EAClG;EAGAE,OAAO;IACL,IAAI,CAACP,IAAI,CAACA,IAAI,CAAC,IAAI,CAACQ,SAAS,CAAC;EAChC;EAEAC,kBAAkB;IAChB,IAAI,CAACJ,oBAAoB,EAAE;EAC7B;EAEAK,WAAW;IACT,IAAI,CAACP,QAAQ,CAACQ,IAAI,EAAE;IACpB,IAAI,CAACR,QAAQ,CAACS,QAAQ,EAAE;EAC1B;EAEQP,oBAAoB;IAC1B,IAAI,IAAI,CAACQ,aAAa,EAAE;MACtB,IAAIC,IAAI,GAAmB,IAAI,CAACC,QAAQ;MACxC,IAAI,IAAI,CAACf,IAAI,CAACgB,SAAS,KAAK,IAAI,CAACR,SAAS,EAAE;QAC1CM,IAAI,GAAG,IAAI,CAACd,IAAI,CAACiB,SAAS,GAAG,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,YAAY;;MAEnE,IAAI,CAACN,aAAa,CAACC,IAAI,GAAGA,IAAI,CAACM,QAAQ;MACvC,IAAI,CAACP,aAAa,CAACQ,MAAM,EAAE;;EAE/B;;gBAxCWvB,eAAe;mBAAfA,eAAe;AAAA;AAAA,gBAAfA,eAAe;QAAfA,eAAe;EAAAwB;EAAAC;IAAA;kCAGZ7B,eAAe;;;;;;;;;;eAHlB8B,aAAS;MAAA","names":["Subject","takeUntil","FaIconComponent","faSort","faSortDown","faSortUp","SortByDirective","constructor","sort","predicateChange","pipe","destroy$","subscribe","updateIconDefinition","ascendingChange","onClick","jhiSortBy","ngAfterContentInit","ngOnDestroy","next","complete","iconComponent","icon","sortIcon","predicate","ascending","sortAscIcon","sortDescIcon","iconName","render","selectors","contentQueries","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/shared/sort/sort-by.directive.ts"],"sourcesContent":["import { AfterContentInit, ContentChild, Directive, Host, HostListener, Input, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport { faSort, faSortDown, faSortUp, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\nimport { SortDirective } from './sort.directive';\n\n@Directive({\n  selector: '[jhiSortBy]',\n})\nexport class SortByDirective<T> implements AfterContentInit, OnDestroy {\n  @Input() jhiSortBy?: T;\n\n  @ContentChild(FaIconComponent, { static: true })\n  iconComponent?: FaIconComponent;\n\n  sortIcon = faSort;\n  sortAscIcon = faSortUp;\n  sortDescIcon = faSortDown;\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(@Host() private sort: SortDirective<T>) {\n    sort.predicateChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n    sort.ascendingChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n  }\n\n  @HostListener('click')\n  onClick(): void {\n    this.sort.sort(this.jhiSortBy);\n  }\n\n  ngAfterContentInit(): void {\n    this.updateIconDefinition();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateIconDefinition(): void {\n    if (this.iconComponent) {\n      let icon: IconDefinition = this.sortIcon;\n      if (this.sort.predicate === this.jhiSortBy) {\n        icon = this.sort.ascending ? this.sortAscIcon : this.sortDescIcon;\n      }\n      this.iconComponent.icon = icon.iconName;\n      this.iconComponent.render();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}