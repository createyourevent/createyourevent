{"ast":null,"code":"import { Authority } from \"app/config/authority.constants\";\nimport { UserRouteAccessService } from \"app/core/auth/user-route-access.service\";\nimport { Reservation } from \"app/entities/reservation/reservation.model\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { GuestReservationDetailComponent } from \"./guest-reservation-detail.component\";\nimport { GuestReservationComponent } from \"./guest-reservation.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/reservation/service/reservation.service\";\nimport * as i2 from \"@angular/router\";\nexport let GuestReservationResolve = /*#__PURE__*/(() => {\n  class GuestReservationResolve {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['id'];\n      if (id) {\n        return this.service.find(id).pipe(flatMap(reservation => {\n          if (reservation.body) {\n            return of(reservation.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new Reservation());\n    }\n  }\n  GuestReservationResolve.ɵfac = function GuestReservationResolve_Factory(t) {\n    return new (t || GuestReservationResolve)(i0.ɵɵinject(i1.ReservationService), i0.ɵɵinject(i2.Router));\n  };\n  GuestReservationResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GuestReservationResolve,\n    factory: GuestReservationResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return GuestReservationResolve;\n})();\nexport const GUEST_RESERVATION_ROUTE = [{\n  path: ':eventId/guest-reservation',\n  component: GuestReservationComponent,\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'routes.guest-reservation.title'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: ':id/view',\n  component: GuestReservationDetailComponent,\n  resolve: {\n    reservation: GuestReservationResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'routes.guest-reservation.detail.title'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}