{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/organisator/organisator.service\";\nexport let TotalTicketsPipe = /*#__PURE__*/(() => {\n  class TotalTicketsPipe {\n    constructor(generalService, organisatorService) {\n      this.generalService = generalService;\n      this.organisatorService = organisatorService;\n    }\n    transform(eventId, args) {\n      return new Promise((resolve, reject) => {\n        this.generalService.findEventById(eventId).subscribe(e => {\n          this.organisatorService.findReservationsByEventId(e.body.id).subscribe(r => {\n            const element = e.body;\n            element.reservations = r.body;\n            if (element.reservations === null) {\n              element.reservations = [];\n            }\n            let total = 0;\n            element.reservations.forEach(res => {\n              total += res.ticket.amount;\n            });\n            resolve(total);\n          });\n        });\n      });\n    }\n  }\n  TotalTicketsPipe.ɵfac = function TotalTicketsPipe_Factory(t) {\n    return new (t || TotalTicketsPipe)(i0.ɵɵdirectiveInject(i1.GeneralService, 16), i0.ɵɵdirectiveInject(i2.OrganisatorService, 16));\n  };\n  TotalTicketsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"totalTickets\",\n    type: TotalTicketsPipe,\n    pure: true\n  });\n  return TotalTicketsPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}