{"ast":null,"code":"import { CreateEventComponent } from './create-event.component';\nimport { OverviewComponent } from './overview.component';\nimport { FlyerComponent } from './flyer.component';\nimport { of, EMPTY } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { SelectProductsComponent } from './select-products.component';\nimport { SelectServicesComponent } from './select-services.component';\nimport { ProductsServicesComponent } from './products-services/products-services.component';\nimport { Authority } from 'app/config/authority.constants';\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { Product } from 'app/entities/product/product.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/product/service/product.service\";\nimport * as i2 from \"@angular/router\";\nexport class ProductDetailResolve {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['productId'];\n    if (id) {\n      return this.service.find(id).pipe(flatMap(product => {\n        if (product.body) {\n          return of(product.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new Product());\n  }\n}\nProductDetailResolve.ɵfac = function ProductDetailResolve_Factory(t) {\n  return new (t || ProductDetailResolve)(i0.ɵɵinject(i1.ProductService), i0.ɵɵinject(i2.Router));\n};\nProductDetailResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductDetailResolve,\n  factory: ProductDetailResolve.ɵfac,\n  providedIn: 'root'\n});\nexport const CreateEventRoute = [{\n  path: '',\n  component: CreateEventComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.create-event'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'flyer',\n  component: FlyerComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.flyer'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'products-services',\n  component: ProductsServicesComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.select-items'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'select-products',\n  component: SelectProductsComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.select-items'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'select-services',\n  component: SelectServicesComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.select-services'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'overview',\n  component: OverviewComponent,\n  data: {\n    authorities: [Authority.ORGANISATOR],\n    pageTitle: 'routes.title.overview'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":{"version":3,"mappings":"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","names":["CreateEventComponent","OverviewComponent","FlyerComponent","of","EMPTY","flatMap","SelectProductsComponent","SelectServicesComponent","ProductsServicesComponent","Authority","UserRouteAccessService","Product","ProductDetailResolve","constructor","service","router","resolve","route","id","params","find","pipe","product","body","navigate","factory","providedIn","CreateEventRoute","path","component","data","authorities","ORGANISATOR","pageTitle","canActivate"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/create-event/create-event.route.ts"],"sourcesContent":["import { Routes, Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { CreateEventComponent } from './create-event.component';\nimport { OverviewComponent } from './overview.component';\nimport { FlyerComponent } from './flyer.component';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { SelectProductsComponent } from './select-products.component';\nimport { SelectServicesComponent } from './select-services.component';\nimport { ProductsServicesComponent } from './products-services/products-services.component';\nimport { Authority } from 'app/config/authority.constants';\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { IProduct, Product } from 'app/entities/product/product.model';\nimport { ProductService } from 'app/entities/product/service/product.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductDetailResolve implements Resolve<IProduct> {\n  constructor(private service: ProductService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IProduct> | Observable<never> {\n    const id = route.params['productId'];\n    if (id) {\n      return this.service.find(id).pipe(\n        flatMap((product: HttpResponse<Product>) => {\n          if (product.body) {\n            return of(product.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Product());\n  }\n}\n\nexport const CreateEventRoute: Routes = [\n  {\n    path: '',\n    component: CreateEventComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.create-event'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'flyer',\n    component: FlyerComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.flyer'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'products-services',\n    component: ProductsServicesComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.select-items'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'select-products',\n    component: SelectProductsComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.select-items'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'select-services',\n    component: SelectServicesComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.select-services'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'overview',\n    component: OverviewComponent,\n    data: {\n      authorities: [Authority.ORGANISATOR],\n      pageTitle: 'routes.title.overview'\n    },\n    canActivate: [UserRouteAccessService]\n  }\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}