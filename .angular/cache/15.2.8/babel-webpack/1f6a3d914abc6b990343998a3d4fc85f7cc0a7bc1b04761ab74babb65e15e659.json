{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng-jhipster\";\nimport * as i3 from \"app/general.service\";\nexport let TransactionIdPipe = /*#__PURE__*/(() => {\n  class TransactionIdPipe {\n    constructor(http, languageService, generalService) {\n      this.http = http;\n      this.languageService = languageService;\n      this.generalService = generalService;\n    }\n    transform(value, type, id) {\n      return new Promise((resolve, reject) => {\n        const b = this.genround(value, 0.05);\n        const a = this.genround(b * 100, 0.05);\n        this.generalService.getTransactionIdFromDatatrans(a, type, id).subscribe(res => {\n          const z = res.body;\n          resolve(z.transactionId);\n        });\n      });\n    }\n    genround(amt, prec) {\n      var rndd = Number((Math.round(amt / prec) * prec).toFixed(2));\n      return rndd;\n    }\n  }\n  TransactionIdPipe.ɵfac = function TransactionIdPipe_Factory(t) {\n    return new (t || TransactionIdPipe)(i0.ɵɵdirectiveInject(i1.HttpClient, 16), i0.ɵɵdirectiveInject(i2.JhiLanguageService, 16), i0.ɵɵdirectiveInject(i3.GeneralService, 16));\n  };\n  TransactionIdPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"transactionId\",\n    type: TransactionIdPipe,\n    pure: true\n  });\n  return TransactionIdPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}