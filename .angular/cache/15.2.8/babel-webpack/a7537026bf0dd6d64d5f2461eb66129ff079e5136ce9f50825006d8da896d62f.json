{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport { faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./sort.directive\";\nexport let SortByDirective = /*#__PURE__*/(() => {\n  class SortByDirective {\n    constructor(sort) {\n      this.sort = sort;\n      this.sortIcon = faSort;\n      this.sortAscIcon = faSortUp;\n      this.sortDescIcon = faSortDown;\n      this.destroy$ = new Subject();\n      sort.predicateChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n      sort.ascendingChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n    }\n    onClick() {\n      this.sort.sort(this.jhiSortBy);\n    }\n    ngAfterContentInit() {\n      this.updateIconDefinition();\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    updateIconDefinition() {\n      if (this.iconComponent) {\n        let icon = this.sortIcon;\n        if (this.sort.predicate === this.jhiSortBy) {\n          icon = this.sort.ascending ? this.sortAscIcon : this.sortDescIcon;\n        }\n        this.iconComponent.icon = icon.iconName;\n        this.iconComponent.render();\n      }\n    }\n  }\n  SortByDirective.ɵfac = function SortByDirective_Factory(t) {\n    return new (t || SortByDirective)(i0.ɵɵdirectiveInject(i1.SortDirective, 1));\n  };\n  SortByDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SortByDirective,\n    selectors: [[\"\", \"jhiSortBy\", \"\"]],\n    contentQueries: function SortByDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, FaIconComponent, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconComponent = _t.first);\n      }\n    },\n    hostBindings: function SortByDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SortByDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      jhiSortBy: \"jhiSortBy\"\n    }\n  });\n  return SortByDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}