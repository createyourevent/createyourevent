{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getOrganizationStarRatingIdentifier } from '../organization-star-rating.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let OrganizationStarRatingService = /*#__PURE__*/(() => {\n  class OrganizationStarRatingService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/organization-star-ratings');\n    }\n    create(organizationStarRating) {\n      const copy = this.convertDateFromClient(organizationStarRating);\n      return this.http.post(this.resourceUrl, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    update(organizationStarRating) {\n      const copy = this.convertDateFromClient(organizationStarRating);\n      return this.http.put(`${this.resourceUrl}/${getOrganizationStarRatingIdentifier(organizationStarRating)}`, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    partialUpdate(organizationStarRating) {\n      const copy = this.convertDateFromClient(organizationStarRating);\n      return this.http.patch(`${this.resourceUrl}/${getOrganizationStarRatingIdentifier(organizationStarRating)}`, copy, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      }).pipe(map(res => this.convertDateFromServer(res)));\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      }).pipe(map(res => this.convertDateArrayFromServer(res)));\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addOrganizationStarRatingToCollectionIfMissing(organizationStarRatingCollection, ...organizationStarRatingsToCheck) {\n      const organizationStarRatings = organizationStarRatingsToCheck.filter(isPresent);\n      if (organizationStarRatings.length > 0) {\n        const organizationStarRatingCollectionIdentifiers = organizationStarRatingCollection.map(organizationStarRatingItem => getOrganizationStarRatingIdentifier(organizationStarRatingItem));\n        const organizationStarRatingsToAdd = organizationStarRatings.filter(organizationStarRatingItem => {\n          const organizationStarRatingIdentifier = getOrganizationStarRatingIdentifier(organizationStarRatingItem);\n          if (organizationStarRatingIdentifier == null || organizationStarRatingCollectionIdentifiers.includes(organizationStarRatingIdentifier)) {\n            return false;\n          }\n          organizationStarRatingCollectionIdentifiers.push(organizationStarRatingIdentifier);\n          return true;\n        });\n        return [...organizationStarRatingsToAdd, ...organizationStarRatingCollection];\n      }\n      return organizationStarRatingCollection;\n    }\n    convertDateFromClient(organizationStarRating) {\n      return Object.assign({}, organizationStarRating, {\n        date: organizationStarRating.date?.isValid() ? organizationStarRating.date.toJSON() : undefined\n      });\n    }\n    convertDateFromServer(res) {\n      if (res.body) {\n        res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      }\n      return res;\n    }\n    convertDateArrayFromServer(res) {\n      if (res.body) {\n        res.body.forEach(organizationStarRating => {\n          organizationStarRating.date = organizationStarRating.date ? dayjs(organizationStarRating.date) : undefined;\n        });\n      }\n      return res;\n    }\n  }\n  OrganizationStarRatingService.ɵfac = function OrganizationStarRatingService_Factory(t) {\n    return new (t || OrganizationStarRatingService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  OrganizationStarRatingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrganizationStarRatingService,\n    factory: OrganizationStarRatingService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrganizationStarRatingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}