{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { StripeIbanComponent, StripeCardComponent } from 'ngx-stripe';\nimport { switchMap } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"ngx-stripe\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"app/general.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"../../shared/language/translate.directive\";\nimport * as i11 from \"@angular/material/toolbar\";\nimport * as i12 from \"../datatrans_react/Datatrans.component\";\nimport * as i13 from \"app/pipes/transactionId.pipe\";\nfunction PaymentComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵelementStart(4, \"span\", 2);\n    i0.ɵɵtext(5, \"Everything is paid for. Thank you very much for that.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PaymentComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"mat-toolbar\", 4);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Datatrans Terminal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementStart(11, \"datatrans-component\", 5);\n    i0.ɵɵlistener(\"onLoaded\", function PaymentComponent_ng_container_4_Template_datatrans_component_onLoaded_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLoaded($event));\n    })(\"onOpened\", function PaymentComponent_ng_container_4_Template_datatrans_component_onOpened_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onOpened($event));\n    })(\"onCancelled\", function PaymentComponent_ng_container_4_Template_datatrans_component_onCancelled_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onCancelled($event));\n    })(\"onError\", function PaymentComponent_ng_container_4_Template_datatrans_component_onError_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onError($event));\n    });\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵpipe(13, \"transactionId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelement(15, \"hr\");\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementStart(17, \"div\", 6);\n    i0.ɵɵtext(18, \"\\n        \");\n    i0.ɵɵelementStart(19, \"div\", 7);\n    i0.ɵɵtext(20, \"\\n          \");\n    i0.ɵɵelementStart(21, \"div\", 8);\n    i0.ɵɵtext(22, \"\\n            \");\n    i0.ɵɵelement(23, \"img\", 9);\n    i0.ɵɵtext(24, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n          \");\n    i0.ɵɵelementStart(26, \"div\", 10);\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelement(28, \"img\", 11);\n    i0.ɵɵtext(29, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n          \");\n    i0.ɵɵelementStart(31, \"div\", 10);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelement(33, \"img\", 12);\n    i0.ɵɵtext(34, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"production\", ctx_r1.production)(\"transactionId\", i0.ɵɵpipeBind1(12, 2, i0.ɵɵpipeBind3(13, 4, ctx_r1.value, ctx_r1.type, ctx_r1.id)));\n  }\n}\nexport let PaymentComponent = /*#__PURE__*/(() => {\n  class PaymentComponent {\n    constructor(fb, messageService, stripeService, http, translate, generalService, route) {\n      this.fb = fb;\n      this.messageService = messageService;\n      this.stripeService = stripeService;\n      this.http = http;\n      this.translate = translate;\n      this.generalService = generalService;\n      this.route = route;\n      this.value = 0;\n      this.successEvent = new EventEmitter();\n      this.type = '';\n      this.id = -1;\n      this.ibanOptions = {\n        style: {\n          base: {\n            iconColor: '#666EE8',\n            color: '#31325F',\n            fontWeight: '300',\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSize: '18px',\n            '::placeholder': {\n              color: '#CFD7E0'\n            }\n          }\n        }\n      };\n      this.cardOptions = {\n        style: {\n          base: {\n            iconColor: '#8118de',\n            color: '#000',\n            fontWeight: '300',\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSize: '18px'\n          }\n        }\n      };\n      this.elementsOptions = {\n        locale: 'auto'\n      };\n    }\n    ngOnChanges(changes) {\n      if (changes['value'] !== undefined && changes['value'].currentValue !== undefined) {\n        this.value = changes['value'].currentValue;\n        this.initConfig();\n      }\n    }\n    ngOnInit() {\n      const host = window.location.host;\n      if (host.startsWith('dev.')) {\n        this.production = false;\n      } else {\n        this.production = true;\n      }\n      this.ccGroup = this.fb.group({\n        name: ['', [Validators.required]]\n      });\n      this.route.queryParams.subscribe(params => {\n        this.datatransTrxId = params['datatransTrxId'];\n        if (this.datatransTrxId) {\n          this.generalService.getStatusFromTransactionIdFromDatatrans(this.datatransTrxId).subscribe(res => {\n            const z = res.body;\n            if (z.status === 'authorized' || z.status === 'settled') {\n              this.successEvent.emit(z);\n            }\n          });\n        }\n      });\n    }\n    onLoaded(e) {\n      console.log('OnLoaded');\n    }\n    onOpened(e) {\n      console.log('OnOpened');\n    }\n    onCancelled(e) {\n      console.log('OnCancelled');\n    }\n    onError(e) {\n      console.log('OnError');\n    }\n    pay() {\n      if (this.ccGroup.valid) {\n        this.createPaymentIntent(this.value * 100).pipe(switchMap(pi => this.stripeService.confirmCardPayment(pi.client_secret, {\n          payment_method: {\n            card: this.card.element,\n            billing_details: {\n              name: this.ccGroup.get('name').value\n            }\n          }\n        }))).subscribe(result => {\n          if (result.error) {\n            this.messageService.add({\n              severity: 'error',\n              summary: result.error.message,\n              detail: result.error.message\n            });\n          } else {\n            // The payment has been processed!\n            if (result.paymentIntent.status === 'succeeded') {\n              this.messageService.add({\n                severity: 'success',\n                summary: this.translate.instant('cashbox.payment-successfull'),\n                detail: this.translate.instant('cashbox.cc-form.successful.info')\n              });\n              this.ccGroup.reset();\n              this.card.element.clear();\n              this.successEvent.emit(result);\n            }\n          }\n        });\n      } else {\n        this.messageService.add({\n          severity: 'error',\n          summary: this.translate.instant('cashbox.cc-form.error'),\n          detail: this.translate.instant('cashbox.cc-form.error.info')\n        });\n      }\n    }\n    createPaymentIntent(amount) {\n      return this.http.post(`https://stripe.createyourevent.org/api/create-payment-intent`, {\n        amount: amount\n      });\n    }\n    initConfig() {\n      this.payPalConfig = {\n        currency: 'CHF',\n        clientId: 'AcFPWJ-j150ofAt93PIKeb5oCzEBv7dO1NKeaaX9oKsJJNLCcmuVEPIvn_UOf9HAiBPX2Xz1npanBgU7',\n        createOrderOnClient: data => ({\n          intent: 'CAPTURE',\n          purchase_units: [{\n            amount: {\n              currency_code: 'CHF',\n              value: '' + this.value,\n              breakdown: {\n                item_total: {\n                  currency_code: 'CHF',\n                  value: '' + this.value\n                }\n              }\n            }\n          }]\n        }),\n        advanced: {\n          commit: 'true'\n        },\n        style: {\n          label: 'paypal',\n          layout: 'vertical'\n        },\n        onApprove: (data, actions) => {\n          console.log('onApprove - transaction was approved, but not authorized', data, actions);\n          actions.order.get().then(details => {\n            console.log('onApprove - you can get full order details inside onApprove: ', details);\n          });\n        },\n        onClientAuthorization: data => {\n          console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n          this.successEvent.emit({\n            data: data\n          });\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translate.instant('cashbox.payment-successfull'),\n            detail: this.translate.instant('cashbox.cc-form.successful.info')\n          });\n        },\n        onCancel: (data, actions) => {\n          console.log('OnCancel', data, actions);\n        },\n        onError: err => {\n          console.log('OnError', err);\n        },\n        onClick: (data, actions) => {\n          console.log('onClick', data, actions);\n        }\n      };\n    }\n  }\n  PaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.StripeService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.TranslateService), i0.ɵɵdirectiveInject(i6.GeneralService), i0.ɵɵdirectiveInject(i7.ActivatedRoute));\n  };\n  PaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymentComponent,\n    selectors: [[\"jhi-payment\"]],\n    viewQuery: function PaymentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(StripeIbanComponent, 5);\n        i0.ɵɵviewQuery(StripeCardComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iban = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.card = _t.first);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      type: \"type\",\n      id: \"id\"\n    },\n    outputs: {\n      successEvent: \"successEvent\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService]), i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"jhiTranslate\", \"payment.all-paid\"], [1, \"box_white\"], [\"color\", \"secondary\", \"section-content-header\", \"\", 1, \"card-toolbar\"], [3, \"production\", \"transactionId\", \"onLoaded\", \"onOpened\", \"onCancelled\", \"onError\"], [1, \"container-fluid\"], [1, \"row\", \"logo_payment\"], [1, \"col-md-3\"], [\"src\", \"../../../content/images/payment_logo/ssl.png\"], [1, \"col-md-4\"], [\"src\", \"../../../content/images/payment_logo/postfinance.jpg\"], [\"src\", \"../../../content/images/payment_logo/visamaster.png\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p-toast\");\n        i0.ɵɵtext(1, \"\\n\");\n        i0.ɵɵtemplate(2, PaymentComponent_ng_container_2_Template, 8, 0, \"ng-container\", 0);\n        i0.ɵɵtext(3, \"\\n\");\n        i0.ɵɵtemplate(4, PaymentComponent_ng_container_4_Template, 39, 8, \"ng-container\", 0);\n        i0.ɵɵtext(5, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.value <= 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.value > 0);\n      }\n    },\n    dependencies: [i8.NgIf, i9.Toast, i10.TranslateDirective, i11.MatToolbar, i12.ReactFeelingFormComponent, i8.AsyncPipe, i13.TransactionIdPipe],\n    styles: [\".border[_ngcontent-%COMP%]{border:1px solid black}.card[_ngcontent-%COMP%]{width:280px;float:left;margin:10px}.clear[_ngcontent-%COMP%]{clear:both}.card-header[_ngcontent-%COMP%]{background-color:#00f;color:#fff;font-weight:700}.big[_ngcontent-%COMP%]{font-size:larger}.padding[_ngcontent-%COMP%]{padding:4px}.card-toolbar[_ngcontent-%COMP%]{border-radius:10px;margin-top:10px}.card-form[_ngcontent-%COMP%]{margin:15px;float:left}.card-frame[_ngcontent-%COMP%]{margin-top:10px;margin-bottom:10px;padding:5px;border:1px solid black;width:400px}.pay-button[_ngcontent-%COMP%]{width:100px}.paypal-buttons[_ngcontent-%COMP%]{margin:10px;position:relative;z-index:0}\"]\n  });\n  return PaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}