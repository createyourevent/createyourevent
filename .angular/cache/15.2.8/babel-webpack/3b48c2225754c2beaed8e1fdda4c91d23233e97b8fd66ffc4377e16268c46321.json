{"ast":null,"code":"'use strict';\n\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) : factory();\n})(function () {\n  'use strict';\n\n  /**\n   * @license\n   * Copyright Google LLC All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A `TaskTrackingZoneSpec` allows one to track all outstanding Tasks.\n   *\n   * This is useful in tests. For example to see which tasks are preventing a test from completing\n   * or an automated way of releasing all of the event listeners at the end of the test.\n   */\n  var TaskTrackingZoneSpec = /** @class */function () {\n    function TaskTrackingZoneSpec() {\n      this.name = 'TaskTrackingZone';\n      this.microTasks = [];\n      this.macroTasks = [];\n      this.eventTasks = [];\n      this.properties = {\n        'TaskTrackingZone': this\n      };\n    }\n    TaskTrackingZoneSpec.get = function () {\n      return Zone.current.get('TaskTrackingZone');\n    };\n    TaskTrackingZoneSpec.prototype.getTasksFor = function (type) {\n      switch (type) {\n        case 'microTask':\n          return this.microTasks;\n        case 'macroTask':\n          return this.macroTasks;\n        case 'eventTask':\n          return this.eventTasks;\n      }\n      throw new Error('Unknown task format: ' + type);\n    };\n    TaskTrackingZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n      task['creationLocation'] = new Error(\"Task '\".concat(task.type, \"' from '\").concat(task.source, \"'.\"));\n      var tasks = this.getTasksFor(task.type);\n      tasks.push(task);\n      return parentZoneDelegate.scheduleTask(targetZone, task);\n    };\n    TaskTrackingZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n      var tasks = this.getTasksFor(task.type);\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i] == task) {\n          tasks.splice(i, 1);\n          break;\n        }\n      }\n      return parentZoneDelegate.cancelTask(targetZone, task);\n    };\n    TaskTrackingZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n      var _a;\n      if (task.type === 'eventTask' || ((_a = task.data) === null || _a === void 0 ? void 0 : _a.isPeriodic)) return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n      var tasks = this.getTasksFor(task.type);\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i] == task) {\n          tasks.splice(i, 1);\n          break;\n        }\n      }\n      return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n    };\n    TaskTrackingZoneSpec.prototype.clearEvents = function () {\n      while (this.eventTasks.length) {\n        Zone.current.cancelTask(this.eventTasks[0]);\n      }\n    };\n    return TaskTrackingZoneSpec;\n  }();\n  // Export the class so that new instances can be created with proper\n  // constructor params.\n  Zone['TaskTrackingZoneSpec'] = TaskTrackingZoneSpec;\n});","map":{"version":3,"names":["factory","define","amd","TaskTrackingZoneSpec","name","microTasks","macroTasks","eventTasks","properties","get","Zone","current","prototype","getTasksFor","type","Error","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","concat","source","tasks","push","scheduleTask","onCancelTask","i","length","splice","cancelTask","onInvokeTask","applyThis","applyArgs","_a","data","isPeriodic","invokeTask","clearEvents"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/zone.js/dist/task-tracking.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n})((function () {\n    'use strict';\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `TaskTrackingZoneSpec` allows one to track all outstanding Tasks.\n     *\n     * This is useful in tests. For example to see which tasks are preventing a test from completing\n     * or an automated way of releasing all of the event listeners at the end of the test.\n     */\n    var TaskTrackingZoneSpec = /** @class */ (function () {\n        function TaskTrackingZoneSpec() {\n            this.name = 'TaskTrackingZone';\n            this.microTasks = [];\n            this.macroTasks = [];\n            this.eventTasks = [];\n            this.properties = { 'TaskTrackingZone': this };\n        }\n        TaskTrackingZoneSpec.get = function () {\n            return Zone.current.get('TaskTrackingZone');\n        };\n        TaskTrackingZoneSpec.prototype.getTasksFor = function (type) {\n            switch (type) {\n                case 'microTask':\n                    return this.microTasks;\n                case 'macroTask':\n                    return this.macroTasks;\n                case 'eventTask':\n                    return this.eventTasks;\n            }\n            throw new Error('Unknown task format: ' + type);\n        };\n        TaskTrackingZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            task['creationLocation'] = new Error(\"Task '\".concat(task.type, \"' from '\").concat(task.source, \"'.\"));\n            var tasks = this.getTasksFor(task.type);\n            tasks.push(task);\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n            var _a;\n            if (task.type === 'eventTask' || ((_a = task.data) === null || _a === void 0 ? void 0 : _a.isPeriodic))\n                return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        };\n        TaskTrackingZoneSpec.prototype.clearEvents = function () {\n            while (this.eventTasks.length) {\n                Zone.current.cancelTask(this.eventTasks[0]);\n            }\n        };\n        return TaskTrackingZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['TaskTrackingZoneSpec'] = TaskTrackingZoneSpec;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}