{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ValidateImageWidthHeightService = /*#__PURE__*/(() => {\n  class ValidateImageWidthHeightService {\n    constructor() {}\n    validateProductImageWidthHeight(w, h) {\n      return formGroup => {\n        const imageByte = formGroup.controls.photo.value;\n        const imageContentType = formGroup.controls.photoContentType.value;\n        const imageByte2 = formGroup.controls.photo2.value;\n        const imageContentType2 = formGroup.controls.photo2ContentType.value;\n        const imageByte3 = formGroup.controls.photo3.value;\n        const imageContentType3 = formGroup.controls.photo3ContentType.value;\n        if (!imageByte || !imageContentType) {\n          return null;\n        }\n        const img = new Image();\n        img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n        const width = img.naturalWidth;\n        const height = img.naturalHeight;\n        const img2 = new Image();\n        img2.src = 'data:' + imageContentType2 + ';base64,' + imageByte2;\n        const width2 = img2.naturalWidth;\n        const height2 = img2.naturalHeight;\n        const img3 = new Image();\n        img3.src = 'data:' + imageContentType3 + ';base64,' + imageByte3;\n        const width3 = img3.naturalWidth;\n        const height3 = img3.naturalHeight;\n        if (imageByte && !imageByte2 && !imageByte3) {\n          return width <= w && height <= h ? null : {\n            maxFileDimension: true\n          };\n        } else if (imageByte && imageByte2 && !imageByte3) {\n          return width <= w && height <= h && width2 <= w && height2 <= h ? null : {\n            maxFileDimension: true\n          };\n        } else if (imageByte && imageByte2 && imageByte3) {\n          return width <= w && height <= h && width2 <= w && height2 <= h && width3 <= w && height3 <= h ? null : {\n            maxFileDimension: true\n          };\n        }\n      };\n    }\n    validateProductImageWidthHeightPartner(w, h) {\n      return formGroup => {\n        const imageByte = formGroup.controls.logo.value;\n        const imageContentType = formGroup.controls.logoContentType.value;\n        if (!imageByte || !imageContentType) {\n          return null;\n        }\n        const img = new Image();\n        img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n        const width = img.naturalWidth;\n        const height = img.naturalHeight;\n        if (imageByte) {\n          return width <= w && height <= h ? null : {\n            maxFileDimension: true\n          };\n        }\n      };\n    }\n  }\n  ValidateImageWidthHeightService.ɵfac = function ValidateImageWidthHeightService_Factory(t) {\n    return new (t || ValidateImageWidthHeightService)();\n  };\n  ValidateImageWidthHeightService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidateImageWidthHeightService,\n    factory: ValidateImageWidthHeightService.ɵfac,\n    providedIn: 'root'\n  });\n  return ValidateImageWidthHeightService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}