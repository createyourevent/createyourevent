{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nconst _c0 = [\"ins\"];\nconst ADSENSE_TOKEN = new InjectionToken('AdsenseConfig');\nlet AdsenseComponent = /*#__PURE__*/(() => {\n  class AdsenseComponent {\n    constructor(config,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    platform) {\n      this.config = config;\n      this.platform = platform;\n      /** can be manually set if you need all ads on a page to have same id page-xxx */\n      this.adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\n      /**\n       * classes applied to the ins element\n       */\n      this.className = '';\n    }\n    ngOnInit() {\n      const config = this.config;\n      this.adClient = this.adClient ?? config.adClient;\n      this.adSlot = this.adSlot ?? config.adSlot;\n      this.adFormat = this.adFormat ?? config.adFormat ?? 'auto';\n      this.display = this.display ?? config.display ?? 'block';\n      this.width = this.width ?? config.width;\n      this.height = this.height ?? config.height;\n      this.layout = this.layout ?? config.layout;\n      this.layoutKey = this.layoutKey ?? config.layoutKey;\n      this.pageLevelAds = this.pageLevelAds ?? config.pageLevelAds;\n      this.adtest = this.adtest ?? config.adtest;\n      this.fullWidthResponsive = this.fullWidthResponsive ?? config.fullWidthResponsive;\n    }\n    ngOnDestroy() {\n      const iframe = this.ins.nativeElement.querySelector('iframe');\n      if (iframe && iframe.contentWindow) {\n        iframe.src = 'about:blank';\n        iframe.remove();\n      }\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platform)) {\n        this.push();\n      }\n    }\n    push() {\n      const p = {};\n      if (this.pageLevelAds) {\n        p.google_ad_client = this.adClient;\n        p.enable_page_level_ads = true;\n      }\n      if (window) {\n        try {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (window.adsbygoogle = window.adsbygoogle || []).push(p);\n        } catch {\n          // pass\n        }\n      }\n    }\n  }\n  AdsenseComponent.ɵfac = function AdsenseComponent_Factory(t) {\n    return new (t || AdsenseComponent)(i0.ɵɵdirectiveInject(ADSENSE_TOKEN), i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  AdsenseComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AdsenseComponent,\n    selectors: [[\"ng2-adsense\"], [\"ng-adsense\"]],\n    viewQuery: function AdsenseComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ins = _t.first);\n      }\n    },\n    inputs: {\n      adClient: \"adClient\",\n      adSlot: \"adSlot\",\n      adFormat: \"adFormat\",\n      adRegion: \"adRegion\",\n      display: \"display\",\n      width: \"width\",\n      height: \"height\",\n      layout: \"layout\",\n      layoutKey: \"layoutKey\",\n      pageLevelAds: \"pageLevelAds\",\n      adtest: \"adtest\",\n      fullWidthResponsive: \"fullWidthResponsive\",\n      className: \"className\"\n    },\n    decls: 2,\n    vars: 17,\n    consts: [[\"ins\", \"\"]],\n    template: function AdsenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ins\", null, 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMapInterpolate1(\"adsbygoogle \", ctx.className, \"\");\n        i0.ɵɵstyleProp(\"display\", ctx.display)(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n        i0.ɵɵattribute(\"data-ad-client\", ctx.adClient)(\"data-ad-slot\", ctx.adSlot)(\"data-ad-format\", ctx.adFormat)(\"data-ad-region\", ctx.adRegion)(\"data-layout\", ctx.layout)(\"data-adtest\", ctx.adtest)(\"data-layout-key\", ctx.layoutKey)(\"data-full-width-responsive\", ctx.fullWidthResponsive);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return AdsenseComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AdsenseModule = /*#__PURE__*/(() => {\n  class AdsenseModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: AdsenseModule,\n        providers: [{\n          provide: ADSENSE_TOKEN,\n          useValue: config\n        }]\n      };\n    }\n  }\n  AdsenseModule.ɵfac = function AdsenseModule_Factory(t) {\n    return new (t || AdsenseModule)();\n  };\n  AdsenseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AdsenseModule\n  });\n  AdsenseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return AdsenseModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ADSENSE_TOKEN, AdsenseComponent, AdsenseModule };\n//# sourceMappingURL=ng2-adsense.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}