{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getCouponIdentifier } from '../coupon.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let CouponService = /*#__PURE__*/(() => {\n  class CouponService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/coupons');\n    }\n    create(coupon) {\n      return this.http.post(this.resourceUrl, coupon, {\n        observe: 'response'\n      });\n    }\n    update(coupon) {\n      return this.http.put(`${this.resourceUrl}/${getCouponIdentifier(coupon)}`, coupon, {\n        observe: 'response'\n      });\n    }\n    partialUpdate(coupon) {\n      return this.http.patch(`${this.resourceUrl}/${getCouponIdentifier(coupon)}`, coupon, {\n        observe: 'response'\n      });\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addCouponToCollectionIfMissing(couponCollection, ...couponsToCheck) {\n      const coupons = couponsToCheck.filter(isPresent);\n      if (coupons.length > 0) {\n        const couponCollectionIdentifiers = couponCollection.map(couponItem => getCouponIdentifier(couponItem));\n        const couponsToAdd = coupons.filter(couponItem => {\n          const couponIdentifier = getCouponIdentifier(couponItem);\n          if (couponIdentifier == null || couponCollectionIdentifiers.includes(couponIdentifier)) {\n            return false;\n          }\n          couponCollectionIdentifiers.push(couponIdentifier);\n          return true;\n        });\n        return [...couponsToAdd, ...couponCollection];\n      }\n      return couponCollection;\n    }\n  }\n  CouponService.ɵfac = function CouponService_Factory(t) {\n    return new (t || CouponService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  CouponService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CouponService,\n    factory: CouponService.ɵfac,\n    providedIn: 'root'\n  });\n  return CouponService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}