{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"../../../../shared/language/translate.directive\";\nfunction MetricsRequestComponent_table_3_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"ngb-progressbar\", 8);\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n      \");\n    i0.ɵɵelementStart(14, \"td\", 9);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"td\", 9);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"max\", ctx_r1.requestMetrics[\"all\"].count)(\"value\", entry_r2.value.count)(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.value.count);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n        \", i0.ɵɵpipeBind2(16, 8, ctx_r1.filterNaN(entry_r2.value.mean), \"1.0-2\"), \"\\n      \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(20, 11, entry_r2.value.max, \"1.0-2\"));\n  }\n}\nfunction MetricsRequestComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"tr\");\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"th\", 3);\n    i0.ɵɵtext(7, \"Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementStart(9, \"th\", 4);\n    i0.ɵɵtext(10, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementStart(12, \"th\", 5);\n    i0.ɵɵtext(13, \"Mean\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelementStart(15, \"th\", 6);\n    i0.ɵɵtext(16, \"Max\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n  \");\n    i0.ɵɵelementStart(20, \"tbody\");\n    i0.ɵɵtext(21, \"\\n    \");\n    i0.ɵɵtemplate(22, MetricsRequestComponent_table_3_tr_22_Template, 22, 14, \"tr\", 7);\n    i0.ɵɵpipe(23, \"keyvalue\");\n    i0.ɵɵtext(24, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 1, ctx_r0.requestMetrics[\"percode\"]));\n  }\n}\nexport let MetricsRequestComponent = /*#__PURE__*/(() => {\n  class MetricsRequestComponent {\n    filterNaN(input) {\n      return isNaN(input) ? 0 : input;\n    }\n  }\n  MetricsRequestComponent.ɵfac = function MetricsRequestComponent_Factory(t) {\n    return new (t || MetricsRequestComponent)();\n  };\n  MetricsRequestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MetricsRequestComponent,\n    selectors: [[\"jhi-metrics-request\"]],\n    inputs: {\n      requestMetrics: \"requestMetrics\",\n      updating: \"updating\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"id\", \"requestMetrics\", \"jhiTranslate\", \"metrics.jvm.http.title\"], [\"class\", \"table table-striped\", \"aria-describedby\", \"requestMetrics\", 4, \"ngIf\"], [\"aria-describedby\", \"requestMetrics\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.http.table.code\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.http.table.count\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.http.table.mean\", 1, \"text-right\"], [\"scope\", \"col\", \"jhiTranslate\", \"metrics.jvm.http.table.max\", 1, \"text-right\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"success\", 3, \"max\", \"value\", \"striped\", \"animated\"], [1, \"text-right\"]],\n    template: function MetricsRequestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \"HTTP requests (time in millisecond)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵtemplate(3, MetricsRequestComponent_table_3_Template, 26, 3, \"table\", 1);\n        i0.ɵɵtext(4, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.requestMetrics);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.NgbProgressbar, i3.TranslateDirective, i1.DecimalPipe, i1.KeyValuePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MetricsRequestComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}