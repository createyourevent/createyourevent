{"ast":null,"code":"import { JhiResolvePagingParams } from 'ng-jhipster';\nimport { of, EMPTY } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { ChipsComponent } from './chips.component';\nimport { ChipsDetailComponent } from './chips-detail.component';\nimport { ChipsUpdateComponent } from './chips-update.component';\nimport { Authority } from 'app/config/authority.constants';\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { Chips } from 'app/entities/chips/chips.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./chips.service\";\nimport * as i2 from \"@angular/router\";\nexport class ChipsResolve {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(flatMap(chips => {\n        if (chips.body) {\n          return of(chips.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new Chips());\n  }\n}\nChipsResolve.ɵfac = function ChipsResolve_Factory(t) {\n  return new (t || ChipsResolve)(i0.ɵɵinject(i1.ChipsService), i0.ɵɵinject(i2.Router));\n};\nChipsResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChipsResolve,\n  factory: ChipsResolve.ɵfac,\n  providedIn: 'root'\n});\nexport const chipsRoute = [{\n  path: 'adminChips',\n  component: ChipsComponent,\n  resolve: {\n    pagingParams: JhiResolvePagingParams\n  },\n  data: {\n    authorities: [Authority.USER],\n    defaultSort: 'id,asc',\n    pageTitle: 'createyoureventApp.chips.home.title'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'adminChips/:id/view',\n  component: ChipsDetailComponent,\n  resolve: {\n    chips: ChipsResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'createyoureventApp.chips.home.title'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'adminChips/new',\n  component: ChipsUpdateComponent,\n  resolve: {\n    chips: ChipsResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'createyoureventApp.chips.home.title'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: 'adminChips/:id/edit',\n  component: ChipsUpdateComponent,\n  resolve: {\n    chips: ChipsResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'createyoureventApp.chips.home.title'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":{"version":3,"mappings":"AAGA,SAASA,sBAAsB,QAAQ,aAAa;AACpD,SAAqBC,EAAE,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AAExC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,sBAAsB,QAAQ,yCAAyC;AAChF,SAAiBC,KAAK,QAAQ,gCAAgC;;;;AAG9D,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,OAAqB,EAAUC,MAAc;IAA7C,YAAO,GAAPD,OAAO;IAAwB,WAAM,GAANC,MAAM;EAAW;EAEpEC,OAAO,CAACC,KAA6B;IACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAID,EAAE,EAAE;MACN,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAACF,EAAE,CAAC,CAACG,IAAI,CAC/BhB,OAAO,CAAEiB,KAA0B,IAAI;QACrC,IAAIA,KAAK,CAACC,IAAI,EAAE;UACd,OAAOpB,EAAE,CAACmB,KAAK,CAACC,IAAI,CAAC;SACtB,MAAM;UACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAOpB,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAEH,OAAOD,EAAE,CAAC,IAAIQ,KAAK,EAAE,CAAC;EACxB;;;mBAlBWC,YAAY;AAAA;;SAAZA,YAAY;EAAAa,SAAZb,YAAY;EAAAc,YADC;AAAM;AAsBhC,OAAO,MAAMC,UAAU,GAAW,CAChC;EACEC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEvB,cAAc;EACzBU,OAAO,EAAE;IACPc,YAAY,EAAE5B;GACf;EACD6B,IAAI,EAAE;IACJC,WAAW,EAAE,CAACvB,SAAS,CAACwB,IAAI,CAAC;IAC7BC,WAAW,EAAE,QAAQ;IACrBC,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC1B,sBAAsB;CACrC,EACD;EACEkB,IAAI,EAAE,qBAAqB;EAC3BC,SAAS,EAAEtB,oBAAoB;EAC/BS,OAAO,EAAE;IACPM,KAAK,EAAEV;GACR;EACDmB,IAAI,EAAE;IACJC,WAAW,EAAE,CAACvB,SAAS,CAACwB,IAAI,CAAC;IAC7BE,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC1B,sBAAsB;CACrC,EACD;EACEkB,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAErB,oBAAoB;EAC/BQ,OAAO,EAAE;IACPM,KAAK,EAAEV;GACR;EACDmB,IAAI,EAAE;IACJC,WAAW,EAAE,CAACvB,SAAS,CAACwB,IAAI,CAAC;IAC7BE,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC1B,sBAAsB;CACrC,EACD;EACEkB,IAAI,EAAE,qBAAqB;EAC3BC,SAAS,EAAErB,oBAAoB;EAC/BQ,OAAO,EAAE;IACPM,KAAK,EAAEV;GACR;EACDmB,IAAI,EAAE;IACJC,WAAW,EAAE,CAACvB,SAAS,CAACwB,IAAI,CAAC;IAC7BE,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC1B,sBAAsB;CACrC,CACF","names":["JhiResolvePagingParams","of","EMPTY","flatMap","ChipsComponent","ChipsDetailComponent","ChipsUpdateComponent","Authority","UserRouteAccessService","Chips","ChipsResolve","constructor","service","router","resolve","route","id","params","find","pipe","chips","body","navigate","factory","providedIn","chipsRoute","path","component","pagingParams","data","authorities","USER","defaultSort","pageTitle","canActivate"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/find-the-chips/admin-chips/chips.route.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Routes, Router } from '@angular/router';\nimport { JhiResolvePagingParams } from 'ng-jhipster';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { ChipsService } from './chips.service';\nimport { ChipsComponent } from './chips.component';\nimport { ChipsDetailComponent } from './chips-detail.component';\nimport { ChipsUpdateComponent } from './chips-update.component';\nimport { Authority } from 'app/config/authority.constants';\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { IChips, Chips } from 'app/entities/chips/chips.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ChipsResolve implements Resolve<IChips> {\n  constructor(private service: ChipsService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IChips> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        flatMap((chips: HttpResponse<Chips>) => {\n          if (chips.body) {\n            return of(chips.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Chips());\n  }\n}\n\nexport const chipsRoute: Routes = [\n  {\n    path: 'adminChips',\n    component: ChipsComponent,\n    resolve: {\n      pagingParams: JhiResolvePagingParams\n    },\n    data: {\n      authorities: [Authority.USER],\n      defaultSort: 'id,asc',\n      pageTitle: 'createyoureventApp.chips.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'adminChips/:id/view',\n    component: ChipsDetailComponent,\n    resolve: {\n      chips: ChipsResolve\n    },\n    data: {\n      authorities: [Authority.USER],\n      pageTitle: 'createyoureventApp.chips.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'adminChips/new',\n    component: ChipsUpdateComponent,\n    resolve: {\n      chips: ChipsResolve\n    },\n    data: {\n      authorities: [Authority.USER],\n      pageTitle: 'createyoureventApp.chips.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: 'adminChips/:id/edit',\n    component: ChipsUpdateComponent,\n    resolve: {\n      chips: ChipsResolve\n    },\n    data: {\n      authorities: [Authority.USER],\n      pageTitle: 'createyoureventApp.chips.home.title'\n    },\n    canActivate: [UserRouteAccessService]\n  }\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}