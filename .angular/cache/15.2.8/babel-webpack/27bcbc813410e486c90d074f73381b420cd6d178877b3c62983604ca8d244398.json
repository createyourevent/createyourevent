{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"../../../../shared/language/translate.directive\";\nfunction JvmMemoryComponent_div_3_div_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n      (\", i0.ɵɵpipeBind2(5, 3, entry_r2.value.used / 1048576, \"1.0-0\"), \"M / \", i0.ɵɵpipeBind2(6, 6, entry_r2.value.max / 1048576, \"1.0-0\"), \"M)\\n    \");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 2, entry_r2.value.used / 1048576, \"1.0-0\"), \"M\");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_ngb_progressbar_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-progressbar\", 6);\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", 100 * entry_r2.value.used / entry_r2.value.max)(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(4, 4, entry_r2.value.used * 100 / entry_r2.value.max, \"1.0-0\"), \"%\");\n  }\n}\nfunction JvmMemoryComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, JvmMemoryComponent_div_3_div_2_span_2_Template, 7, 9, \"span\", 3);\n    i0.ɵɵtext(3, \"\\n\\n    \");\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\\n    \");\n    i0.ɵɵtemplate(8, JvmMemoryComponent_div_3_div_2_ng_template_8_Template, 5, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(10, \"\\n\\n    \");\n    i0.ɵɵtemplate(11, JvmMemoryComponent_div_3_div_2_ngb_progressbar_11_Template, 6, 7, \"ngb-progressbar\", 5);\n    i0.ɵɵtext(12, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r2.value.max != -1)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Committed : \", i0.ɵɵpipeBind2(6, 4, entry_r2.value.committed / 1048576, \"1.0-0\"), \"M\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", entry_r2.value.max != -1);\n  }\n}\nfunction JvmMemoryComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵtemplate(2, JvmMemoryComponent_div_3_div_2_Template, 13, 7, \"div\", 2);\n    i0.ɵɵpipe(3, \"keyvalue\");\n    i0.ɵɵtext(4, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r0.jvmMemoryMetrics));\n  }\n}\nexport class JvmMemoryComponent {\n  constructor() {\n    /**\n     * object containing all jvm memory metrics\n     */\n    _defineProperty(this, \"jvmMemoryMetrics\", void 0);\n    /**\n     * boolean field saying if the metrics are in the process of being updated\n     */\n    _defineProperty(this, \"updating\", void 0);\n  }\n}\n_defineProperty(JvmMemoryComponent, \"\\u0275fac\", function JvmMemoryComponent_Factory(t) {\n  return new (t || JvmMemoryComponent)();\n});\n_defineProperty(JvmMemoryComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JvmMemoryComponent,\n  selectors: [[\"jhi-jvm-memory\"]],\n  inputs: {\n    jvmMemoryMetrics: \"jvmMemoryMetrics\",\n    updating: \"updating\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[\"jhiTranslate\", \"metrics.jvm.memory.title\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"other\", \"\"], [\"type\", \"success\", 3, \"value\", \"striped\", \"animated\", 4, \"ngIf\"], [\"type\", \"success\", 3, \"value\", \"striped\", \"animated\"]],\n  template: function JvmMemoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\", 0);\n      i0.ɵɵtext(1, \"Memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2, \"\\n\\n\");\n      i0.ɵɵtemplate(3, JvmMemoryComponent_div_3_Template, 5, 3, \"div\", 1);\n      i0.ɵɵtext(4, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.jvmMemoryMetrics);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.NgbProgressbar, i3.TranslateDirective, i1.DecimalPipe, i1.KeyValuePipe],\n  encapsulation: 2\n}));","map":{"version":3,"mappings":";;;;;;;IAIIA,4BAAgD;IAC9CA;IAAAA,4BAAM;IAAAA,YAAe;IAAAA,iBAAO;IAC5BA,YACF;;;IAAAA,iBAAO;;;;IAFCA,eAAe;IAAfA,kCAAe;IACrBA,eACF;IADEA,iLACF;;;;;IAKGA,4BACE;IAAMA,YAAe;IAAAA,iBAAO;IAACA,YAAmD;;IAAAA,iBAClF;;;;IADQA,eAAe;IAAfA,kCAAe;IAAQA,eAAmD;IAAnDA,6FAAmD;;;;;IAIrFA,0CAMC;IACCA;IAAAA,4BAAM;IAAAA,YAAmE;;IAAAA,iBAAO;IAClFA;IAAAA,iBAAkB;;;;IALhBA,sEAAoD;IAI9CA,eAAmE;IAAnEA,6GAAmE;;;;;IArB7EA,2BAAuD;IACrDA;IAAAA,iFAGO;IAEPA;IAAAA,2BAAK;IAAAA,YAAoE;;IAAAA,iBAAM;IAE/EA;IAAAA,gIAIC;IAEDA;IAAAA,yGAQkB;IACpBA;IAAAA,iBAAM;;;;;IAtBGA,eAA6B;IAA7BA,+CAA6B;IAK/BA,eAAoE;IAApEA,6GAAoE;IAStEA,eAA2B;IAA3BA,+CAA2B;;;;;IAhBlCA,2BAA2C;IACzCA;IAAAA,0EAuBM;;IACRA;IAAAA,iBAAM;;;;IAxBmBA,eAA8B;IAA9BA,uEAA8B;;;ACKvD,OAAM,MAAOC,kBAAkB;EAAA;IAC7B;;;IAAA;IAKA;;;IAAA;EAAA;;gBANWA,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAA,gBAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAC;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BT,6BAA4C;MAAAA,sBAAM;MAAAA,iBAAK;MAEvDA;MAAAA,mEAyBM;MACNA;;;MA1BMA,eAAmC;MAAnCA,4DAAmC","names":["i0","JvmMemoryComponent","selectors","inputs","jvmMemoryMetrics","updating","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/metrics/blocks/jvm-memory/jvm-memory.component.html","/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/metrics/blocks/jvm-memory/jvm-memory.component.ts"],"sourcesContent":["<h4 jhiTranslate=\"metrics.jvm.memory.title\">Memory</h4>\n\n<div *ngIf=\"!updating && jvmMemoryMetrics\">\n  <div *ngFor=\"let entry of jvmMemoryMetrics | keyvalue\">\n    <span *ngIf=\"entry.value.max != -1; else other\">\n      <span>{{ entry.key }}</span>\n      ({{ entry.value.used / 1048576 | number: '1.0-0' }}M / {{ entry.value.max / 1048576 | number: '1.0-0' }}M)\n    </span>\n\n    <div>Committed : {{ entry.value.committed / 1048576 | number: '1.0-0' }}M</div>\n\n    <ng-template #other\n      ><span\n        ><span>{{ entry.key }}</span> {{ entry.value.used / 1048576 | number: '1.0-0' }}M</span\n      ></ng-template\n    >\n\n    <ngb-progressbar\n      *ngIf=\"entry.value.max != -1\"\n      type=\"success\"\n      [value]=\"(100 * entry.value.used) / entry.value.max\"\n      [striped]=\"true\"\n      [animated]=\"false\"\n    >\n      <span>{{ (entry.value.used * 100) / entry.value.max | number: '1.0-0' }}%</span>\n    </ngb-progressbar>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { JvmMetrics } from 'app/admin/metrics/metrics.model';\n\n@Component({\n  selector: 'jhi-jvm-memory',\n  templateUrl: './jvm-memory.component.html',\n})\nexport class JvmMemoryComponent {\n  /**\n   * object containing all jvm memory metrics\n   */\n  @Input() jvmMemoryMetrics?: { [key: string]: JvmMetrics };\n\n  /**\n   * boolean field saying if the metrics are in the process of being updated\n   */\n  @Input() updating?: boolean;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}