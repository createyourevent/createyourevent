{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Chips } from 'app/entities/chips/chips.model';\nimport * as i0 from \"@angular/core\";\nexport let ChipComponent = /*#__PURE__*/(() => {\n  class ChipComponent {\n    constructor() {\n      this.class = 'chip';\n      this.clickChip = new EventEmitter();\n      this.left = 0;\n      this.top = 0;\n      this.color = '#ffffff';\n    }\n    ngOnInit() {}\n    click() {\n      const chip = new Chips();\n      chip.id = this.id;\n      chip.points = this.points;\n      chip.website = this.website;\n      chip.image = this.image;\n      chip.imageContentType = this.imageContentType;\n      chip.x = this.left;\n      chip.y = this.top;\n      chip.color = this.color;\n      this.clickChip.emit({\n        chip: chip\n      });\n    }\n  }\n  ChipComponent.ɵfac = function ChipComponent_Factory(t) {\n    return new (t || ChipComponent)();\n  };\n  ChipComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChipComponent,\n    selectors: [[\"jhi-chip\"]],\n    hostVars: 8,\n    hostBindings: function ChipComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.class);\n        i0.ɵɵstyleProp(\"left\", ctx.left, \"px\")(\"top\", ctx.top, \"px\")(\"color\", ctx.color);\n      }\n    },\n    outputs: {\n      clickChip: \"clickChip\"\n    },\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"container_chip\"], [3, \"click\"], [1, \"chip_img\", 3, \"src\"], [1, \"centered\"]],\n    template: function ChipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n    \");\n        i0.ɵɵelementStart(2, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function ChipComponent_Template_a_click_2_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵtext(3, \"\\n        \");\n        i0.ɵɵelement(4, \"img\", 2);\n        i0.ɵɵtext(5, \"\\n        \");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \"\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", \"data:\" + ctx.imageContentType + \";base64,\" + ctx.image, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.points);\n      }\n    },\n    styles: [\".centered[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:xx-large;font-weight:bolder}.container_chip[_ngcontent-%COMP%]{position:relative;text-align:center}\"]\n  });\n  return ChipComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}