{"ast":null,"code":"import _defineProperty from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getRideCostsIdentifier } from '../ride-costs.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class RideCostsService {\n  constructor(http, applicationConfigService) {\n    _defineProperty(this, \"http\", void 0);\n    _defineProperty(this, \"applicationConfigService\", void 0);\n    _defineProperty(this, \"resourceUrl\", this.applicationConfigService.getEndpointFor('api/ride-costs'));\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  create(rideCosts) {\n    return this.http.post(this.resourceUrl, rideCosts, {\n      observe: 'response'\n    });\n  }\n  update(rideCosts) {\n    return this.http.put(`${this.resourceUrl}/${getRideCostsIdentifier(rideCosts)}`, rideCosts, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(rideCosts) {\n    return this.http.patch(`${this.resourceUrl}/${getRideCostsIdentifier(rideCosts)}`, rideCosts, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addRideCostsToCollectionIfMissing(rideCostsCollection, ...rideCostsToCheck) {\n    const rideCosts = rideCostsToCheck.filter(isPresent);\n    if (rideCosts.length > 0) {\n      const rideCostsCollectionIdentifiers = rideCostsCollection.map(rideCostsItem => getRideCostsIdentifier(rideCostsItem));\n      const rideCostsToAdd = rideCosts.filter(rideCostsItem => {\n        const rideCostsIdentifier = getRideCostsIdentifier(rideCostsItem);\n        if (rideCostsIdentifier == null || rideCostsCollectionIdentifiers.includes(rideCostsIdentifier)) {\n          return false;\n        }\n        rideCostsCollectionIdentifiers.push(rideCostsIdentifier);\n        return true;\n      });\n      return [...rideCostsToAdd, ...rideCostsCollection];\n    }\n    return rideCostsCollection;\n  }\n}\n_defineProperty(RideCostsService, \"\\u0275fac\", function RideCostsService_Factory(t) {\n  return new (t || RideCostsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n});\n_defineProperty(RideCostsService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RideCostsService,\n  factory: RideCostsService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAqBC,sBAAsB,QAAQ,qBAAqB;;;;AAMxE,OAAM,MAAOC,gBAAgB;EAG3BC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAAA;IAAA;IAAA,qCAF5E,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAEhE,SAAI,GAAJF,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEvGE,MAAM,CAACC,SAAqB;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAa,IAAI,CAACC,WAAW,EAAEF,SAAS,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACzF;EAEAC,MAAM,CAACJ,SAAqB;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAa,GAAG,IAAI,CAACH,WAAW,IAAIT,sBAAsB,CAACO,SAAS,CAAW,EAAE,EAAEA,SAAS,EAAE;MAChHG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAG,aAAa,CAACN,SAAqB;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAAa,GAAG,IAAI,CAACL,WAAW,IAAIT,sBAAsB,CAACO,SAAS,CAAW,EAAE,EAAEA,SAAS,EAAE;MAClHG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAa,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EACxF;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAe,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EAChG;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,iCAAiC,CAC/BC,mBAAiC,EACjC,GAAGC,gBAAmD;IAEtD,MAAMlB,SAAS,GAAiBkB,gBAAgB,CAACC,MAAM,CAAC5B,SAAS,CAAC;IAClE,IAAIS,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMC,8BAA8B,GAAGJ,mBAAmB,CAACK,GAAG,CAACC,aAAa,IAAI9B,sBAAsB,CAAC8B,aAAa,CAAE,CAAC;MACvH,MAAMC,cAAc,GAAGxB,SAAS,CAACmB,MAAM,CAACI,aAAa,IAAG;QACtD,MAAME,mBAAmB,GAAGhC,sBAAsB,CAAC8B,aAAa,CAAC;QACjE,IAAIE,mBAAmB,IAAI,IAAI,IAAIJ,8BAA8B,CAACK,QAAQ,CAACD,mBAAmB,CAAC,EAAE;UAC/F,OAAO,KAAK;;QAEdJ,8BAA8B,CAACM,IAAI,CAACF,mBAAmB,CAAC;QACxD,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,cAAc,EAAE,GAAGP,mBAAmB,CAAC;;IAEpD,OAAOA,mBAAmB;EAC5B;;gBApDWvB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAA,gBAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAkC,SAAhBlC,gBAAgB;EAAAmC,YADH;AAAM","names":["isPresent","createRequestOption","getRideCostsIdentifier","RideCostsService","constructor","http","applicationConfigService","getEndpointFor","create","rideCosts","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addRideCostsToCollectionIfMissing","rideCostsCollection","rideCostsToCheck","filter","length","rideCostsCollectionIdentifiers","map","rideCostsItem","rideCostsToAdd","rideCostsIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/ride-costs/service/ride-costs.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IRideCosts, getRideCostsIdentifier } from '../ride-costs.model';\n\nexport type EntityResponseType = HttpResponse<IRideCosts>;\nexport type EntityArrayResponseType = HttpResponse<IRideCosts[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class RideCostsService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/ride-costs');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(rideCosts: IRideCosts): Observable<EntityResponseType> {\n    return this.http.post<IRideCosts>(this.resourceUrl, rideCosts, { observe: 'response' });\n  }\n\n  update(rideCosts: IRideCosts): Observable<EntityResponseType> {\n    return this.http.put<IRideCosts>(`${this.resourceUrl}/${getRideCostsIdentifier(rideCosts) as number}`, rideCosts, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(rideCosts: IRideCosts): Observable<EntityResponseType> {\n    return this.http.patch<IRideCosts>(`${this.resourceUrl}/${getRideCostsIdentifier(rideCosts) as number}`, rideCosts, {\n      observe: 'response',\n    });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IRideCosts>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IRideCosts[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addRideCostsToCollectionIfMissing(\n    rideCostsCollection: IRideCosts[],\n    ...rideCostsToCheck: (IRideCosts | null | undefined)[]\n  ): IRideCosts[] {\n    const rideCosts: IRideCosts[] = rideCostsToCheck.filter(isPresent);\n    if (rideCosts.length > 0) {\n      const rideCostsCollectionIdentifiers = rideCostsCollection.map(rideCostsItem => getRideCostsIdentifier(rideCostsItem)!);\n      const rideCostsToAdd = rideCosts.filter(rideCostsItem => {\n        const rideCostsIdentifier = getRideCostsIdentifier(rideCostsItem);\n        if (rideCostsIdentifier == null || rideCostsCollectionIdentifiers.includes(rideCostsIdentifier)) {\n          return false;\n        }\n        rideCostsCollectionIdentifiers.push(rideCostsIdentifier);\n        return true;\n      });\n      return [...rideCostsToAdd, ...rideCostsCollection];\n    }\n    return rideCostsCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}