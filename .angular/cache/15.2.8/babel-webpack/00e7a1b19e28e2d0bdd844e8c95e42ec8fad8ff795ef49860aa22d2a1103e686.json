{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../shared/language/translate.directive\";\nimport * as i4 from \"@ngx-translate/core\";\nfunction HealthModalComponent_h4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n    \", i0.ɵɵpipeBind1(2, 1, \"health.indicator.\" + ctx_r0.health.key), \"\\n  \");\n  }\n}\nfunction HealthModalComponent_div_13_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"td\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementStart(5, \"td\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const healthDetail_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(healthDetail_r3.key);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.readableValue(healthDetail_r3.value));\n  }\n}\nfunction HealthModalComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"h5\", 9);\n    i0.ɵɵtext(3, \"Properties\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n\\n    \");\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementStart(7, \"table\", 11);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"thead\");\n    i0.ɵɵtext(10, \"\\n          \");\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"th\", 12);\n    i0.ɵɵtext(14, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n            \");\n    i0.ɵɵelementStart(16, \"th\", 13);\n    i0.ɵɵtext(17, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n        \");\n    i0.ɵɵelementStart(21, \"tbody\");\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵtemplate(23, HealthModalComponent_div_13_tr_23_Template, 8, 2, \"tr\", 14);\n    i0.ɵɵpipe(24, \"keyvalue\");\n    i0.ɵɵtext(25, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(23);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(24, 1, ctx_r1.health.value.details));\n  }\n}\nexport class HealthModalComponent {\n  constructor(activeModal) {\n    this.activeModal = activeModal;\n  }\n  readableValue(value) {\n    if (this.health?.key === 'diskSpace') {\n      // Should display storage space in an human readable unit\n      const val = value / 1073741824;\n      if (val > 1) {\n        return val.toFixed(2) + ' GB';\n      } else {\n        return (value / 1048576).toFixed(2) + ' MB';\n      }\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    } else {\n      return String(value);\n    }\n  }\n  dismiss() {\n    this.activeModal.dismiss();\n  }\n}\nHealthModalComponent.ɵfac = function HealthModalComponent_Factory(t) {\n  return new (t || HealthModalComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal));\n};\nHealthModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HealthModalComponent,\n  selectors: [[\"jhi-health-modal\"]],\n  decls: 22,\n  vars: 2,\n  consts: [[1, \"modal-header\"], [\"class\", \"modal-title\", \"id\", \"showHealthLabel\", 4, \"ngIf\"], [\"aria-label\", \"Close\", \"data-dismiss\", \"modal\", \"type\", \"button\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"pad\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"data-dismiss\", \"modal\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"float-left\", 3, \"click\"], [\"id\", \"showHealthLabel\", 1, \"modal-title\"], [\"jhiTranslate\", \"health.details.properties\"], [1, \"table-responsive\"], [\"aria-describedby\", \"showHealthLabel\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\", \"jhiTranslate\", \"health.details.name\", 1, \"text-left\"], [\"scope\", \"col\", \"jhiTranslate\", \"health.details.value\", 1, \"text-left\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-left\"]],\n  template: function HealthModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵtemplate(2, HealthModalComponent_h4_2_Template, 3, 3, \"h4\", 1);\n      i0.ɵɵtext(3, \"\\n\\n  \");\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function HealthModalComponent_Template_button_click_4_listener() {\n        return ctx.dismiss();\n      });\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵelementStart(6, \"span\", 3);\n      i0.ɵɵtext(7, \"\\u00D7\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n\\n\");\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵtext(12, \"\\n  \");\n      i0.ɵɵtemplate(13, HealthModalComponent_div_13_Template, 29, 3, \"div\", 5);\n      i0.ɵɵtext(14, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n\\n\");\n      i0.ɵɵelementStart(16, \"div\", 6);\n      i0.ɵɵtext(17, \"\\n  \");\n      i0.ɵɵelementStart(18, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function HealthModalComponent_Template_button_click_18_listener() {\n        return ctx.dismiss();\n      });\n      i0.ɵɵtext(19, \"Done\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.health);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.health);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.TranslateDirective, i2.KeyValuePipe, i4.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IACEA,6BAA4D;IAC1DA,YACF;;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,sGACF;;;;;IAoBQA,0BAAkE;IAChEA;IAAAA,8BAAsB;IAAAA,YAAsB;IAAAA,iBAAK;IACjDA;IAAAA,8BAAsB;IAAAA,YAAuC;IAAAA,iBAAK;IACpEA;IAAAA,iBAAK;;;;;IAFmBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAuC;IAAvCA,iEAAuC;;;;;IAdvEA,2BAAoB;IAClBA;IAAAA,6BAA6C;IAAAA,0BAAU;IAAAA,iBAAK;IAE5DA;IAAAA,+BAA8B;IAC5BA;IAAAA,iCAAsE;IACpEA;IAAAA,6BAAO;IACLA;IAAAA,2BAAI;IACFA;IAAAA,+BAAqE;IAAAA,qBAAI;IAAAA,iBAAK;IAC9EA;IAAAA,+BAAsE;IAAAA,sBAAK;IAAAA,iBAAK;IAClFA;IAAAA,iBAAK;IACPA;IAAAA,iBAAQ;IACRA;IAAAA,8BAAO;IACLA;IAAAA,6EAGK;;IACPA;IAAAA,iBAAQ;IACVA;IAAAA,iBAAQ;IACVA;IAAAA,iBAAM;IACRA;IAAAA,iBAAM;;;;IAP+BA,gBAAmC;IAAnCA,4EAAmC;;;ACd1E,OAAM,MAAOC,oBAAoB;EAG/BC,YAAmBC,WAA2B;IAA3B,gBAAW,GAAXA,WAAW;EAAmB;EAEjDC,aAAa,CAACC,KAAU;IACtB,IAAI,IAAI,CAACC,MAAM,EAAEC,GAAG,KAAK,WAAW,EAAE;MACpC;MACA,MAAMC,GAAG,GAAGH,KAAK,GAAG,UAAU;MAC9B,IAAIG,GAAG,GAAG,CAAC,EAAE;QACX,OAAOA,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;OAC9B,MAAM;QACL,OAAO,CAACJ,KAAK,GAAG,OAAO,EAAEI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;;;IAI/C,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOK,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;KAC7B,MAAM;MACL,OAAOO,MAAM,CAACP,KAAK,CAAC;;EAExB;EAEAQ,OAAO;IACL,IAAI,CAACV,WAAW,CAACU,OAAO,EAAE;EAC5B;;;mBAzBWZ,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjClB,8BAA0B;MACxBA;MAAAA,mEAEK;MAELA;MAAAA,iCAAgG;MAApBA;QAAA,OAASmB,aAAS;MAAA,EAAC;MAC7FnB;MAAAA,+BAAyB;MAAAA,sBAAO;MAAAA,iBAAO;MACzCA;MAAAA,iBAAS;MACXA;MAAAA,iBAAM;MAENA;MAAAA,+BAA4B;MAC1BA;MAAAA,wEAmBM;MACRA;MAAAA,iBAAM;MAENA;MAAAA,+BAA0B;MACxBA;MAAAA,kCAAoG;MAApBA;QAAA,OAASmB,aAAS;MAAA,EAAC;MAACnB,qBAAI;MAAAA,iBAAS;MACnHA;MAAAA,iBAAM;MACNA;;;MAnCgDA,eAAY;MAAZA,iCAAY;MAUpDA,gBAAY;MAAZA,iCAAY","names":["i0","HealthModalComponent","constructor","activeModal","readableValue","value","health","key","val","toFixed","JSON","stringify","String","dismiss","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/health/modal/health-modal.component.html","/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/health/modal/health-modal.component.ts"],"sourcesContent":["<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"showHealthLabel\" *ngIf=\"health\">\n    {{ 'health.indicator.' + health.key | translate }}\n  </h4>\n\n  <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"dismiss()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body pad\">\n  <div *ngIf=\"health\">\n    <h5 jhiTranslate=\"health.details.properties\">Properties</h5>\n\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped\" aria-describedby=\"showHealthLabel\">\n        <thead>\n          <tr>\n            <th scope=\"col\" class=\"text-left\" jhiTranslate=\"health.details.name\">Name</th>\n            <th scope=\"col\" class=\"text-left\" jhiTranslate=\"health.details.value\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let healthDetail of health.value.details! | keyvalue\">\n            <td class=\"text-left\">{{ healthDetail.key }}</td>\n            <td class=\"text-left\">{{ readableValue(healthDetail.value) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button data-dismiss=\"modal\" class=\"btn btn-secondary float-left\" type=\"button\" (click)=\"dismiss()\">Done</button>\n</div>\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthKey, HealthDetails } from '../health.model';\n\n@Component({\n  selector: 'jhi-health-modal',\n  templateUrl: './health-modal.component.html',\n})\nexport class HealthModalComponent {\n  health?: { key: HealthKey; value: HealthDetails };\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  readableValue(value: any): string {\n    if (this.health?.key === 'diskSpace') {\n      // Should display storage space in an human readable unit\n      const val = value / 1073741824;\n      if (val > 1) {\n        return val.toFixed(2) + ' GB';\n      } else {\n        return (value / 1048576).toFixed(2) + ' MB';\n      }\n    }\n\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    } else {\n      return String(value);\n    }\n  }\n\n  dismiss(): void {\n    this.activeModal.dismiss();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}