{"ast":null,"code":"import _asyncToGenerator from \"/home/ceo/mmmm/createyourevent/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { NgxWheelComponent, TextAlignment, TextOrientation } from 'ngx-wheel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/points/points-display/points-display.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-wheel\";\nimport * as i5 from \"../../../shared/language/translate.directive\";\nimport * as i6 from \"@ngx-translate/core\";\nfunction LuckySpinComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 9)(4, \"span\", 10);\n    i0.ɵɵtext(5, \"Not enought points to play\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtext(6, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LuckySpinComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 9)(4, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function LuckySpinComponent_ng_container_23_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.turnWheel());\n    });\n    i0.ɵɵtext(5, \"Turn the wheel.\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtext(6, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LuckySpinComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 9)(4, \"button\", 12);\n    i0.ɵɵtext(5, \"Turn the wheel.\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtext(6, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let LuckySpinComponent = /*#__PURE__*/(() => {\n  class LuckySpinComponent {\n    constructor(generalService, pointsDataService) {\n      this.generalService = generalService;\n      this.pointsDataService = pointsDataService;\n      this.items = [];\n      this.numSegments = 8;\n      this.enoughtPoints = false;\n      this.turning = false;\n      this.idToLandOn = 1;\n      this.pointsToTurn = 25;\n      this.textAlignment = TextAlignment.OUTER;\n      this.textOrientation = TextOrientation.CURVED;\n      this.stake = 25;\n      this.minimumPoints_wheeloffortune = 0;\n      this.maximumPoints_wheeloffortune = 0;\n      this.commitmentPoints_wheeloffortune = 0;\n      this.segments_wheeloffortune = 0;\n    }\n    ngOnInit() {\n      this.generalService.findPropertyByKey('minimumPoints_wheeloffortune').subscribe(rt => {\n        this.minimumPoints_wheeloffortune = Number(rt.body.value);\n        this.generalService.findPropertyByKey('maximumPoints_wheeloffortune').subscribe(rw => {\n          this.maximumPoints_wheeloffortune = Number(rw.body.value);\n          this.generalService.findPropertyByKey('commitmentPoints_wheeloffortune').subscribe(rq => {\n            this.commitmentPoints_wheeloffortune = Number(rq.body.value);\n            this.generalService.findPropertyByKey('segments_wheeloffortune').subscribe(re => {\n              this.segments_wheeloffortune = Number(re.body.value);\n              this.numSegments = this.segments_wheeloffortune;\n              for (let index = 0; index < this.numSegments; index++) {\n                const item = {\n                  'id': index,\n                  'fillStyle': this.getRandomColor(),\n                  'text': '' + this.getRandomInt(this.minimumPoints_wheeloffortune, this.maximumPoints_wheeloffortune)\n                };\n                this.items.push(item);\n              }\n              this.reset();\n              this.generalService.findWidthAuthorities().subscribe(us => {\n                this.user = us.body;\n                if (this.user.points >= this.pointsToTurn) {\n                  this.enoughtPoints = true;\n                }\n              });\n            });\n          });\n        });\n      });\n    }\n    turnWheel() {\n      this.turning = true;\n      this.reset();\n      this.user.points -= this.pointsToTurn;\n      this.generalService.updateUserLoggedInAndPoints(this.user.id, this.user.loggedIn, this.user.points).subscribe(() => {\n        this.spin(this.getRandomInt(0, this.numSegments - 1));\n        this.generalService.findWidthAuthorities().subscribe(k => {\n          this.pointsDataService.changePoint(k.body.points);\n        });\n      });\n    }\n    spin(prize) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.idToLandOn = prize;\n        yield new Promise(resolve => setTimeout(resolve, 0)); // Wait here for one tick\n        _this.wheel.spin();\n      })();\n    }\n    reset() {\n      this.wheel.reset();\n    }\n    before() {\n      console.log(\"BEFOR\");\n    }\n    after() {\n      this.turning = false;\n      this.user.points += Number(this.items[this.idToLandOn].text);\n      this.generalService.updateUserLoggedInAndPoints(this.user.id, this.user.loggedIn, this.user.points).subscribe(t => {\n        this.generalService.findWidthAuthorities().subscribe(k => {\n          this.pointsDataService.changePoint(k.body.points);\n          if (k.body.points < this.commitmentPoints_wheeloffortune) {\n            this.enoughtPoints = false;\n          }\n        });\n      });\n    }\n    getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    getRandomColor() {\n      const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n      return c;\n    }\n  }\n  LuckySpinComponent.ɵfac = function LuckySpinComponent_Factory(t) {\n    return new (t || LuckySpinComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.PointsDataService));\n  };\n  LuckySpinComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LuckySpinComponent,\n    selectors: [[\"jhi-lucky-spin\"]],\n    viewQuery: function LuckySpinComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgxWheelComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wheel = _t.first);\n      }\n    },\n    decls: 27,\n    vars: 13,\n    consts: [[\"jhiTranslate\", \"luckySpin.title\", 1, \"faster-one\"], [1, \"outer\"], [1, \"display\"], [1, \"codystar\", \"size_stake\", \"margin-auto\"], [\"jhiTranslate\", \"luckySpin.stake\"], [1, \"inner\"], [\"width\", \"600\", \"height\", \"600\", \"spinDuration\", \"8\", \"pointerStrokeColor\", \"red\", \"pointerFillColor\", \"purple\", 3, \"disableSpinOnClick\", \"items\", \"innerRadius\", \"idToLandOn\", \"textAlignment\", \"textOrientation\", \"onSpinStart\", \"onSpinComplete\"], [\"wheel\", \"\"], [4, \"ngIf\"], [1, \"btn_center\"], [\"jhiTranslate\", \"luckySpin.not-enought-points\", 1, \"faster-one-family\"], [\"jhiTranslate\", \"luckySpin.turnWheel\", 1, \"btn\", 3, \"click\"], [\"jhiTranslate\", \"luckySpin.turnWheel\", 1, \"btn\"]],\n    template: function LuckySpinComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Wheel of fortune\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"h2\", 3)(6, \"span\", 4);\n        i0.ɵɵtext(7, \"Today's stake is:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(10, \"\\n\\n\");\n        i0.ɵɵelementStart(11, \"div\", 1);\n        i0.ɵɵtext(12, \"\\n    \");\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵtext(14, \"\\n        \");\n        i0.ɵɵelementStart(15, \"ngx-wheel\", 6, 7);\n        i0.ɵɵlistener(\"onSpinStart\", function LuckySpinComponent_Template_ngx_wheel_onSpinStart_15_listener() {\n          return ctx.before();\n        })(\"onSpinComplete\", function LuckySpinComponent_Template_ngx_wheel_onSpinComplete_15_listener() {\n          return ctx.after();\n        });\n        i0.ɵɵtext(17, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n\\n\\n\");\n        i0.ɵɵtemplate(21, LuckySpinComponent_ng_container_21_Template, 7, 0, \"ng-container\", 8);\n        i0.ɵɵtext(22, \"\\n\");\n        i0.ɵɵtemplate(23, LuckySpinComponent_ng_container_23_Template, 7, 0, \"ng-container\", 8);\n        i0.ɵɵtext(24, \"\\n\");\n        i0.ɵɵtemplate(25, LuckySpinComponent_ng_container_25_Template, 7, 0, \"ng-container\", 8);\n        i0.ɵɵtext(26, \"\\n\\n\\n\\n\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate2(\" \", ctx.commitmentPoints_wheeloffortune, \" \", i0.ɵɵpipeBind1(9, 11, \"luckySpin.points\"), \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disableSpinOnClick\", true)(\"items\", ctx.items)(\"innerRadius\", 50)(\"idToLandOn\", ctx.idToLandOn)(\"textAlignment\", ctx.textAlignment)(\"textOrientation\", ctx.textOrientation);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.enoughtPoints);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.enoughtPoints && !ctx.turning);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.enoughtPoints && ctx.turning);\n      }\n    },\n    dependencies: [i3.NgIf, i4.NgxWheelComponent, i5.TranslateDirective, i6.TranslatePipe],\n    styles: [\".faster-one[_ngcontent-%COMP%]{width:75%;font-family:Faster One,cursive;color:#fff;background:rgb(76,76,76);background:linear-gradient(to bottom,rgb(76,76,76) 0%,rgb(89,89,89) 12%,rgb(102,102,102) 25%,rgb(71,71,71) 39%,rgb(44,44,44) 50%,rgb(0,0,0) 51%,rgb(17,17,17) 60%,rgb(43,43,43) 76%,rgb(28,28,28) 91%,rgb(19,19,19) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#4c4c4c\\\",endColorstr=\\\"#131313\\\",GradientType=0);text-shadow:0 0 5px #fff,0 0 10px #fff,0 0 15px #fff,0 0 20px #49ff18,0 0 30px #49ff18,0 0 40px #49ff18,0 0 55px #49ff18,0 0 75px #49ff18;text-align:center;border-radius:20px;padding:10px;margin:20px auto;font-size:90px;box-shadow:#fff 0 -1px 4px,#ff0 0 -2px 10px,#ff8000 0 -10px 20px,red 0 -18px 40px,5px 5px 15px 5px #0000}.size_stacke[_ngcontent-%COMP%]{font-size:9px;background:rgb(149,149,149);background:linear-gradient(to bottom,rgb(149,149,149) 0%,rgb(13,13,13) 46%,rgb(1,1,1) 50%,rgb(10,10,10) 53%,rgb(78,78,78) 76%,rgb(56,56,56) 87%,rgb(27,27,27) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#959595\\\",endColorstr=\\\"#1b1b1b\\\",GradientType=0);font-weight:bolder;padding:4px}.faster-one-family[_ngcontent-%COMP%]{font-family:Faster One,cursive;font-size:50px}.codystar[_ngcontent-%COMP%]{font-family:\\\"Press Start 2P\\\",cursive;color:red}.display[_ngcontent-%COMP%]{background:rgb(149,149,149);background:linear-gradient(to bottom,rgb(149,149,149) 0%,rgb(13,13,13) 46%,rgb(1,1,1) 50%,rgb(10,10,10) 53%,rgb(78,78,78) 76%,rgb(56,56,56) 87%,rgb(27,27,27) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#959595\\\",endColorstr=\\\"#1b1b1b\\\",GradientType=0);border-radius:15px;border:3px solid white;box-shadow:7px -5px 10px indigo,11px -9px 10px #00f,16px -14px 10px #0f0,20px -17px 10px #ff0,24px -19px 10px #ff7f00,27px -23px 10px red,5px 5px 15px 5px #0000;width:60%;height:100px;margin:55px auto}body#tinymce[_ngcontent-%COMP%]{background:#FFFFFF}.margin-auto[_ngcontent-%COMP%]{width:100%;margin:18px auto}.outer[_ngcontent-%COMP%]{width:100%}.btn_center[_ngcontent-%COMP%]{margin:0 auto;width:625px}.inner[_ngcontent-%COMP%]{width:610px;margin:40px auto;padding:5px;background-image:url(wheeloffortune.e96c8ea88b34cfef.png);border:10px solid mediumvioletred;background-repeat:no-repeat;border-radius:45px;box-shadow:5px 5px 15px 5px #ff8080,-9px 5px 15px 5px #ffe488,-7px -5px 15px 5px #8cff85,12px -5px 15px 5px #80c7ff,12px 10px 15px 7px #e488ff,-10px 10px 15px 7px #ff616b,-10px -7px 27px 1px #8e5cff,5px 5px 15px 5px #0000}.btn[_ngcontent-%COMP%]{margin:0 auto;background:#ff0000;font-family:Faster One,cursive;background-image:linear-gradient(to bottom,#ff0000,#612a3c);border-radius:56px;box-shadow:5px 4px 7px #d9ce00;color:#fff;font-size:59px;padding:10px 20px;border:solid #501296 8px;text-decoration:none}.btn[_ngcontent-%COMP%]:hover{background:#572727;background-image:linear-gradient(to bottom,#572727,#c71212);text-decoration:none}\"]\n  });\n  return LuckySpinComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}