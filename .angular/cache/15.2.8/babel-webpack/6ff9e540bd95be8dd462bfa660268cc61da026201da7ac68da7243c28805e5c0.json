{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getSlotListOrangeIdentifier } from '../slot-list-orange.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let SlotListOrangeService = /*#__PURE__*/(() => {\n  class SlotListOrangeService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.resourceUrl = this.applicationConfigService.getEndpointFor('api/slot-list-oranges');\n    }\n    create(slotListOrange) {\n      return this.http.post(this.resourceUrl, slotListOrange, {\n        observe: 'response'\n      });\n    }\n    update(slotListOrange) {\n      return this.http.put(`${this.resourceUrl}/${getSlotListOrangeIdentifier(slotListOrange)}`, slotListOrange, {\n        observe: 'response'\n      });\n    }\n    partialUpdate(slotListOrange) {\n      return this.http.patch(`${this.resourceUrl}/${getSlotListOrangeIdentifier(slotListOrange)}`, slotListOrange, {\n        observe: 'response'\n      });\n    }\n    find(id) {\n      return this.http.get(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    query(req) {\n      const options = createRequestOption(req);\n      return this.http.get(this.resourceUrl, {\n        params: options,\n        observe: 'response'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.resourceUrl}/${id}`, {\n        observe: 'response'\n      });\n    }\n    addSlotListOrangeToCollectionIfMissing(slotListOrangeCollection, ...slotListOrangesToCheck) {\n      const slotListOranges = slotListOrangesToCheck.filter(isPresent);\n      if (slotListOranges.length > 0) {\n        const slotListOrangeCollectionIdentifiers = slotListOrangeCollection.map(slotListOrangeItem => getSlotListOrangeIdentifier(slotListOrangeItem));\n        const slotListOrangesToAdd = slotListOranges.filter(slotListOrangeItem => {\n          const slotListOrangeIdentifier = getSlotListOrangeIdentifier(slotListOrangeItem);\n          if (slotListOrangeIdentifier == null || slotListOrangeCollectionIdentifiers.includes(slotListOrangeIdentifier)) {\n            return false;\n          }\n          slotListOrangeCollectionIdentifiers.push(slotListOrangeIdentifier);\n          return true;\n        });\n        return [...slotListOrangesToAdd, ...slotListOrangeCollection];\n      }\n      return slotListOrangeCollection;\n    }\n  }\n  SlotListOrangeService.ɵfac = function SlotListOrangeService_Factory(t) {\n    return new (t || SlotListOrangeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  SlotListOrangeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SlotListOrangeService,\n    factory: SlotListOrangeService.ɵfac,\n    providedIn: 'root'\n  });\n  return SlotListOrangeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}