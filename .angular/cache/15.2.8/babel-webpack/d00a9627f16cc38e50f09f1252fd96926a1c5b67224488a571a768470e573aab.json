{"ast":null,"code":"import { MetricsModalThreadsComponent } from '../metrics-modal-threads/metrics-modal-threads.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../../../../shared/language/translate.directive\";\nimport * as i3 from \"@angular/common\";\nexport let JvmThreadsComponent = /*#__PURE__*/(() => {\n  class JvmThreadsComponent {\n    constructor(modalService) {\n      this.modalService = modalService;\n      this.threadStats = {\n        threadDumpAll: 0,\n        threadDumpRunnable: 0,\n        threadDumpTimedWaiting: 0,\n        threadDumpWaiting: 0,\n        threadDumpBlocked: 0\n      };\n    }\n    set threads(threads) {\n      this._threads = threads;\n      threads?.forEach(thread => {\n        if (thread.threadState === 'RUNNABLE') {\n          this.threadStats.threadDumpRunnable += 1;\n        } else if (thread.threadState === 'WAITING') {\n          this.threadStats.threadDumpWaiting += 1;\n        } else if (thread.threadState === 'TIMED_WAITING') {\n          this.threadStats.threadDumpTimedWaiting += 1;\n        } else if (thread.threadState === 'BLOCKED') {\n          this.threadStats.threadDumpBlocked += 1;\n        }\n      });\n      this.threadStats.threadDumpAll = this.threadStats.threadDumpRunnable + this.threadStats.threadDumpWaiting + this.threadStats.threadDumpTimedWaiting + this.threadStats.threadDumpBlocked;\n    }\n    get threads() {\n      return this._threads;\n    }\n    open() {\n      const modalRef = this.modalService.open(MetricsModalThreadsComponent);\n      modalRef.componentInstance.threads = this.threads;\n    }\n  }\n  JvmThreadsComponent.ɵfac = function JvmThreadsComponent_Factory(t) {\n    return new (t || JvmThreadsComponent)(i0.ɵɵdirectiveInject(i1.NgbModal));\n  };\n  JvmThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JvmThreadsComponent,\n    selectors: [[\"jhi-jvm-threads\"]],\n    inputs: {\n      threads: \"threads\"\n    },\n    decls: 60,\n    vars: 37,\n    consts: [[\"jhiTranslate\", \"metrics.jvm.threads.title\"], [\"jhiTranslate\", \"metrics.jvm.threads.runnable\"], [\"type\", \"success\", 3, \"value\", \"max\", \"striped\", \"animated\"], [\"jhiTranslate\", \"metrics.jvm.threads.timedwaiting\"], [\"type\", \"warning\", 3, \"value\", \"max\", \"striped\", \"animated\"], [\"jhiTranslate\", \"metrics.jvm.threads.waiting\"], [\"jhiTranslate\", \"metrics.jvm.threads.blocked\"], [\"data-toggle\", \"modal\", \"data-target\", \"#threadDump\", 1, \"hand\", \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"]],\n    template: function JvmThreadsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\", 0);\n        i0.ɵɵtext(1, \"Threads\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"\\n\\n\");\n        i0.ɵɵelementStart(3, \"span\")(4, \"span\", 1);\n        i0.ɵɵtext(5, \"Runnable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\n\\n\");\n        i0.ɵɵelementStart(8, \"ngb-progressbar\", 2);\n        i0.ɵɵtext(9, \"\\n  \");\n        i0.ɵɵelementStart(10, \"span\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n\\n\");\n        i0.ɵɵelementStart(15, \"span\")(16, \"span\", 3);\n        i0.ɵɵtext(17, \"Timed Waiting\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n\\n\");\n        i0.ɵɵelementStart(20, \"ngb-progressbar\", 4);\n        i0.ɵɵtext(21, \"\\n  \");\n        i0.ɵɵelementStart(22, \"span\");\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\n\\n\");\n        i0.ɵɵelementStart(27, \"span\")(28, \"span\", 5);\n        i0.ɵɵtext(29, \"Waiting\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31, \"\\n\\n\");\n        i0.ɵɵelementStart(32, \"ngb-progressbar\", 4);\n        i0.ɵɵtext(33, \"\\n  \");\n        i0.ɵɵelementStart(34, \"span\");\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(37, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(38, \"\\n\\n\");\n        i0.ɵɵelementStart(39, \"span\")(40, \"span\", 6);\n        i0.ɵɵtext(41, \"Blocked\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(42);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \"\\n\\n\");\n        i0.ɵɵelementStart(44, \"ngb-progressbar\", 2);\n        i0.ɵɵtext(45, \"\\n  \");\n        i0.ɵɵelementStart(46, \"span\");\n        i0.ɵɵtext(47);\n        i0.ɵɵpipe(48, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(49, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(50, \"\\n\\n\");\n        i0.ɵɵelementStart(51, \"div\");\n        i0.ɵɵtext(52);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(53, \"\\n\\n\");\n        i0.ɵɵelementStart(54, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function JvmThreadsComponent_Template_button_click_54_listener() {\n          return ctx.open();\n        });\n        i0.ɵɵtext(55, \"\\n  \");\n        i0.ɵɵelementStart(56, \"span\");\n        i0.ɵɵtext(57, \"Expand\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(58, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(59, \"\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.threadStats.threadDumpRunnable, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.threadStats.threadDumpRunnable)(\"max\", ctx.threadStats.threadDumpAll)(\"striped\", true)(\"animated\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(12, 25, ctx.threadStats.threadDumpRunnable * 100 / ctx.threadStats.threadDumpAll, \"1.0-0\"), \"%\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" (\", ctx.threadStats.threadDumpTimedWaiting, \")\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.threadStats.threadDumpTimedWaiting)(\"max\", ctx.threadStats.threadDumpAll)(\"striped\", true)(\"animated\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(24, 28, ctx.threadStats.threadDumpTimedWaiting * 100 / ctx.threadStats.threadDumpAll, \"1.0-0\"), \"%\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" (\", ctx.threadStats.threadDumpWaiting, \")\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.threadStats.threadDumpWaiting)(\"max\", ctx.threadStats.threadDumpAll)(\"striped\", true)(\"animated\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(36, 31, ctx.threadStats.threadDumpWaiting * 100 / ctx.threadStats.threadDumpAll, \"1.0-0\"), \"%\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" (\", ctx.threadStats.threadDumpBlocked, \")\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.threadStats.threadDumpBlocked)(\"max\", ctx.threadStats.threadDumpAll)(\"striped\", true)(\"animated\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(48, 34, ctx.threadStats.threadDumpBlocked * 100 / ctx.threadStats.threadDumpAll, \"1.0-0\"), \"%\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Total: \", ctx.threadStats.threadDumpAll, \"\");\n      }\n    },\n    dependencies: [i1.NgbProgressbar, i2.TranslateDirective, i3.DecimalPipe],\n    encapsulation: 2\n  });\n  return JvmThreadsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}