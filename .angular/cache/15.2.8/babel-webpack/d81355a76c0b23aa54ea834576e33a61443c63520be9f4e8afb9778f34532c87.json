{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nconst _c1 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"mzd-timeline-card\": a0,\n    \"mzd-timeline-border\": a1,\n    \"mzd-timeline-border-accent\": a2,\n    \"mzd-timeline-border-warn\": a3,\n    \"mzd-timeline-border-primary\": a4\n  };\n};\nconst _c2 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    \"mzd-timeline-line\": a0,\n    \"mzd-timeline-chat\": a1,\n    \"no-alternate\": a2,\n    left: a3,\n    right: a4,\n    chat: a5\n  };\n};\nlet MzdIconComponent = /*#__PURE__*/(() => {\n  class MzdIconComponent {\n    constructor() {}\n    ngOnInit() {}\n  }\n  MzdIconComponent.ɵfac = function MzdIconComponent_Factory(t) {\n    return new (t || MzdIconComponent)();\n  };\n  MzdIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MzdIconComponent,\n    selectors: [[\"mzd-icon\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MzdIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    }\n  });\n  return MzdIconComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MzdTimelineContentComponent = /*#__PURE__*/(() => {\n  class MzdTimelineContentComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.card = true;\n      this.border = false;\n      this.color = 'gray';\n      this.side = undefined;\n    }\n    set left(value) {\n      this.elementRef.nativeElement.classList.toggle('content-left', value);\n    }\n    set right(value) {\n      this.elementRef.nativeElement.classList.toggle('content-right', value);\n    }\n    set noAlternate(value) {\n      this.elementRef.nativeElement.classList.toggle('no-alternate', value);\n    }\n    set chat(value) {\n      this.elementRef.nativeElement.classList.toggle('chat', value);\n    }\n    ngOnInit() {}\n  }\n  MzdTimelineContentComponent.ɵfac = function MzdTimelineContentComponent_Factory(t) {\n    return new (t || MzdTimelineContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MzdTimelineContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MzdTimelineContentComponent,\n    selectors: [[\"mzd-timeline-content\"]],\n    inputs: {\n      card: \"card\",\n      border: \"border\",\n      color: \"color\",\n      side: \"side\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 7,\n    consts: [[3, \"ngClass\"]],\n    template: function MzdTimelineContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(1, _c1, ctx.card, ctx.border && ctx.color === \"gray\", ctx.border && ctx.color === \"accent\", ctx.border && ctx.color === \"warn\", ctx.border && ctx.color === \"primary\"));\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\"mzd-timeline-content{display:block;padding:10px 30px;position:relative;background-color:inherit;width:50%}mzd-timeline-content .mzd-timeline-card{padding:16px;border-radius:4px;box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}mzd-timeline-content .mzd-timeline-card mat-card{box-shadow:none!important;padding:0}mzd-timeline-content .mzd-timeline-border{border:1px solid gray;border-radius:4px}mzd-timeline-content.no-alternate{width:100%}mzd-timeline-content.no-alternate.content-right{left:0;right:auto;padding-left:60px}mzd-timeline-content.no-alternate.content-right:after{left:15px;right:auto}mzd-timeline-content.no-alternate.content-right mzd-icon{left:23px;right:auto}mzd-timeline-content.no-alternate.content-right:before{left:30px;right:auto;border-width:5px 10px 5px 20px;border-color:transparent gray transparent transparent}mzd-timeline-content.no-alternate.content-left{left:auto;right:0;padding-right:60px}mzd-timeline-content.no-alternate.content-left:after{left:auto;right:15px}mzd-timeline-content.no-alternate.content-left mzd-icon{left:auto;right:23px}mzd-timeline-content.no-alternate.content-left:before{left:auto;right:30px;border:medium solid gray;border-width:5px 20px 5px 10px;border-color:transparent transparent transparent gray}mzd-timeline-content:after{content:\\\"\\\";position:absolute;width:30px;height:30px;left:auto;right:-15px;background:whitesmoke;border:2px solid orange;top:15px;border-radius:50%;z-index:1;box-sizing:border-box}mzd-timeline-content mzd-icon{position:absolute;left:auto;right:-7px;top:21px;border-radius:50%;z-index:2;box-sizing:border-box;text-align:center;width:14px}mzd-timeline-content.content-left{left:0;right:auto}mzd-timeline-content.content-left:before{content:\\\"\\\";position:absolute;height:0;width:0;border:medium solid gray;border-width:5px 20px 5px 10px;border-color:transparent transparent transparent gray;top:25px;left:auto;right:0;z-index:1}mzd-timeline-content.content-left.chat{left:calc(15% - 30px);right:0;width:85%}mzd-timeline-content.content-right{left:auto;right:-50%}mzd-timeline-content.content-right.chat{left:30px;right:0;width:85%}mzd-timeline-content.content-right:after{left:-15px;right:auto}mzd-timeline-content.content-right mzd-icon{left:-7px;right:auto}mzd-timeline-content.content-right:before{content:\\\"\\\";position:absolute;height:0;width:0;border:medium solid gray;border-width:5px 10px 5px 20px;border-color:transparent gray transparent transparent;top:25px;left:0;right:auto;z-index:1}@media screen and (max-width: 599px){mzd-timeline-content{width:100%;padding-left:60px}mzd-timeline-content.no-alternate{padding-left:30px}mzd-timeline-content.content-left:after,mzd-timeline-content.content-right:after{left:15px;right:auto}mzd-timeline-content.content-left{left:0;right:auto}mzd-timeline-content.content-left mzd-icon{left:23px;right:auto}mzd-timeline-content.content-left:before,mzd-timeline-content.content-right:before{left:30px;right:auto;border-width:5px 10px 5px 20px;border-color:transparent gray transparent transparent}mzd-timeline-content.content-right{left:0;right:auto}mzd-timeline-content.content-right mzd-icon{left:23px;right:auto}}\\n\"],\n    encapsulation: 2\n  });\n  return MzdTimelineContentComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MzdTimelineComponent = /*#__PURE__*/(() => {\n  class MzdTimelineComponent {\n    constructor() {\n      this.firstContentSide = 'left';\n      this.alternateSide = true;\n      this.chat = false;\n      this.contents = [];\n      this.width = 0;\n    }\n    ngOnChanges(changes) {\n      this.ngAfterViewInit();\n    }\n    onResize(event) {\n      const oldWidth = this.width;\n      this.width = event.target.innerWidth;\n      if (oldWidth < 600 && this.width >= 600 || oldWidth >= 600 && this.width < 600) {\n        this.setContentProperties();\n      }\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      window.dispatchEvent(new Event('resize'));\n      if (this.alternateSide) {\n        this.handleAlternateSide();\n      } else {\n        this.handleOneSide();\n      }\n      this.setContentProperties();\n    }\n    setContentProperties() {\n      this.contents.forEach(content => {\n        content.chat = this.chat && this.alternateSide && this.width > 599;\n        content.noAlternate = !this.alternateSide;\n      });\n    }\n    handleAlternateSide() {\n      const alternateSideDecider = this.firstContentSide === 'left' ? 0 : 1;\n      if (this.chat && this.width > 599) {\n        this.contents.forEach((content, index) => {\n          if (content.side === undefined) {\n            content.left = !(index % 2 === alternateSideDecider);\n            content.right = index % 2 === alternateSideDecider;\n          } else {\n            content.left = content.side === 'right';\n            content.right = content.side === 'left';\n          }\n        });\n      } else {\n        this.contents.forEach((content, index) => {\n          if (content.side === undefined) {\n            content.left = index % 2 === alternateSideDecider;\n            content.right = !(index % 2 === alternateSideDecider);\n          } else {\n            content.left = content.side === 'left';\n            content.right = content.side === 'right';\n          }\n        });\n      }\n    }\n    handleOneSide() {\n      this.contents.forEach(content => {\n        content.left = this.firstContentSide === 'left';\n        content.right = this.firstContentSide === 'right';\n      });\n    }\n  }\n  MzdTimelineComponent.ɵfac = function MzdTimelineComponent_Factory(t) {\n    return new (t || MzdTimelineComponent)();\n  };\n  MzdTimelineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MzdTimelineComponent,\n    selectors: [[\"mzd-timeline\"]],\n    contentQueries: function MzdTimelineComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MzdTimelineContentComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contents = _t);\n      }\n    },\n    inputs: {\n      firstContentSide: \"firstContentSide\",\n      alternateSide: \"alternateSide\",\n      chat: \"chat\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"ngClass\", \"resize\"]],\n    template: function MzdTimelineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"resize\", function MzdTimelineComponent_Template_div_resize_0_listener($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction6(1, _c2, !(ctx.chat && ctx.alternateSide && ctx.width > 599), ctx.chat && ctx.alternateSide && ctx.width > 599, !ctx.alternateSide, ctx.firstContentSide !== \"left\", ctx.firstContentSide !== \"right\", ctx.chat && ctx.alternateSide && ctx.width > 599));\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\"*{box-sizing:border-box}mzd-timeline{position:relative;display:block;width:100%;padding:50px 0}mzd-timeline .mzd-timeline-line{position:absolute;top:0;left:50%;right:auto;height:100%;width:1px;background:gray}mzd-timeline .mzd-timeline-line.no-alternate.left{left:30px;right:auto}mzd-timeline .mzd-timeline-line.no-alternate.right{left:auto;right:30px}mzd-timeline .mzd-timeline-chat{left:30px;position:absolute;width:calc(100% - 60px);height:100%;border-left:1px solid grey;border-right:1px solid grey}@media screen and (max-width: 599px){mzd-timeline .mzd-timeline-line{left:30px;right:auto}}\\n\"],\n    encapsulation: 2\n  });\n  return MzdTimelineComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MzdTimelineModule = /*#__PURE__*/(() => {\n  class MzdTimelineModule {}\n  MzdTimelineModule.ɵfac = function MzdTimelineModule_Factory(t) {\n    return new (t || MzdTimelineModule)();\n  };\n  MzdTimelineModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MzdTimelineModule\n  });\n  MzdTimelineModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return MzdTimelineModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\r\n * Public API Surface of timeline\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MzdIconComponent, MzdTimelineComponent, MzdTimelineContentComponent, MzdTimelineModule };\n//# sourceMappingURL=ngx-rend-timeline.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}