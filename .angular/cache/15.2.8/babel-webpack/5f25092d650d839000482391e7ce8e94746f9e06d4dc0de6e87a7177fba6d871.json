{"ast":null,"code":"import { Product } from \"app/entities/product/product.model\";\nimport { JhiResolvePagingParams } from \"ng-jhipster\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { DashboardOrganisatorComponent } from \"./dashboard_organisator.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/product/service/product.service\";\nimport * as i2 from \"@angular/router\";\nexport let ProductIdResolve = /*#__PURE__*/(() => {\n  class ProductIdResolve {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['productId'];\n      if (id) {\n        return this.service.find(id).pipe(flatMap(product => {\n          if (product.body) {\n            return of(product.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new Product());\n    }\n  }\n  ProductIdResolve.ɵfac = function ProductIdResolve_Factory(t) {\n    return new (t || ProductIdResolve)(i0.ɵɵinject(i1.ProductService), i0.ɵɵinject(i2.Router));\n  };\n  ProductIdResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductIdResolve,\n    factory: ProductIdResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductIdResolve;\n})();\nexport const DashboardRoute = [{\n  path: '',\n  component: DashboardOrganisatorComponent,\n  resolve: {\n    pagingParams: JhiResolvePagingParams\n  },\n  data: {\n    pageTitle: 'routes.title.dashboard.organisator'\n  }\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}