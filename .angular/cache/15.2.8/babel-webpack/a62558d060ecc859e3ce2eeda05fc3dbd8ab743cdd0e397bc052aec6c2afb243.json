{"ast":null,"code":"import { of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { CreateYourEventService } from '../create-your-event-service.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/create-your-event-service.service\";\nimport * as i2 from \"@angular/router\";\nexport let CreateYourEventServiceRoutingResolveService = /*#__PURE__*/(() => {\n  class CreateYourEventServiceRoutingResolveService {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['id'];\n      if (id) {\n        return this.service.find(id).pipe(mergeMap(createYourEventService => {\n          if (createYourEventService.body) {\n            return of(createYourEventService.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new CreateYourEventService());\n    }\n  }\n  CreateYourEventServiceRoutingResolveService.ɵfac = function CreateYourEventServiceRoutingResolveService_Factory(t) {\n    return new (t || CreateYourEventServiceRoutingResolveService)(i0.ɵɵinject(i1.CreateYourEventServiceService), i0.ɵɵinject(i2.Router));\n  };\n  CreateYourEventServiceRoutingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CreateYourEventServiceRoutingResolveService,\n    factory: CreateYourEventServiceRoutingResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return CreateYourEventServiceRoutingResolveService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}