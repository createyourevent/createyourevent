{"ast":null,"code":"import { of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { EventDetails } from '../event-details.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/event-details.service\";\nimport * as i2 from \"@angular/router\";\nexport class EventDetailsRoutingResolveService {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(mergeMap(eventDetails => {\n        if (eventDetails.body) {\n          return of(eventDetails.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new EventDetails());\n  }\n}\nEventDetailsRoutingResolveService.ɵfac = function EventDetailsRoutingResolveService_Factory(t) {\n  return new (t || EventDetailsRoutingResolveService)(i0.ɵɵinject(i1.EventDetailsService), i0.ɵɵinject(i2.Router));\n};\nEventDetailsRoutingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventDetailsRoutingResolveService,\n  factory: EventDetailsRoutingResolveService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,EAAE,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAAwBC,YAAY,QAAQ,wBAAwB;;;;AAIpE,OAAM,MAAOC,iCAAiC;EAC5CC,YAAsBC,OAA4B,EAAYC,MAAc;IAAtD,YAAO,GAAPD,OAAO;IAAiC,WAAM,GAANC,MAAM;EAAW;EAE/EC,OAAO,CAACC,KAA6B;IACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAID,EAAE,EAAE;MACN,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAACF,EAAE,CAAC,CAACG,IAAI,CAC/BX,QAAQ,CAAEY,YAAwC,IAAI;QACpD,IAAIA,YAAY,CAACC,IAAI,EAAE;UACrB,OAAOf,EAAE,CAACc,YAAY,CAACC,IAAI,CAAC;SAC7B,MAAM;UACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAOf,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAEH,OAAOD,EAAE,CAAC,IAAIG,YAAY,EAAE,CAAC;EAC/B;;;mBAlBWC,iCAAiC;AAAA;;SAAjCA,iCAAiC;EAAAa,SAAjCb,iCAAiC;EAAAc,YADpB;AAAM","names":["of","EMPTY","mergeMap","EventDetails","EventDetailsRoutingResolveService","constructor","service","router","resolve","route","id","params","find","pipe","eventDetails","body","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/event-details/route/event-details-routing-resolve.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { IEventDetails, EventDetails } from '../event-details.model';\nimport { EventDetailsService } from '../service/event-details.service';\n\n@Injectable({ providedIn: 'root' })\nexport class EventDetailsRoutingResolveService implements Resolve<IEventDetails> {\n  constructor(protected service: EventDetailsService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IEventDetails> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((eventDetails: HttpResponse<EventDetails>) => {\n          if (eventDetails.body) {\n            return of(eventDetails.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new EventDetails());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}