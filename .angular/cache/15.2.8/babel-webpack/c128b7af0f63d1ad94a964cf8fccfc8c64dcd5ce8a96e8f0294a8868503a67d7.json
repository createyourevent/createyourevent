{"ast":null,"code":"import { PrintBondModule } from './admin/admin-bonds/print-bond/print-bond.module';\nimport { LOCALE_ID, DEFAULT_CURRENCY_CODE } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport locale from '@angular/common/locales/en';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport * as dayjs from 'dayjs';\nimport { NgbDateAdapter, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SERVER_API_URL } from './app.constants';\nimport './config/dayjs';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CreateyoureventHomeModule } from './home/home.module';\nimport { EntityRoutingModule } from './entities/entity-routing.module';\n// jhipster-needle-angular-add-module-import JHipster will add new module here\nimport { NgbDateDayjsAdapter } from './config/datepicker-adapter';\nimport { fontAwesomeIcons } from './config/font-awesome-icons';\nimport { httpInterceptorProviders } from 'app/core/interceptor/index';\nimport { translatePartialLoader, missingTranslationHandler } from './config/translation.config';\nimport { MainComponent } from './layouts/main/main.component';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport { HttpModule } from '@angular/http';\nimport { MatListModule } from '@angular/material/list';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/moment';\nimport { NgChatModule } from 'ng-chat';\nimport { FacebookModule } from 'ngx-facebook';\nimport { MatomoModule } from 'ngx-matomo';\nimport { ShareModule } from 'ngx-sharebuttons';\nimport { ShareButtonsModule } from 'ngx-sharebuttons/buttons';\nimport { ShareIconsModule } from 'ngx-sharebuttons/icons';\nimport { ToastModule } from 'primeng/toast';\nimport { CartModule } from './cart/cart.module';\nimport { ChatModule } from './chat/chat.module';\nimport { FormlyFieldAddressAppModule } from './formly/formly-field-address.module';\nimport { FormlyFieldDateTimeAppModule } from './formly/formly-field-date.module';\nimport { FormlyFieldEditorAppModule } from './formly/formly-field-editor.module';\nimport { FormlyFieldKeywordsAppModule } from './formly/formly-field-keywords.module';\nimport { FormlyFieldTimeAppModule } from './formly/formly-field-time.module';\nimport { SchaffhausenHomeModule } from './schaffhausen/schaffhausenHome/schaffhausenHome.module';\nimport { StreamModule } from './stream/stream.module';\nimport { EventSliderModule } from './views/boxes/event_slider/event_slider.module';\nimport { MovieSliderModule } from './views/boxes/movie_slider/movie_slider.module';\nimport { PartnerAdsSliderModule } from './views/boxes/partner_ads_slider/partner_ads_slider.module';\nimport { PartnerSliderModule } from './views/boxes/partner_slider/partner_slider.module';\nimport { EventTickerModule } from './views/event-ticker/event-ticker.module';\nimport { CYETagCloudModule } from './views/tag-cloud/tag-cloud.module';\nimport { TickerModule } from './views/ticker/ticker.module';\nimport { CreateyoureventViewsModule } from './views/views.module';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { NotifierModule } from 'angular-notifier';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { NgxScrollTopModule } from 'ngx-scrolltop';\nimport { StickyNavModule } from 'ng2-sticky-nav';\nimport { BillingModule } from './account/billing/billing.module';\nimport { AdminFeesModule } from './admin/billing-tools/admin_fees/admin_fees.module';\nimport { OrganisatorBillingModule } from './admin/billing-tools/organisator/organisator_billing.module';\nimport { ServiceBillingModule } from './admin/billing-tools/service/service_billing.module';\nimport { SupplierBillingModule } from './admin/billing-tools/supplier/suppllier_billing.module';\nimport { CreateyoureventShopsModule } from './views/shop/shop.module';\nimport { FieldQuillType } from './formly/quill.type';\nimport { QuillModule } from 'ngx-quill';\nimport { CreateyoureventCYEChipsModule } from './views/games/find-the-chips/admin-chips/chips.module';\nimport { SettingsModule } from './account/settings/settings.module';\nimport localeDECH from '@angular/common/locales/de-CH';\nimport { AdsenseModule } from 'ng2-adsense';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { MomentModule } from 'angular2-moment';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaymentModule } from './views/payment/payment.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { DockerAppsModule } from './views/docker-apps/docker-apps.module';\nimport { BuyTicketModule } from './views/buy-ticket/buy-ticket.module';\nimport { OurRangeModule } from './views/our-range/our-range.module';\nimport { VideoplayerModule } from './views/videoplayer/videoplayer.module';\nimport { OrganizationModule } from './organization/organization.module';\nimport { OrganizationHasEventsModule } from './views/organization-has-events/organization-has-events.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/config/application-config.service\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"ngx-bootstrap/modal\";\nimport * as i6 from \"@ng-idle/keepalive\";\nimport * as i7 from \"@angular/service-worker\";\nimport * as i8 from \"ngx-webstorage\";\nimport * as i9 from \"@ngx-formly/core\";\nimport * as i10 from \"angularx-flatpickr\";\nimport * as i11 from \"angular-calendar\";\nimport * as i12 from \"ngx-facebook\";\nimport * as i13 from \"ngx-quill\";\nimport * as i14 from \"ng2-adsense\";\nregisterLocaleData(localeDECH);\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    constructor(applicationConfigService, iconLibrary, dpConfig, translateService) {\n      applicationConfigService.setEndpointPrefix(SERVER_API_URL);\n      registerLocaleData(locale);\n      iconLibrary.addIcons(...fontAwesomeIcons);\n      dpConfig.minDate = {\n        year: dayjs().subtract(100, 'year').year(),\n        month: 1,\n        day: 1\n      };\n      translateService.setDefaultLang('en');\n      translateService.use('en');\n    }\n  }\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.FaIconLibrary), i0.ɵɵinject(i3.NgbDatepickerConfig), i0.ɵɵinject(i4.TranslateService));\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [MainComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [Title, {\n      provide: LOCALE_ID,\n      useValue: 'de-CH'\n    }, {\n      provide: NgbDateAdapter,\n      useClass: NgbDateDayjsAdapter\n    }, httpInterceptorProviders, {\n      provide: DEFAULT_CURRENCY_CODE,\n      useValue: 'CHF'\n    }],\n    imports: [OrganizationHasEventsModule, OrganizationModule, VideoplayerModule, OurRangeModule, DockerAppsModule, MatCardModule, PaymentModule, ModalModule.forRoot(), NgIdleKeepaliveModule.forRoot(), MomentModule, PrintBondModule, BillingModule, SettingsModule, CreateyoureventCYEChipsModule, CreateyoureventShopsModule, BrowserModule, SharedModule, CreateyoureventHomeModule,\n    // jhipster-needle-angular-add-module JHipster will add new module here\n    EntityRoutingModule, AppRoutingModule,\n    // Set this to true to enable service worker (PWA)\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: false\n    }), HttpClientModule, NgxWebstorageModule.forRoot({\n      prefix: 'jhi',\n      separator: '-',\n      caseSensitive: true\n    }), TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translatePartialLoader,\n        deps: [HttpClient]\n      },\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useFactory: missingTranslationHandler\n      }\n    }), ScullyLibModule, ReactiveFormsModule, FormlyModule.forRoot({\n      validationMessages: [{\n        name: 'required',\n        message: 'This field is required'\n      }],\n      types: [{\n        name: 'quill',\n        component: FieldQuillType,\n        wrappers: ['form-field']\n      }]\n    }), FormlyBootstrapModule, BuyTicketModule, EventSliderModule, MovieSliderModule, PartnerSliderModule, NgxScrollTopModule, FormsModule, CommonModule, ReactiveFormsModule, BrowserModule, BrowserAnimationsModule, CreateyoureventHomeModule, CartModule, CYETagCloudModule, StreamModule, OrganisatorBillingModule, ServiceBillingModule, SupplierBillingModule, AdminFeesModule,\n    // jhipster-needle-angular-add-module JHipster will add new module here\n    CreateyoureventViewsModule, NgbModule, FlatpickrModule.forRoot(), CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }), GoogleMapsModule, FormlyFieldTimeAppModule, FormlyFieldAddressAppModule, FormlyFieldDateTimeAppModule, FormlyFieldEditorAppModule, FormlyFieldKeywordsAppModule, HttpModule, NgChatModule, ChatModule, FacebookModule.forRoot(), ToastModule, MatListModule, ShareModule, ShareButtonsModule, ShareIconsModule, StickyNavModule, TickerModule, EventTickerModule, MatomoModule, NotifierModule, SchaffhausenHomeModule, PartnerAdsSliderModule, QuillModule.forRoot(), AdsenseModule.forRoot({\n      adClient: 'ca-pub-4410151524668264',\n      adSlot: 3176148201\n    })]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}