{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTextBounds = exports.TextBounds = undefined;\nvar _Bounds = require('./Bounds');\nvar _textDecoration = require('./parsing/textDecoration');\nvar _Feature = require('./Feature');\nvar _Feature2 = _interopRequireDefault(_Feature);\nvar _Unicode = require('./Unicode');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar TextBounds = exports.TextBounds = function TextBounds(text, bounds) {\n  _classCallCheck(this, TextBounds);\n  this.text = text;\n  this.bounds = bounds;\n};\nvar parseTextBounds = exports.parseTextBounds = function parseTextBounds(value, parent, node) {\n  var letterRendering = parent.style.letterSpacing !== 0;\n  var textList = letterRendering ? (0, _Unicode.toCodePoints)(value).map(function (i) {\n    return (0, _Unicode.fromCodePoint)(i);\n  }) : (0, _Unicode.breakWords)(value, parent);\n  var length = textList.length;\n  var defaultView = node.parentNode ? node.parentNode.ownerDocument.defaultView : null;\n  var scrollX = defaultView ? defaultView.pageXOffset : 0;\n  var scrollY = defaultView ? defaultView.pageYOffset : 0;\n  var textBounds = [];\n  var offset = 0;\n  for (var i = 0; i < length; i++) {\n    var text = textList[i];\n    if (parent.style.textDecoration !== _textDecoration.TEXT_DECORATION.NONE || text.trim().length > 0) {\n      if (_Feature2.default.SUPPORT_RANGE_BOUNDS) {\n        textBounds.push(new TextBounds(text, getRangeBounds(node, offset, text.length, scrollX, scrollY)));\n      } else {\n        var replacementNode = node.splitText(text.length);\n        textBounds.push(new TextBounds(text, getWrapperBounds(node, scrollX, scrollY)));\n        node = replacementNode;\n      }\n    } else if (!_Feature2.default.SUPPORT_RANGE_BOUNDS) {\n      node = node.splitText(text.length);\n    }\n    offset += text.length;\n  }\n  return textBounds;\n};\nvar getWrapperBounds = function getWrapperBounds(node, scrollX, scrollY) {\n  var wrapper = node.ownerDocument.createElement('html2canvaswrapper');\n  wrapper.appendChild(node.cloneNode(true));\n  var parentNode = node.parentNode;\n  if (parentNode) {\n    parentNode.replaceChild(wrapper, node);\n    var bounds = (0, _Bounds.parseBounds)(wrapper, scrollX, scrollY);\n    if (wrapper.firstChild) {\n      parentNode.replaceChild(wrapper.firstChild, wrapper);\n    }\n    return bounds;\n  }\n  return new _Bounds.Bounds(0, 0, 0, 0);\n};\nvar getRangeBounds = function getRangeBounds(node, offset, length, scrollX, scrollY) {\n  var range = node.ownerDocument.createRange();\n  range.setStart(node, offset);\n  range.setEnd(node, offset + length);\n  return _Bounds.Bounds.fromClientRect(range.getBoundingClientRect(), scrollX, scrollY);\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}