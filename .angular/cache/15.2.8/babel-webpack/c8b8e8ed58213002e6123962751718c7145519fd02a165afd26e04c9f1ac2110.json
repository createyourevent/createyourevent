{"ast":null,"code":"import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nconst getUrl = production => production ? 'https://pay.datatrans.com/upp/payment/js/datatrans-2.0.0.min.js' : 'https://pay.sandbox.datatrans.com/upp/payment/js/datatrans-2.0.0.min.js';\nconst startPayment = props => {\n  window.Datatrans.startPayment({\n    production: props.production,\n    transactionId: props.transactionId,\n    loaded: props.onLoaded,\n    opened: props.onOpened,\n    closed: props.onCancelled,\n    error: props.onError\n  });\n};\nconst cleanupLightbox = () => {\n  if (window.Datatrans) {\n    try {\n      window.Datatrans.close();\n    } catch (err) {} // eslint-disable-line no-empty\n  }\n};\n\nconst Lightbox = props => {\n  useEffect(() => {\n    const {\n      production\n    } = props;\n    const scriptSource = getUrl(production);\n    if (document.querySelector('script[src=\"' + scriptSource + '\"]')) {\n      startPayment(props);\n      return cleanupLightbox;\n    }\n    const script = document.createElement('script');\n    script.src = scriptSource;\n    script.onload = () => {\n      startPayment(props);\n    };\n    document.body.appendChild(script);\n    return cleanupLightbox;\n  }, []);\n  return null;\n};\nexport default Lightbox;\nLightbox.propTypes = {\n  transactionId: PropTypes.string.isRequired,\n  production: PropTypes.bool,\n  onLoaded: PropTypes.func,\n  onOpened: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onError: PropTypes.func\n};\nLightbox.defaultProps = {\n  onLoaded() {},\n  onOpened() {},\n  onCancelled() {},\n  onError() {},\n  production: false\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}