{"ast":null,"code":"import { Authority } from \"app/config/authority.constants\";\nimport { UserRouteAccessService } from \"app/core/auth/user-route-access.service\";\nimport { Shop } from \"app/entities/shop/shop.model\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { ShopEditComponent } from \"./shop-edit.component\";\nimport { ShopOverviewComponent } from \"./shop-overview.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/shop/service/shop.service\";\nimport * as i2 from \"@angular/router\";\nexport let ShopResolve = /*#__PURE__*/(() => {\n  class ShopResolve {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    resolve(route) {\n      const id = route.params['id'];\n      if (id) {\n        return this.service.find(id).pipe(flatMap(shop => {\n          if (shop.body) {\n            return of(shop.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        }));\n      }\n      return of(new Shop());\n    }\n  }\n  ShopResolve.ɵfac = function ShopResolve_Factory(t) {\n    return new (t || ShopResolve)(i0.ɵɵinject(i1.ShopService), i0.ɵɵinject(i2.Router));\n  };\n  ShopResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShopResolve,\n    factory: ShopResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return ShopResolve;\n})();\nexport const shopRoute = [{\n  path: ':id/overview',\n  component: ShopOverviewComponent,\n  resolve: {\n    shop: ShopResolve\n  },\n  data: {\n    pageTitle: 'pagetitle.shop.overview'\n  }\n}, {\n  path: ':id/edit',\n  component: ShopEditComponent,\n  resolve: {\n    shop: ShopResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'pagetitle.shop.edit'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}