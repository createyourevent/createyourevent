{"ast":null,"code":"import { Authority } from \"app/config/authority.constants\";\nimport { UserRouteAccessService } from \"app/core/auth/user-route-access.service\";\nimport { Reservation } from \"app/entities/reservation/reservation.model\";\nimport { of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { GuestReservationDetailComponent } from \"./guest-reservation-detail.component\";\nimport { GuestReservationComponent } from \"./guest-reservation.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/reservation/service/reservation.service\";\nimport * as i2 from \"@angular/router\";\nexport class GuestReservationResolve {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  resolve(route) {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(flatMap(reservation => {\n        if (reservation.body) {\n          return of(reservation.body);\n        } else {\n          this.router.navigate(['404']);\n          return EMPTY;\n        }\n      }));\n    }\n    return of(new Reservation());\n  }\n}\nGuestReservationResolve.ɵfac = function GuestReservationResolve_Factory(t) {\n  return new (t || GuestReservationResolve)(i0.ɵɵinject(i1.ReservationService), i0.ɵɵinject(i2.Router));\n};\nGuestReservationResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GuestReservationResolve,\n  factory: GuestReservationResolve.ɵfac,\n  providedIn: 'root'\n});\nexport const GUEST_RESERVATION_ROUTE = [{\n  path: ':eventId/guest-reservation',\n  component: GuestReservationComponent,\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'routes.guest-reservation.title'\n  },\n  canActivate: [UserRouteAccessService]\n}, {\n  path: ':id/view',\n  component: GuestReservationDetailComponent,\n  resolve: {\n    reservation: GuestReservationResolve\n  },\n  data: {\n    authorities: [Authority.USER],\n    pageTitle: 'routes.guest-reservation.detail.title'\n  },\n  canActivate: [UserRouteAccessService]\n}];","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,sBAAsB,QAAQ,yCAAyC;AAChF,SAAuBC,WAAW,QAAQ,4CAA4C;AAEtF,SAAqBC,EAAE,EAAEC,KAAK,QAAQ,MAAM;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,+BAA+B,QAAQ,sCAAsC;AACtF,SAASC,yBAAyB,QAAQ,+BAA+B;;;;AAIzE,OAAM,MAAOC,uBAAuB;EAClCC,YAAoBC,OAA2B,EAAUC,MAAc;IAAnD,YAAO,GAAPD,OAAO;IAA8B,WAAM,GAANC,MAAM;EAAW;EAE1EC,OAAO,CAACC,KAA6B;IACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAID,EAAE,EAAE;MACN,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAACF,EAAE,CAAC,CAACG,IAAI,CAC/BZ,OAAO,CAAEa,WAAsC,IAAI;QACjD,IAAIA,WAAW,CAACC,IAAI,EAAE;UACpB,OAAOhB,EAAE,CAACe,WAAW,CAACC,IAAI,CAAC;SAC5B,MAAM;UACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAOhB,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAEH,OAAOD,EAAE,CAAC,IAAID,WAAW,EAAE,CAAC;EAC9B;;;mBAlBWM,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAAa,SAAvBb,uBAAuB;EAAAc,YADV;AAAM;AAsBhC,OAAO,MAAMC,uBAAuB,GAAW,CAC7C;EACEC,IAAI,EAAE,4BAA4B;EAClCC,SAAS,EAAElB,yBAAyB;EACpCmB,IAAI,EAAE;IACJC,WAAW,EAAE,CAAC3B,SAAS,CAAC4B,IAAI,CAAC;IAC7BC,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC7B,sBAAsB;CACrC,EACD;EACEuB,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEnB,+BAA+B;EAC1CM,OAAO,EAAE;IACPM,WAAW,EAAEV;GACd;EACDkB,IAAI,EAAE;IACJC,WAAW,EAAE,CAAC3B,SAAS,CAAC4B,IAAI,CAAC;IAC7BC,SAAS,EAAE;GACZ;EACDC,WAAW,EAAE,CAAC7B,sBAAsB;CACrC,CACF","names":["Authority","UserRouteAccessService","Reservation","of","EMPTY","flatMap","GuestReservationDetailComponent","GuestReservationComponent","GuestReservationResolve","constructor","service","router","resolve","route","id","params","find","pipe","reservation","body","navigate","factory","providedIn","GUEST_RESERVATION_ROUTE","path","component","data","authorities","USER","pageTitle","canActivate"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/guest-reservation/guest-reservation.route.ts"],"sourcesContent":["import { HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRouteSnapshot, Routes } from \"@angular/router\";\nimport { Authority } from \"app/config/authority.constants\";\nimport { UserRouteAccessService } from \"app/core/auth/user-route-access.service\";\nimport { IReservation, Reservation } from \"app/entities/reservation/reservation.model\";\nimport { ReservationService } from \"app/entities/reservation/service/reservation.service\";\nimport { Observable, of, EMPTY } from \"rxjs\";\nimport { flatMap } from \"rxjs/operators\";\nimport { GuestReservationDetailComponent } from \"./guest-reservation-detail.component\";\nimport { GuestReservationComponent } from \"./guest-reservation.component\";\n\n\n@Injectable({ providedIn: 'root' })\nexport class GuestReservationResolve implements Resolve<IReservation> {\n  constructor(private service: ReservationService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IReservation> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        flatMap((reservation: HttpResponse<Reservation>) => {\n          if (reservation.body) {\n            return of(reservation.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Reservation());\n  }\n}\n\nexport const GUEST_RESERVATION_ROUTE: Routes = [\n  {\n    path: ':eventId/guest-reservation',\n    component: GuestReservationComponent,\n    data: {\n      authorities: [Authority.USER],\n      pageTitle: 'routes.guest-reservation.title'\n    },\n    canActivate: [UserRouteAccessService]\n  },\n  {\n    path: ':id/view',\n    component: GuestReservationDetailComponent,\n    resolve: {\n      reservation: GuestReservationResolve\n    },\n    data: {\n      authorities: [Authority.USER],\n      pageTitle: 'routes.guest-reservation.detail.title'\n    },\n    canActivate: [UserRouteAccessService]\n  }\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}