{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let ConfigurationService = /*#__PURE__*/(() => {\n  class ConfigurationService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n    }\n    getBeans() {\n      return this.http.get(this.applicationConfigService.getEndpointFor('management/configprops')).pipe(map(configProps => Object.values(Object.values(configProps.contexts).map(context => context.beans).reduce((allBeans, contextBeans) => ({\n        ...allBeans,\n        ...contextBeans\n      })))));\n    }\n    getPropertySources() {\n      return this.http.get(this.applicationConfigService.getEndpointFor('management/env')).pipe(map(env => env.propertySources));\n    }\n  }\n  ConfigurationService.ɵfac = function ConfigurationService_Factory(t) {\n    return new (t || ConfigurationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n  ConfigurationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigurationService,\n    factory: ConfigurationService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfigurationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}