{"ast":null,"code":"import { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Injector, Optional, Inject, EventEmitter, SecurityContext, Directive, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    header: 1\n  }, {\n    header: 2\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    script: 'sub'\n  }, {\n    script: 'super'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], [{\n    direction: 'rtl'\n  }], [{\n    size: ['small', false, 'large', 'huge']\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    font: []\n  }], [{\n    align: []\n  }], ['clean'], ['link', 'image', 'video'] // link and image, video\n  ]\n};\n\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n  providedIn: 'root',\n  factory: () => ({\n    modules: defaultModules\n  })\n});\nclass QuillService {\n  constructor(injector, config) {\n    this.config = config;\n    this.count = 0;\n    this.document = injector.get(DOCUMENT);\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n  getQuill() {\n    this.count++;\n    if (!this.Quill && this.count === 1) {\n      this.$importPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = this.document.addEventListener;\n        // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n        const quillImport = yield import('quill');\n        this.document.addEventListener = maybePatchedAddEventListener;\n        this.Quill = quillImport.default ? quillImport.default : quillImport;\n        // Only register custom options and modules once\n        (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach(customOption => {\n          const newCustomOption = this.Quill.import(customOption.import);\n          newCustomOption.whitelist = customOption.whitelist;\n          this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n        });\n        (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({\n          implementation,\n          path\n        }) => {\n          this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n        });\n        resolve(this.Quill);\n      }));\n    }\n    return this.$importPromise;\n  }\n}\nQuillService.ɵfac = function QuillService_Factory(t) {\n  return new (t || QuillService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\nQuillService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function QuillService_Factory() {\n    return new QuillService(i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n  },\n  token: QuillService,\n  providedIn: \"root\"\n});\nQuillService.ctorParameters = () => [{\n  type: Injector\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [QUILL_CONFIG_TOKEN]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.sanitize = false;\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n    this.subscription = null;\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n      return modelValue;\n    };\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'html') {\n        if (this.sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n      return value;\n    };\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n      // only emit changes when there's any listener\n      if (!this.onBlur.observers.length && !this.onFocus.observers.length && !this.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {\n        return;\n      }\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n        this.cd.markForCheck();\n      });\n    };\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n      // only emit changes when there's any listener\n      if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n        return;\n      }\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    };\n    // eslint-disable-next-line max-len\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observers.length) {\n        return;\n      }\n      // only emit changes emitted by user interactions\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n    this.document = injector.get(DOCUMENT);\n  }\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n      return prev;\n    }, []);\n  }\n  ngAfterViewInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const Quill = yield this.service.getQuill();\n      this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let readOnly = this.readOnly;\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n      let defaultEmptyValue = this.defaultEmptyValue;\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n      let scrollingContainer = this.scrollingContainer;\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n      this.zone.runOutsideAngular(() => {\n        var _a, _b, _c;\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        });\n        // Set optional link placeholder, Quill has no native API for it so using workaround\n        if (this.linkPlaceholder) {\n          const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n          const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n          if (input === null || input === void 0 ? void 0 : input.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n        this.quillEditor.getModule('history').clear();\n      }\n      // initialize disabled status based on this.disabled as default value\n      this.setDisabledState();\n      this.addQuillEventListeners();\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.dispose();\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    }\n    // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n  }\n\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n    this.content = currentValue;\n    if (!this.quillEditor) {\n      return;\n    }\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n      return;\n    }\n    this.quillEditor.setText('');\n  }\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText();\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n    return valid ? null : err;\n  }\n  addQuillEventListeners() {\n    this.dispose();\n    // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add(\n      // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      }));\n      // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n      this.subscription.add(\n      // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add(\n      // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {\n  return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    required: \"required\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    styles: \"styles\",\n    strict: \"strict\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    preserveWhitespace: \"preserveWhitespace\",\n    trimOnValidation: \"trimOnValidation\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\",\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    formats: \"formats\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    trackChanges: \"trackChanges\",\n    classes: \"classes\",\n    linkPlaceholder: \"linkPlaceholder\",\n    debounceTime: \"debounceTime\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nQuillEditorBase.ctorParameters = () => [{\n  type: Injector\n}, {\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: DomSanitizer\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: Renderer2\n}, {\n  type: NgZone\n}, {\n  type: QuillService\n}];\nQuillEditorBase.propDecorators = {\n  format: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  modules: [{\n    type: Input\n  }],\n  debug: [{\n    type: Input\n  }],\n  readOnly: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  maxLength: [{\n    type: Input\n  }],\n  minLength: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  formats: [{\n    type: Input\n  }],\n  customToolbarPosition: [{\n    type: Input\n  }],\n  sanitize: [{\n    type: Input\n  }],\n  styles: [{\n    type: Input\n  }],\n  strict: [{\n    type: Input\n  }],\n  scrollingContainer: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  customOptions: [{\n    type: Input\n  }],\n  customModules: [{\n    type: Input\n  }],\n  trackChanges: [{\n    type: Input\n  }],\n  preserveWhitespace: [{\n    type: Input\n  }],\n  classes: [{\n    type: Input\n  }],\n  trimOnValidation: [{\n    type: Input\n  }],\n  linkPlaceholder: [{\n    type: Input\n  }],\n  compareValues: [{\n    type: Input\n  }],\n  filterNull: [{\n    type: Input\n  }],\n  debounceTime: [{\n    type: Input\n  }],\n  defaultEmptyValue: [{\n    type: Input\n  }],\n  onEditorCreated: [{\n    type: Output\n  }],\n  onEditorChanged: [{\n    type: Output\n  }],\n  onContentChanged: [{\n    type: Output\n  }],\n  onSelectionChanged: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }],\n  valueGetter: [{\n    type: Input\n  }],\n  valueSetter: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    required: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {\n  return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 0,\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵtext(0, \"\\n  \");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵtext(2, \"\\n\");\n    }\n  },\n  styles: [\"\\n    :host {\\n      display: inline-block;\\n    }\\n    \"],\n  encapsulation: 2\n});\nQuillEditorComponent.ctorParameters = () => [{\n  type: Injector\n}, {\n  type: ElementRef,\n  decorators: [{\n    type: Inject,\n    args: [ElementRef]\n  }]\n}, {\n  type: ChangeDetectorRef,\n  decorators: [{\n    type: Inject,\n    args: [ChangeDetectorRef]\n  }]\n}, {\n  type: DomSanitizer,\n  decorators: [{\n    type: Inject,\n    args: [DomSanitizer]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: Renderer2,\n  decorators: [{\n    type: Inject,\n    args: [Renderer2]\n  }]\n}, {\n  type: NgZone,\n  decorators: [{\n    type: Inject,\n    args: [NgZone]\n  }]\n}, {\n  type: QuillService,\n  decorators: [{\n    type: Inject,\n    args: [QuillService]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n      styles: [\"\\n    :host {\\n      display: inline-block;\\n    }\\n    \"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: ɵngcc1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: ɵngcc0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.sanitize = false;\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {\n  return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService));\n};\nQuillViewHTMLComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    sanitize: \"sanitize\",\n    theme: \"theme\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0, \"\\n  \");\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n      ɵngcc0.ɵɵtext(2, \"\\n    \");\n      ɵngcc0.ɵɵelementStart(3, \"div\", 1);\n      ɵngcc0.ɵɵtext(4, \"\\n    \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(5, \"\\n  \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(6, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass],\n  styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"],\n  encapsulation: 2\n});\nQuillViewHTMLComponent.ctorParameters = () => [{\n  type: DomSanitizer,\n  decorators: [{\n    type: Inject,\n    args: [DomSanitizer]\n  }]\n}, {\n  type: QuillService\n}];\nQuillViewHTMLComponent.propDecorators = {\n  content: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  sanitize: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n      styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.sanitize = false;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          if (this.sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n        quillEditor.setContents(content);\n      }\n    };\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n  ngAfterViewInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const Quill = yield this.service.getQuill();\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      }\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {\n  return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nQuillViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    sanitize: \"sanitize\",\n    strict: \"strict\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\",\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    content: \"content\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function QuillViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0, \"\\n\");\n    }\n  },\n  styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"],\n  encapsulation: 2\n});\nQuillViewComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: NgZone\n}, {\n  type: QuillService\n}, {\n  type: DomSanitizer\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}];\nQuillViewComponent.propDecorators = {\n  format: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  modules: [{\n    type: Input\n  }],\n  debug: [{\n    type: Input\n  }],\n  formats: [{\n    type: Input\n  }],\n  sanitize: [{\n    type: Input\n  }],\n  strict: [{\n    type: Input\n  }],\n  content: [{\n    type: Input\n  }],\n  customModules: [{\n    type: Input\n  }],\n  customOptions: [{\n    type: Input\n  }],\n  preserveWhitespace: [{\n    type: Input\n  }],\n  onEditorCreated: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      template: `\n`,\n      styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    sanitize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n}\nQuillModule.ɵfac = function QuillModule_Factory(t) {\n  return new (t || QuillModule)();\n};\nQuillModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, {\n    declarations: function () {\n      return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent];\n    }\n  });\n})();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };","map":{"version":3,"names":["DOCUMENT","isPlatformServer","CommonModule","i0","InjectionToken","Injectable","Injector","Optional","Inject","EventEmitter","SecurityContext","Directive","ElementRef","ChangeDetectorRef","PLATFORM_ID","Renderer2","NgZone","Input","Output","Component","ViewEncapsulation","forwardRef","NgModule","__awaiter","DomSanitizer","Subscription","fromEvent","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","ɵngcc0","ɵngcc1","ɵngcc2","_c0","_c1","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","getFormat","format","configFormat","passedFormat","QUILL_CONFIG_TOKEN","providedIn","factory","modules","QuillService","constructor","injector","config","count","document","get","getQuill","Quill","$importPromise","Promise","resolve","_a","_b","maybePatchedAddEventListener","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","customModules","implementation","path","ɵfac","QuillService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","INJECTOR","token","ctorParameters","type","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","required","customToolbarPosition","sanitize","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","subscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","length","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngAfterViewInit","nativeElement","insertAdjacentHTML","toolbarElem","Object","assign","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","_c","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","deltaOperations","ops","onlyEmptyOperation","includes","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","subscribe","textChange$","editorChange$","pipe","unsubscribe","QuillEditorBase_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","inputs","outputs","features","ɵɵNgOnChangesFeature","propDecorators","QuillEditorComponent","QuillEditorComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","ɵɵProvidersFeature","multi","provide","useExisting","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","QuillEditorComponent_Template","rf","ctx","ɵɵprojectionDef","ɵɵtext","ɵɵprojection","encapsulation","None","providers","selector","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","QuillViewHTMLComponent_Factory","consts","QuillViewHTMLComponent_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵsanitizeHtml","dependencies","NgClass","QuillViewComponent","QuillViewComponent_Factory","QuillViewComponent_Template","QuillModule","forRoot","ngModule","useValue","QuillModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js"],"sourcesContent":["import { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Injector, Optional, Inject, EventEmitter, SecurityContext, Directive, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.count = 0;\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = yield import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = function QuillService_Factory(t) { return new (t || QuillService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN, 8)); };\nQuillService.ɵprov = i0.ɵɵdefineInjectable({ factory: function QuillService_Factory() { return new QuillService(i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8)); }, token: QuillService, providedIn: \"root\" });\nQuillService.ctorParameters = () => [\n    { type: Injector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [QUILL_CONFIG_TOKEN,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [QUILL_CONFIG_TOKEN]\n            }] }]; }, null); })();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.subscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                var _a, _b, _c;\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n                    const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n                    if (input === null || input === void 0 ? void 0 : input.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) { return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: QuillEditorBase, inputs: { required: \"required\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", customOptions: \"customOptions\", customModules: \"customModules\", preserveWhitespace: \"preserveWhitespace\", trimOnValidation: \"trimOnValidation\", compareValues: \"compareValues\", filterNull: \"filterNull\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", formats: \"formats\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", trackChanges: \"trackChanges\", classes: \"classes\", linkPlaceholder: \"linkPlaceholder\", debounceTime: \"debounceTime\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nQuillEditorBase.ctorParameters = () => [\n    { type: Injector },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService }\n];\nQuillEditorBase.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maxLength: [{ type: Input }],\n    minLength: [{ type: Input }],\n    required: [{ type: Input }],\n    formats: [{ type: Input }],\n    customToolbarPosition: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    styles: [{ type: Input }],\n    strict: [{ type: Input }],\n    scrollingContainer: [{ type: Input }],\n    bounds: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    customModules: [{ type: Input }],\n    trackChanges: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    classes: [{ type: Input }],\n    trimOnValidation: [{ type: Input }],\n    linkPlaceholder: [{ type: Input }],\n    compareValues: [{ type: Input }],\n    filterNull: [{ type: Input }],\n    debounceTime: [{ type: Input }],\n    defaultEmptyValue: [{ type: Input }],\n    onEditorCreated: [{ type: Output }],\n    onEditorChanged: [{ type: Output }],\n    onContentChanged: [{ type: Output }],\n    onSelectionChanged: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    valueGetter: [{ type: Input }],\n    valueSetter: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }]; }, { required: [{\n            type: Input\n        }], customToolbarPosition: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], trimOnValidation: [{\n            type: Input\n        }], compareValues: [{\n            type: Input\n        }], filterNull: [{\n            type: Input\n        }], defaultEmptyValue: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], onEditorChanged: [{\n            type: Output\n        }], onContentChanged: [{\n            type: Output\n        }], onSelectionChanged: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], valueGetter: [{\n            type: Input\n        }], valueSetter: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], maxLength: [{\n            type: Input\n        }], minLength: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], scrollingContainer: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], trackChanges: [{\n            type: Input\n        }], classes: [{\n            type: Input\n        }], linkPlaceholder: [{\n            type: Input\n        }], debounceTime: [{\n            type: Input\n        }] }); })();\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) { return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillEditorComponent, selectors: [[\"quill-editor\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 3, vars: 0, template: function QuillEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtext(0, \"\\n  \");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵtext(2, \"\\n\");\n    } }, styles: [\"\\n    :host {\\n      display: inline-block;\\n    }\\n    \"], encapsulation: 2 });\nQuillEditorComponent.ctorParameters = () => [\n    { type: Injector },\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    },\n                    {\n                        multi: true,\n                        provide: NG_VALIDATORS,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    }\n                ], selector: 'quill-editor', template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`, styles: [\"\\n    :host {\\n      display: inline-block;\\n    }\\n    \"] }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc0.ChangeDetectorRef, decorators: [{\n                type: Inject,\n                args: [ChangeDetectorRef]\n            }] }, { type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, null); })();\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.sanitize = false;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) { return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewHTMLComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewHTMLComponent, selectors: [[\"quill-view-html\"]], inputs: { content: \"content\", sanitize: \"sanitize\", theme: \"theme\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 2, consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]], template: function QuillViewHTMLComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0, \"\\n  \");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtext(2, \"\\n    \");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 1);\n        ɵngcc0.ɵɵtext(4, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(5, \"\\n  \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(6, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    } }, dependencies: [ɵngcc2.NgClass], styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewHTMLComponent.ctorParameters = () => [\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: QuillService }\n];\nQuillViewHTMLComponent.propDecorators = {\n    content: [{ type: Input }],\n    theme: [{ type: Input }],\n    sanitize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view-html', template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"] }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: QuillService }]; }, { content: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) { return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nQuillViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewComponent, selectors: [[\"quill-view\"]], inputs: { sanitize: \"sanitize\", strict: \"strict\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", content: \"content\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 0, template: function QuillViewComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0, \"\\n\");\n    } }, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nQuillViewComponent.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    formats: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    strict: [{ type: Input }],\n    content: [{ type: Input }],\n    customModules: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    onEditorCreated: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view', template: `\n`, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { sanitize: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = function QuillModule_Factory(t) { return new (t || QuillModule)(); };\nQuillModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });\nQuillModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    QuillEditorComponent,\n                    QuillViewComponent,\n                    QuillViewHTMLComponent\n                ],\n                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; } }); })();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}