{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SharedNotificationService {\n  constructor() {\n    this.subject = new Subject();\n    this.logoutSubject = new Subject();\n  }\n  sendLoginEvent() {\n    this.subject.next();\n  }\n  getLoginEvent() {\n    return this.subject.asObservable();\n  }\n  sendLogoutEvent() {\n    this.logoutSubject.next();\n  }\n  getLogoutEvent() {\n    return this.logoutSubject.asObservable();\n  }\n}\nSharedNotificationService.ɵfac = function SharedNotificationService_Factory(t) {\n  return new (t || SharedNotificationService)();\n};\nSharedNotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedNotificationService,\n  factory: SharedNotificationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;;AAI1C,OAAM,MAAOC,yBAAyB;EAHtCC;IAIU,YAAO,GAAG,IAAIF,OAAO,EAAO;IAC5B,kBAAa,GAAG,IAAIA,OAAO,EAAO;;EAE1CG,cAAc;IACZ,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE;EACrB;EACAC,aAAa;IACX,OAAO,IAAI,CAACF,OAAO,CAACG,YAAY,EAAE;EACpC;EAEAC,eAAe;IACb,IAAI,CAACC,aAAa,CAACJ,IAAI,EAAE;EAC3B;EACAK,cAAc;IACZ,OAAO,IAAI,CAACD,aAAa,CAACF,YAAY,EAAE;EAC1C;;;mBAhBWN,yBAAyB;AAAA;;SAAzBA,yBAAyB;EAAAU,SAAzBV,yBAAyB;EAAAW,YAFxB;AAAM","names":["Subject","SharedNotificationService","constructor","sendLoginEvent","subject","next","getLoginEvent","asObservable","sendLogoutEvent","logoutSubject","getLogoutEvent","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/system-notification/SharedNotificationService.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedNotificationService {\n  private subject = new Subject<any>();\n  private logoutSubject = new Subject<any>();\n\n  sendLoginEvent(): void {\n    this.subject.next();\n  }\n  getLoginEvent(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  sendLogoutEvent(): void {\n    this.logoutSubject.next();\n  }\n  getLogoutEvent(): Observable<any> {\n    return this.logoutSubject.asObservable();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}