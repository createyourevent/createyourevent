{"ast":null,"code":"import { UntypedFormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"app/entities/property/service/property.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nexport class AdminTetrisComponent {\n  constructor(generalService, propertyService) {\n    this.generalService = generalService;\n    this.propertyService = propertyService;\n    this.commitment = 0;\n    this.linePoints = 0;\n    this.form = new UntypedFormGroup({});\n    this.model = {\n      commitment_tetris: 0,\n      linePoints_tetris: 0\n    };\n    this.fields = [{\n      key: 'commitment_tetris',\n      type: 'input',\n      templateOptions: {\n        label: 'Commitment points',\n        placeholder: 'Commitment for this game-round.',\n        required: true\n      }\n    }, {\n      key: 'linePoints_tetris',\n      type: 'input',\n      templateOptions: {\n        label: 'Line points',\n        placeholder: 'Points for a deleted line.',\n        required: true\n      }\n    }];\n  }\n  ngOnInit() {\n    this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n      const property = cp.body;\n      this.commitment = Number(property.value);\n    });\n    this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n      const property = cp.body;\n      this.linePoints = Number(property.value);\n    });\n  }\n  onSubmit() {\n    this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n      const property = cp.body;\n      property.value = this.model.commitment_tetris.toString();\n      this.propertyService.update(property).subscribe();\n    });\n    this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n      const property = cp.body;\n      property.value = this.model.linePoints_tetris.toString();\n      this.propertyService.update(property).subscribe();\n    });\n  }\n}\nAdminTetrisComponent.ɵfac = function AdminTetrisComponent_Factory(t) {\n  return new (t || AdminTetrisComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.PropertyService));\n};\nAdminTetrisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminTetrisComponent,\n  selectors: [[\"jhi-admin-tetris\"]],\n  decls: 8,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-button\"]],\n  template: function AdminTetrisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminTetrisComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelement(2, \"formly-form\", 1);\n      i0.ɵɵtext(3, \"\\n  \");\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵtext(5, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.FormlyForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,gBAAgB,QAAQ,gBAAgB;;;;;;AAUjD,OAAM,MAAOC,oBAAoB;EA2B/BC,YAAoBC,cAA8B,EAAUC,eAAgC;IAAxE,mBAAc,GAAdD,cAAc;IAA0B,oBAAe,GAAfC,eAAe;IA1B3E,eAAU,GAAG,CAAC;IACd,eAAU,GAAG,CAAC;IAEd,SAAI,GAAG,IAAIJ,gBAAgB,CAAC,EAAE,CAAC;IAC/B,UAAK,GAAG;MAAEK,iBAAiB,EAAE,CAAC;MAAEC,iBAAiB,EAAE;IAAC,CAAE;IACtD,WAAM,GAAwB,CAC5B;MACEC,GAAG,EAAE,mBAAmB;MACxBC,IAAI,EAAE,OAAO;MACbC,eAAe,EAAE;QACfC,KAAK,EAAE,mBAAmB;QAC1BC,WAAW,EAAE,iCAAiC;QAC9CC,QAAQ,EAAE;;KAEb,EACD;MACEL,GAAG,EAAE,mBAAmB;MACxBC,IAAI,EAAE,OAAO;MACbC,eAAe,EAAE;QACfC,KAAK,EAAE,aAAa;QACpBC,WAAW,EAAE,4BAA4B;QACzCC,QAAQ,EAAE;;KAEb,CACF;EAE8F;EAE/FC,QAAQ;IACN,IAAI,CAACV,cAAc,CAACW,iBAAiB,CAAC,mBAAmB,CAAC,CAACC,SAAS,CAACC,EAAE,IAAG;MACxE,MAAMC,QAAQ,GAAGD,EAAE,CAACE,IAAI;MACxB,IAAI,CAACC,UAAU,GAAGC,MAAM,CAACH,QAAS,CAACI,KAAK,CAAC;IAC3C,CAAC,CAAC;IACF,IAAI,CAAClB,cAAc,CAACW,iBAAiB,CAAC,mBAAmB,CAAC,CAACC,SAAS,CAACC,EAAE,IAAG;MACxE,MAAMC,QAAQ,GAAGD,EAAE,CAACE,IAAI;MACxB,IAAI,CAACI,UAAU,GAAGF,MAAM,CAACH,QAAS,CAACI,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACpB,cAAc,CAACW,iBAAiB,CAAC,mBAAmB,CAAC,CAACC,SAAS,CAACC,EAAE,IAAG;MACxE,MAAMC,QAAQ,GAAGD,EAAE,CAACE,IAAK;MACzBD,QAAQ,CAACI,KAAK,GAAG,IAAI,CAACG,KAAK,CAACnB,iBAAiB,CAACoB,QAAQ,EAAE;MACxD,IAAI,CAACrB,eAAe,CAACsB,MAAM,CAACT,QAAQ,CAAC,CAACF,SAAS,EAAE;IACnD,CAAC,CAAC;IACF,IAAI,CAACZ,cAAc,CAACW,iBAAiB,CAAC,mBAAmB,CAAC,CAACC,SAAS,CAACC,EAAE,IAAG;MACxE,MAAMC,QAAQ,GAAGD,EAAE,CAACE,IAAK;MACzBD,QAAQ,CAACI,KAAK,GAAG,IAAI,CAACG,KAAK,CAAClB,iBAAiB,CAACmB,QAAQ,EAAE;MACxD,IAAI,CAACrB,eAAe,CAACsB,MAAM,CAACT,QAAQ,CAAC,CAACF,SAAS,EAAE;IACnD,CAAC,CAAC;EACJ;;;mBAnDWd,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,+BAAiD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC9CD;MAAAA,iCAA2E;MAC3EA;MAAAA,iCAA4D;MAAAA,sBAAM;MAAAA,iBAAS;MAC7EA;MAAAA,iBAAO;MACPA;;;MAJMA,oCAAkB;MACTA,eAAa;MAAbA,+BAAa","names":["UntypedFormGroup","AdminTetrisComponent","constructor","generalService","propertyService","commitment_tetris","linePoints_tetris","key","type","templateOptions","label","placeholder","required","ngOnInit","findPropertyByKey","subscribe","cp","property","body","commitment","Number","value","linePoints","onSubmit","model","toString","update","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/tetris/admin-tetris/admin-tetris.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/games/tetris/admin-tetris/admin-tetris.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { PropertyService } from 'app/entities/property/service/property.service';\nimport { GeneralService } from 'app/general.service';\n\n@Component({\n  selector: 'jhi-admin-tetris',\n  templateUrl: './admin-tetris.component.html',\n  styleUrls: ['./admin-tetris.component.scss'],\n})\nexport class AdminTetrisComponent implements OnInit {\n  commitment = 0;\n  linePoints = 0;\n\n  form = new UntypedFormGroup({});\n  model = { commitment_tetris: 0, linePoints_tetris: 0 };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'commitment_tetris',\n      type: 'input',\n      templateOptions: {\n        label: 'Commitment points',\n        placeholder: 'Commitment for this game-round.',\n        required: true,\n      },\n    },\n    {\n      key: 'linePoints_tetris',\n      type: 'input',\n      templateOptions: {\n        label: 'Line points',\n        placeholder: 'Points for a deleted line.',\n        required: true,\n      },\n    },\n  ];\n\n  constructor(private generalService: GeneralService, private propertyService: PropertyService) {}\n\n  ngOnInit(): void {\n    this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n      const property = cp.body;\n      this.commitment = Number(property!.value);\n    });\n    this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n      const property = cp.body;\n      this.linePoints = Number(property!.value);\n    });\n  }\n\n  onSubmit(): void {\n    this.generalService.findPropertyByKey('commitment_tetris').subscribe(cp => {\n      const property = cp.body!;\n      property.value = this.model.commitment_tetris.toString();\n      this.propertyService.update(property).subscribe();\n    });\n    this.generalService.findPropertyByKey('linePoints_tetris').subscribe(cp => {\n      const property = cp.body!;\n      property.value = this.model.linePoints_tetris.toString();\n      this.propertyService.update(property).subscribe();\n    });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n  <button type=\"submit\" class=\"btn btn-primary submit-button\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}