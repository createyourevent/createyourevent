{"ast":null,"code":"import { Address } from 'app/entities/address/address.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/location/service/location.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./event.service\";\nimport * as i5 from \"app/entities/address/service/address.service\";\nimport * as i6 from \"app/google-geocode.service\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../../shared/language/translate.directive\";\nimport * as i9 from \"../../shared/alert/alert-error.component\";\nimport * as i10 from \"ngx-google-places-autocomplete\";\nexport class AddressUpdateComponent {\n  constructor(locationService, activatedRoute, fb, eventUserService, route, addressService, googleGeocoderService) {\n    this.locationService = locationService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.eventUserService = eventUserService;\n    this.route = route;\n    this.addressService = addressService;\n    this.googleGeocoderService = googleGeocoderService;\n    this.isSaving = false;\n    this.formattedaddress = '';\n    this.editForm = this.fb.group({\n      id: [],\n      address: [],\n      lat: [],\n      lng: []\n    });\n  }\n  ngOnInit() {\n    let locationId = 0;\n    this.route.params.subscribe(params => {\n      locationId = params['locationId'];\n      this.eventUserService.findAddressByLocationId(locationId).subscribe(address => {\n        this.address = address.body;\n        this.updateForm();\n      });\n    });\n  }\n  updateForm() {\n    this.editForm.patchValue({\n      id: this.address.id,\n      address: this.address.address,\n      lat: this.address.lat,\n      lng: this.address.lng\n    });\n  }\n  previousState() {\n    window.history.back();\n  }\n  save() {\n    this.isSaving = true;\n    const address = this.createFromForm();\n    if (address.id !== undefined) {\n      this.subscribeToSaveResponse(this.addressService.update(address));\n    } else {\n      this.subscribeToSaveResponse(this.addressService.create(address));\n    }\n  }\n  createFromForm() {\n    console.log(this.editForm.get(['address']).value);\n    return {\n      ...new Address(),\n      id: this.editForm.get(['id']).value,\n      address: this.formattedaddress,\n      lat: this.lat,\n      lng: this.lng\n    };\n  }\n  subscribeToSaveResponse(result) {\n    result.subscribe(() => this.onSaveSuccess(), () => this.onSaveError());\n  }\n  onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n  onSaveError() {\n    this.isSaving = false;\n  }\n  addressChange(address) {\n    this.formattedaddress = address.formatted_address;\n    const queryParam = this.formattedaddress.replace(' ', '+');\n    this.googleGeocoderService.getFromAddress(queryParam).subscribe(res => {\n      this.geocoder = res.body['results'];\n      const geometry = this.geocoder['geometry'];\n      this.lat = geometry.location.lat();\n      this.lng = geometry.location.lng();\n    });\n  }\n}\nAddressUpdateComponent.ɵfac = function AddressUpdateComponent_Factory(t) {\n  return new (t || AddressUpdateComponent)(i0.ɵɵdirectiveInject(i1.LocationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.EventService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i5.AddressService), i0.ɵɵdirectiveInject(i6.GoogleGeocodeService));\n};\nAddressUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddressUpdateComponent,\n  selectors: [[\"jhi-address-update\"]],\n  decls: 44,\n  vars: 2,\n  consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [\"name\", \"editForm\", \"role\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"jhi-address-heading\", \"jhiTranslate\", \"createyoureventApp.address.home.createOrEditLabel\"], [1, \"form-group\"], [\"jhiTranslate\", \"createyoureventApp.address.address\", \"for\", \"field_address\", 1, \"form-control-label\"], [\"ngx-google-places-autocomplete\", \"\", \"type\", \"text\", \"name\", \"address\", \"id\", \"field_address\", \"formControlName\", \"address\", 1, \"form-control\", 3, \"onAddressChange\"], [\"type\", \"button\", \"id\", \"cancel-save\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"icon\", \"ban\"], [\"jhiTranslate\", \"entity.action.cancel\"], [\"type\", \"submit\", \"id\", \"save-entity\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"icon\", \"save\"], [\"jhiTranslate\", \"entity.action.save\"]],\n  template: function AddressUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddressUpdateComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵelementStart(6, \"h2\", 3);\n      i0.ɵɵtext(7, \"Create or edit a Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n            \");\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtext(10, \"\\n                \");\n      i0.ɵɵelement(11, \"jhi-alert-error\");\n      i0.ɵɵtext(12, \"\\n\\n                \");\n      i0.ɵɵelementStart(13, \"div\", 4);\n      i0.ɵɵtext(14, \"\\n                    \");\n      i0.ɵɵelementStart(15, \"label\", 5);\n      i0.ɵɵtext(16, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n                    \");\n      i0.ɵɵelementStart(18, \"input\", 6);\n      i0.ɵɵlistener(\"onAddressChange\", function AddressUpdateComponent_Template_input_onAddressChange_18_listener($event) {\n        return ctx.addressChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n\\n            \");\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtext(23, \"\\n                \");\n      i0.ɵɵelementStart(24, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AddressUpdateComponent_Template_button_click_24_listener() {\n        return ctx.previousState();\n      });\n      i0.ɵɵtext(25, \"\\n                    \");\n      i0.ɵɵelement(26, \"fa-icon\", 8);\n      i0.ɵɵtext(27, \"\\u00A0\");\n      i0.ɵɵelementStart(28, \"span\", 9);\n      i0.ɵɵtext(29, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n\\n                \");\n      i0.ɵɵelementStart(32, \"button\", 10);\n      i0.ɵɵtext(33, \"\\n                    \");\n      i0.ɵɵelement(34, \"fa-icon\", 11);\n      i0.ɵɵtext(35, \"\\u00A0\");\n      i0.ɵɵelementStart(36, \"span\", 12);\n      i0.ɵɵtext(37, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(41, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid || ctx.isSaving);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i7.FaIconComponent, i3.FormGroupDirective, i3.FormControlName, i8.TranslateDirective, i9.AlertErrorComponent, i10.GooglePlaceDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Address","AddressUpdateComponent","constructor","locationService","activatedRoute","fb","eventUserService","route","addressService","googleGeocoderService","group","id","address","lat","lng","ngOnInit","locationId","params","subscribe","findAddressByLocationId","body","updateForm","editForm","patchValue","previousState","window","history","back","save","isSaving","createFromForm","undefined","subscribeToSaveResponse","update","create","console","log","get","value","formattedaddress","result","onSaveSuccess","onSaveError","addressChange","formatted_address","queryParam","replace","getFromAddress","res","geocoder","geometry","location","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/event/address-update.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/event/address-update.component.html"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { IAddress, Address } from 'app/entities/address/address.model';\nimport { AddressService } from 'app/entities/address/service/address.service';\nimport { LocationService } from 'app/entities/location/service/location.service';\nimport { GoogleGeocodeService } from 'app/google-geocode.service';\nimport { Observable } from 'rxjs';\nimport { EventService } from './event.service';\n\n@Component({\n  selector: 'jhi-address-update',\n  templateUrl: './address-update.component.html',\n})\nexport class AddressUpdateComponent implements OnInit {\n  isSaving = false;\n  address!: IAddress;\n  formattedaddress = '';\n  lat!: number;\n  lng!: number;\n  geocoder!: google.maps.GeocoderResult;\n\n  editForm = this.fb.group({\n    id: [],\n    address: [],\n    lat: [],\n    lng: [],\n  });\n\n  constructor(\n    protected locationService: LocationService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: UntypedFormBuilder,\n    private eventUserService: EventService,\n    private route: ActivatedRoute,\n    private addressService: AddressService,\n    private googleGeocoderService: GoogleGeocodeService\n  ) {}\n\n  ngOnInit(): void {\n    let locationId = 0;\n    this.route.params.subscribe(params => {\n      locationId = params['locationId'];\n\n      this.eventUserService.findAddressByLocationId(locationId).subscribe(address => {\n        this.address = address.body!;\n\n        this.updateForm();\n      });\n    });\n  }\n\n  updateForm(): void {\n    this.editForm.patchValue({\n      id: this.address.id,\n      address: this.address.address,\n      lat: this.address.lat,\n      lng: this.address.lng,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const address = this.createFromForm();\n    if (address.id !== undefined) {\n      this.subscribeToSaveResponse(this.addressService.update(address));\n    } else {\n      this.subscribeToSaveResponse(this.addressService.create(address));\n    }\n  }\n\n  private createFromForm(): IAddress {\n    console.log(this.editForm.get(['address'])!.value);\n    return {\n      ...new Address(),\n      id: this.editForm.get(['id'])!.value,\n      address: this.formattedaddress,\n      lat: this.lat,\n      lng: this.lng,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IAddress>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  public addressChange(address: any): void {\n    this.formattedaddress = address.formatted_address;\n    const queryParam = this.formattedaddress.replace(' ', '+');\n    this.googleGeocoderService.getFromAddress(queryParam).subscribe((res: any) => {\n      this.geocoder = res.body!['results'];\n      const geometry = this.geocoder['geometry'];\n      this.lat = geometry.location.lat();\n      this.lng = geometry.location.lng();\n    });\n  }\n}\n","<div class=\"row justify-content-center\">\n    <div class=\"col-8\">\n        <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n            <h2 id=\"jhi-address-heading\" jhiTranslate=\"createyoureventApp.address.home.createOrEditLabel\">Create or edit a Address</h2>\n\n            <div>\n                <jhi-alert-error></jhi-alert-error>\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" jhiTranslate=\"createyoureventApp.address.address\" for=\"field_address\">Address</label>\n                    <input ngx-google-places-autocomplete type=\"text\" class=\"form-control\" name=\"address\" id=\"field_address\" formControlName=\"address\" (onAddressChange)=\"addressChange($event)\"/>\n                </div>\n            </div>\n\n            <div>\n                <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n                    <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n                </button>\n\n                <button type=\"submit\" id=\"save-entity\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\n                    <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}