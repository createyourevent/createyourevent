{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ViewChildren, HostListener, Pipe, ViewChild, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/platform-browser';\nimport * as ɵngcc4 from '@angular/forms';\nconst _c0 = [\"chatWindow\"];\nfunction NgChat_link_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"link\", 2);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"href\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.customTheme), ɵngcc0.ɵɵsanitizeResourceUrl);\n  }\n}\nconst _c1 = function (a2) {\n  return {\n    \"ng-chat-window\": true,\n    \"primary-outline-color\": true,\n    \"ng-chat-window-collapsed\": a2\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"right\": a0\n  };\n};\nfunction NgChat_div_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1, \"\\n        \");\n    ɵngcc0.ɵɵelementStart(2, \"ng-chat-window\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"onMessagesSeen\", function NgChat_div_2_div_5_Template_ng_chat_window_onMessagesSeen_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.onWindowMessagesSeen($event));\n    })(\"onMessageSent\", function NgChat_div_2_div_5_Template_ng_chat_window_onMessageSent_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r8.onWindowMessageSent($event));\n    })(\"onTabTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onTabTriggered_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r9.onWindowTabTriggered($event));\n    })(\"onChatWindowClosed\", function NgChat_div_2_div_5_Template_ng_chat_window_onChatWindowClosed_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r10.onWindowChatClosed($event));\n    })(\"onOptionTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onOptionTriggered_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r11.onWindowOptionTriggered($event));\n    })(\"onLoadHistoryTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onLoadHistoryTriggered_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r12.fetchMessageHistory($event));\n    });\n    ɵngcc0.ɵɵtext(4, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(5, \"\\n    \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const window_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c1, window_r3.isCollapsed))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(14, _c2, (!ctx_r2.hideFriendsList ? ctx_r2.friendsListWidth : 0) + 20 + ctx_r2.windowSizeFactor * i_r4 + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"fileUploadAdapter\", ctx_r2.fileUploadAdapter)(\"localization\", ctx_r2.localization)(\"userId\", ctx_r2.userId)(\"window\", window_r3)(\"showOptions\", ctx_r2.groupAdapter)(\"emojisEnabled\", ctx_r2.emojisEnabled)(\"linkfyEnabled\", ctx_r2.linkfyEnabled)(\"showMessageDate\", ctx_r2.showMessageDate)(\"messageDatePipeFormat\", ctx_r2.messageDatePipeFormat)(\"hasPagedHistory\", ctx_r2.hasPagedHistory);\n  }\n}\nfunction NgChat_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1, \"\\n    \");\n    ɵngcc0.ɵɵelementStart(2, \"ng-chat-friends-list\", 4);\n    ɵngcc0.ɵɵlistener(\"onParticipantClicked\", function NgChat_div_2_Template_ng_chat_friends_list_onParticipantClicked_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r13.onParticipantClickedFromFriendsList($event));\n    })(\"onOptionPromptCanceled\", function NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptCanceled_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15.onOptionPromptCanceled());\n    })(\"onOptionPromptConfirmed\", function NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptConfirmed_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r16.onOptionPromptConfirmed($event));\n    });\n    ɵngcc0.ɵɵtext(3, \"\\n    \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\n    \");\n    ɵngcc0.ɵɵtemplate(5, NgChat_div_2_div_5_Template, 6, 16, \"div\", 5);\n    ɵngcc0.ɵɵtext(6, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.theme);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"localization\", ctx_r1.localization)(\"shouldDisplay\", !ctx_r1.hideFriendsList)(\"userId\", ctx_r1.userId)(\"isCollapsed\", ctx_r1.isCollapsed)(\"searchEnabled\", ctx_r1.searchEnabled)(\"participants\", ctx_r1.participants)(\"participantsResponse\", ctx_r1.participantsResponse)(\"participantsInteractedWith\", ctx_r1.participantsInteractedWith)(\"windows\", ctx_r1.windows)(\"currentActiveOption\", ctx_r1.currentActiveOption);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.windows);\n  }\n}\nfunction NgChatOptionsComponent_div_0_a_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatOptionsComponent_div_0_a_10_Template_a_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const option_r2 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.onOptionClicked(option_r2));\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"primary-text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\", option_r2.displayLabel, \"\\n\\t\\t\");\n  }\n}\nfunction NgChatOptionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n    ɵngcc0.ɵɵtext(5, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(8, \"div\", 4);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatOptionsComponent_div_0_a_10_Template, 2, 2, \"a\", 5);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(12, \"      \\n\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(10);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n  }\n}\nfunction NgChatFriendsListComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_8_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.onFriendsListActionCancelClicked());\n    });\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 7);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(4, \"i\", 8);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(7, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_8_Template_a_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.onFriendsListActionConfirmClicked());\n    });\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"i\", 10);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgChatFriendsListComponent_div_0_input_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 11);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatFriendsListComponent_div_0_input_10_Template_input_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r7.searchInput = $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r2.localization.searchPlaceholder)(\"ngModel\", ctx_r2.searchInput);\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 21);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r15.onFriendsListCheckboxChange(user_r10, $event.target.checked));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r11.isUserSelectedFromFriendsList(user_r10));\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 23);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_img_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 24);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, user_r10.avatar), ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.unreadMessagesTotalByParticipant(user_r10));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"ng-chat-friends-list-selectable-offset\": a0,\n    \"ng-chat-friends-list-container\": true\n  };\n};\nconst _c4 = function (a1, a2, a3, a4) {\n  return {\n    \"ng-chat-participant-status\": true,\n    \"online\": a1,\n    \"busy\": a2,\n    \"away\": a3,\n    \"offline\": a4\n  };\n};\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template, 1, 1, \"input\", 14);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_ul_12_li_2_Template_div_click_4_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r22);\n      const user_r10 = restoredCtx.$implicit;\n      const ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r21.onUserClick(user_r10));\n    });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatFriendsListComponent_div_0_ul_12_li_2_div_6_Template, 4, 0, \"div\", 16);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_ul_12_li_2_img_8_Template, 2, 3, \"img\", 17);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(10, \"strong\", 18);\n    ɵngcc0.ɵɵtext(11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(13, \"span\", 19);\n    ɵngcc0.ɵɵtext(14, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(15, NgChatFriendsListComponent_div_0_ul_12_li_2_span_15_Template, 2, 1, \"span\", 20);\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(17, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.currentActiveOption && ctx_r9.currentActiveOption.validateContext(user_r10));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r9.currentActiveOption));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !user_r10.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", user_r10.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(user_r10.displayName);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r9.chatParticipantStatusDescriptor(user_r10.status, ctx_r9.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(11, _c4, user_r10.status == ctx_r9.ChatParticipantStatus.Online, user_r10.status == ctx_r9.ChatParticipantStatus.Busy, user_r10.status == ctx_r9.ChatParticipantStatus.Away, user_r10.status == ctx_r9.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.unreadMessagesTotalByParticipant(user_r10).length > 0);\n  }\n}\nconst _c5 = function (a0) {\n  return {\n    \"offset-search\": a0\n  };\n};\nfunction NgChatFriendsListComponent_div_0_ul_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 12);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatFriendsListComponent_div_0_ul_12_li_2_Template, 18, 16, \"li\", 13);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r3.searchEnabled));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredParticipants);\n  }\n}\nconst _c6 = function (a2) {\n  return {\n    \"primary-outline-color\": true,\n    \"primary-background\": true,\n    \"ng-chat-people-collapsed\": a2\n  };\n};\nfunction NgChatFriendsListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_Template_a_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      const ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r23.onChatTitleClicked());\n    });\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_div_8_Template, 12, 0, \"div\", 3);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatFriendsListComponent_div_0_input_10_Template, 1, 2, \"input\", 4);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(12, NgChatFriendsListComponent_div_0_ul_12_Template, 4, 4, \"ul\", 5);\n    ɵngcc0.ɵɵtext(13, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c6, ctx_r0.isCollapsed));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\", ctx_r0.localization.title, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.currentActiveOption);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.searchEnabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isCollapsed);\n  }\n}\nconst _c7 = [\"chatMessages\"];\nconst _c8 = [\"nativeFileInput\"];\nconst _c9 = [\"chatWindowInput\"];\nfunction NgChatWindowComponent_ng_container_0_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.unreadMessagesTotal(ctx_r2.window));\n  }\n}\nfunction NgChatWindowComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_div_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.onChatWindowClicked(ctx_r3.window));\n    });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(6, \"strong\", 3);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"span\", 4);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(11, NgChatWindowComponent_ng_container_0_span_11_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(14, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_a_click_14_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5.onCloseChatWindow());\n    });\n    ɵngcc0.ɵɵtext(15, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(17, \"\\n\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\\t\", ctx_r0.window.participant.displayName, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.chatParticipantStatusDescriptor(ctx_r0.window.participant.status, ctx_r0.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c4, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Online, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Busy, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Away, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.unreadMessagesTotal(ctx_r0.window).length > 0);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.unreadMessagesTotal(ctx_r6.window));\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 18);\n    ɵngcc0.ɵɵtext(3, \"Loading history...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_div_25_Template_a_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r13.fetchMessageHistory(ctx_r13.window));\n    });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.localization.loadMessageHistoryPlaceholder);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 28);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 29);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r22.getChatWindowAvatar(ctx_r22.window.participant, message_r15)), ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 30);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"groupMessageDisplayName\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r23.window.participant, message_r15));\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_div_2_Template, 4, 0, \"div\", 24);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_img_4_Template, 2, 3, \"img\", 25);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_span_6_Template, 3, 4, \"span\", 26);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.window.participant.participantType == ctx_r17.ChatParticipantType.Group);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_div_6_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r27.messageDatePipeFormat));\n  }\n}\nconst _c10 = function (a0, a1) {\n  return {\n    \"sent-chat-message-container\": a0,\n    \"received-chat-message-container\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_2_div_27_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n          \");\n    ɵngcc0.ɵɵelement(2, \"span\", 31);\n    ɵngcc0.ɵɵpipe(3, \"linkfy\");\n    ɵngcc0.ɵɵpipe(4, \"emojify\");\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_div_6_span_6_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c10, message_r15.fromId == ctx_r18.userId, message_r15.fromId != ctx_r18.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ɵngcc0.ɵɵpipeBind2(3, 3, ɵngcc0.ɵɵpipeBind2(4, 6, message_r15.message, ctx_r18.emojisEnabled), ctx_r18.linkfyEnabled), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.showMessageDate && message_r15.dateSent);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_div_8_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r30.messageDatePipeFormat));\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\n          \");\n    ɵngcc0.ɵɵelement(2, \"img\", 34);\n    ɵngcc0.ɵɵtext(3, \"\\n\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_2_div_27_div_8_span_4_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c10, message_r15.fromId == ctx_r19.userId, message_r15.fromId != ctx_r19.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", message_r15.message, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r19.showMessageDate && message_r15.dateSent);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_div_27_div_10_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 40);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", message_r15.fileSizeInBytes, \" Bytes\");\n  }\n}\nconst _c11 = function (a1) {\n  return {\n    \"file-message-container\": true,\n    \"received\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_2_div_27_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 35);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(4, \"i\", 36);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(7, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_div_27_div_10_Template_a_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r35.markMessagesAsRead([message_r15]));\n    });\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(9, \"span\", 38);\n    ɵngcc0.ɵɵtext(10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(12, NgChatWindowComponent_ng_container_2_div_27_div_10_span_12_Template, 2, 1, \"span\", 39);\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(14, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c11, message_r15.fromId != ctx_r20.userId));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵattribute(\"href\", message_r15.downloadUrl, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"title\", message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(message_r15.message);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r15.fileSizeInBytes);\n  }\n}\nconst _c12 = function (a1) {\n  return {\n    \"ng-chat-message\": true,\n    \"ng-chat-message-received\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_2_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_Template, 8, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerStart(4, 22);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_div_6_Template, 8, 12, \"div\", 23);\n    ɵngcc0.ɵɵtext(7, \"\\n        \");\n    ɵngcc0.ɵɵtemplate(8, NgChatWindowComponent_ng_container_2_div_27_div_8_Template, 6, 6, \"div\", 23);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatWindowComponent_ng_container_2_div_27_div_10_Template, 15, 7, \"div\", 23);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c12, message_r15.fromId != ctx_r10.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.isAvatarVisible(ctx_r10.window, message_r15, i_r16));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", message_r15.type);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Text);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Image);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.File);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 45);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r43);\n      const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r42.triggerNativeFileUpload(ctx_r42.window));\n    });\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 46);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n  }\n}\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template, 4, 0, \"a\", 41);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"input\", 42, 43);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatWindowComponent_ng_container_2_ng_container_37_Template_input_change_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r45);\n      const ctx_r44 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r44.onFileChosen(ctx_r44.window));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(7, NgChatWindowComponent_ng_container_2_ng_container_37_div_7_Template, 1, 0, \"div\", 44);\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.isUploadingFile(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r12.getUniqueFileUploadInstanceId(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.isUploadingFile(ctx_r12.window));\n  }\n}\nconst _c13 = function (a1) {\n  return {\n    \"chat-window-input\": true,\n    \"has-side-action\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_Template_div_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r46 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r46.onChatWindowClicked(ctx_r46.window));\n    });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(6, \"strong\", 3);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"span\", 4);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(11, NgChatWindowComponent_ng_container_2_span_11_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(14, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_Template_a_click_14_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r48 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r48.onCloseChatWindow());\n    });\n    ɵngcc0.ɵɵtext(15, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(17, \"ng-chat-options\", 8);\n    ɵngcc0.ɵɵlistener(\"activeOptionTrackerChange\", function NgChatWindowComponent_ng_container_2_Template_ng_chat_options_activeOptionTrackerChange_17_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r49 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r49.activeOptionTrackerChange($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(18, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(19, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(20, \"div\", 9, 10);\n    ɵngcc0.ɵɵtext(22, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(23, NgChatWindowComponent_ng_container_2_div_23_Template, 5, 0, \"div\", 11);\n    ɵngcc0.ɵɵtext(24, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(25, NgChatWindowComponent_ng_container_2_div_25_Template, 5, 1, \"div\", 12);\n    ɵngcc0.ɵɵtext(26, \"\\n\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(27, NgChatWindowComponent_ng_container_2_div_27_Template, 13, 8, \"div\", 13);\n    ɵngcc0.ɵɵtext(28, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(29, \"\\n\\n\\t\");\n    ɵngcc0.ɵɵelementStart(30, \"div\", 14);\n    ɵngcc0.ɵɵtext(31, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(32, \"input\", 15, 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatWindowComponent_ng_container_2_Template_input_ngModelChange_32_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r50 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r50.window.newMessage = $event);\n    })(\"keydown\", function NgChatWindowComponent_ng_container_2_Template_input_keydown_32_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r51 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r51.onChatInputTyped($event, ctx_r51.window));\n    })(\"blur\", function NgChatWindowComponent_ng_container_2_Template_input_blur_32_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r52 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r52.toggleWindowFocus(ctx_r52.window));\n    })(\"focus\", function NgChatWindowComponent_ng_container_2_Template_input_focus_32_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r53 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r53.toggleWindowFocus(ctx_r53.window));\n    });\n    ɵngcc0.ɵɵpipe(34, \"emojify\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(35, \"\\n\\n\\t\\t\");\n    ɵngcc0.ɵɵtext(36, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(37, NgChatWindowComponent_ng_container_2_ng_container_37_Template, 9, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵtext(38, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(39, \"\\n\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\\t\", ctx_r1.window.participant.displayName, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.chatParticipantStatusDescriptor(ctx_r1.window.participant.status, ctx_r1.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(17, _c4, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Online, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Busy, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Away, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.unreadMessagesTotal(ctx_r1.window).length > 0);\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"ng-chat-options-container\")(\"options\", ctx_r1.defaultWindowOptions(ctx_r1.window));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.hasPagedHistory && ctx_r1.window.hasMoreMessages && !ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.window.messages);\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ɵngcc0.ɵɵpipeBind2(34, 14, ctx_r1.window.newMessage, ctx_r1.emojisEnabled))(\"placeholder\", ctx_r1.localization.messagePlaceholder)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(22, _c13, ctx_r1.fileUploadAdapter));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.fileUploadAdapter);\n  }\n}\nclass ChatAdapter {\n  constructor() {\n    // ### Abstract adapter methods ###\n    // Event handlers\n    /** @internal */\n    this.friendsListChangedHandler = participantsResponse => {};\n    /** @internal */\n    this.messageReceivedHandler = (participant, message) => {};\n  }\n  // ### Adapter/Chat income/ingress events ###\n  onFriendsListChanged(participantsResponse) {\n    this.friendsListChangedHandler(participantsResponse);\n  }\n  onMessageReceived(participant, message) {\n    this.messageReceivedHandler(participant, message);\n  }\n}\nvar MessageType;\n(function (MessageType) {\n  MessageType[MessageType[\"Text\"] = 1] = \"Text\";\n  MessageType[MessageType[\"File\"] = 2] = \"File\";\n  MessageType[MessageType[\"Image\"] = 3] = \"Image\";\n})(MessageType || (MessageType = {}));\nclass Message {\n  constructor() {\n    this.type = MessageType.Text;\n  }\n}\nvar ChatParticipantStatus;\n(function (ChatParticipantStatus) {\n  ChatParticipantStatus[ChatParticipantStatus[\"Online\"] = 0] = \"Online\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Busy\"] = 1] = \"Busy\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Away\"] = 2] = \"Away\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Offline\"] = 3] = \"Offline\";\n})(ChatParticipantStatus || (ChatParticipantStatus = {}));\nvar ChatParticipantType;\n(function (ChatParticipantType) {\n  ChatParticipantType[ChatParticipantType[\"User\"] = 0] = \"User\";\n  ChatParticipantType[ChatParticipantType[\"Group\"] = 1] = \"Group\";\n})(ChatParticipantType || (ChatParticipantType = {}));\nclass User {\n  constructor() {\n    this.participantType = ChatParticipantType.User;\n  }\n}\nclass ParticipantResponse {}\nclass ParticipantMetadata {\n  constructor() {\n    this.totalUnreadMessages = 0;\n  }\n}\nclass Window {\n  constructor(participant, isLoadingHistory, isCollapsed) {\n    this.messages = [];\n    this.newMessage = \"\";\n    // UI Behavior properties\n    this.isCollapsed = false;\n    this.isLoadingHistory = false;\n    this.hasFocus = false;\n    this.hasMoreMessages = true;\n    this.historyPage = 0;\n    this.participant = participant;\n    this.messages = [];\n    this.isLoadingHistory = isLoadingHistory;\n    this.hasFocus = false; // This will be triggered when the 'newMessage' input gets the current focus\n    this.isCollapsed = isCollapsed;\n    this.hasMoreMessages = false;\n    this.historyPage = 0;\n  }\n}\n\n/**\r\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr.\r\n * You will need an existing @see ChatAdapter implementation\r\n */\nclass PagedHistoryChatAdapter extends ChatAdapter {}\nvar Theme;\n(function (Theme) {\n  Theme[\"Custom\"] = \"custom-theme\";\n  Theme[\"Light\"] = \"light-theme\";\n  Theme[\"Dark\"] = \"dark-theme\";\n})(Theme || (Theme = {}));\n\n// Poached from: https://github.com/Steve-Fenton/TypeScriptUtilities\n// @dynamic\nclass Guid {\n  static newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n}\nclass Group {\n  constructor(participants) {\n    this.id = Guid.newGuid();\n    this.participantType = ChatParticipantType.Group;\n    this.chattingTo = participants;\n    this.status = ChatParticipantStatus.Online;\n    // TODO: Add some customization for this in future releases\n    this.displayName = participants.map(p => p.displayName).sort((first, second) => second > first ? -1 : 1).join(\", \");\n  }\n}\nvar ScrollDirection;\n(function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"Top\"] = 0] = \"Top\";\n  ScrollDirection[ScrollDirection[\"Bottom\"] = 1] = \"Bottom\";\n})(ScrollDirection || (ScrollDirection = {}));\nclass DefaultFileUploadAdapter {\n  /**\r\n   * @summary Basic file upload adapter implementation for HTTP request form file consumption\r\n   * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\r\n   */\n  constructor(_serverEndpointUrl, _http) {\n    this._serverEndpointUrl = _serverEndpointUrl;\n    this._http = _http;\n  }\n  uploadFile(file, participantId) {\n    const formData = new FormData();\n    //formData.append('ng-chat-sender-userid', currentUserId);\n    formData.append('ng-chat-participant-id', participantId);\n    formData.append('file', file, file.name);\n    return this._http.post(this._serverEndpointUrl, formData);\n    // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\n    // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\n    //     reportProgress: true\n    // });\n    // const uploadProgress = new Subject<number>();\n    // const uploadStatus = uploadProgress.asObservable();\n    //const responsePromise = new Subject<Message>();\n    // this._http\n    //     .request(fileRequest)\n    //     .subscribe(event => {\n    //         // if (event.type == HttpEventType.UploadProgress)\n    //         // {\n    //         //     const percentDone = Math.round(100 * event.loaded / event.total);\n    //         //     uploadProgress.next(percentDone);\n    //         // }\n    //         // else if (event instanceof HttpResponse)\n    //         // {\n    //         //     uploadProgress.complete();\n    //         // }\n    //     });\n  }\n}\n\nclass NgChat {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    // Exposes enums for the ng-template\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this._isDisabled = false;\n    this.isCollapsed = false;\n    this.maximizeWindowOnNewMessage = true;\n    this.pollFriendsList = false;\n    this.pollingInterval = 5000;\n    this.historyEnabled = true;\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.audioEnabled = true;\n    this.searchEnabled = true;\n    this.audioSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\n    this.persistWindowsState = true;\n    this.title = \"Friends\";\n    this.messagePlaceholder = \"Type a message\";\n    this.searchPlaceholder = \"Search\";\n    this.browserNotificationsEnabled = true;\n    this.browserNotificationIconSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\n    this.browserNotificationTitle = \"New message from\";\n    this.historyPageSize = 10;\n    this.hideFriendsList = false;\n    this.hideFriendsListOnUnsupportedViewport = true;\n    this.theme = Theme.Light;\n    this.messageDatePipeFormat = \"short\";\n    this.showMessageDate = true;\n    this.isViewportOnMobileEnabled = false;\n    this.onParticipantClicked = new EventEmitter();\n    this.onParticipantChatOpened = new EventEmitter();\n    this.onParticipantChatClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.browserNotificationsBootstrapped = false;\n    this.hasPagedHistory = false;\n    // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\n    this.statusDescription = {\n      online: 'Online',\n      busy: 'Busy',\n      away: 'Away',\n      offline: 'Offline'\n    };\n    this.participantsInteractedWith = [];\n    // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\n    this.windowSizeFactor = 320;\n    // Total width size of the friends list section\n    this.friendsListWidth = 262;\n    // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\n    this.unsupportedViewport = false;\n    this.windows = [];\n    this.isBootstrapped = false;\n  }\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  set isDisabled(value) {\n    this._isDisabled = value;\n    if (value) {\n      // To address issue https://github.com/rpaschoal/ng-chat/issues/120\n      window.clearInterval(this.pollingIntervalWindowInstance);\n    } else {\n      this.activateFriendListFetch();\n    }\n  }\n  get localStorageKey() {\n    return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\n  }\n\n  ngOnInit() {\n    this.bootstrapChat();\n  }\n  onResize(event) {\n    this.viewPortTotalArea = event.target.innerWidth;\n    this.NormalizeWindows();\n  }\n  // Checks if there are more opened windows than the view port can display\n  NormalizeWindows() {\n    const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\n    const difference = this.windows.length - maxSupportedOpenedWindows;\n    if (difference >= 0) {\n      this.windows.splice(this.windows.length - difference);\n    }\n    this.updateWindowsState(this.windows);\n    // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\n    this.unsupportedViewport = this.isViewportOnMobileEnabled ? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\n  }\n  // Initializes the chat plugin and the messaging adapter\n  bootstrapChat() {\n    let initializationException = null;\n    if (this.adapter != null && this.userId != null) {\n      try {\n        this.viewPortTotalArea = window.innerWidth;\n        this.initializeTheme();\n        this.initializeDefaultText();\n        this.initializeBrowserNotifications();\n        // Binding event listeners\n        this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\n        this.adapter.friendsListChangedHandler = participantsResponse => this.onFriendsListChanged(participantsResponse);\n        this.activateFriendListFetch();\n        this.bufferAudioFile();\n        this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\n        if (this.fileUploadUrl && this.fileUploadUrl !== \"\") {\n          this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\n        }\n        this.NormalizeWindows();\n        this.isBootstrapped = true;\n      } catch (ex) {\n        initializationException = ex;\n      }\n    }\n    if (!this.isBootstrapped) {\n      console.error(\"ng-chat component couldn't be bootstrapped.\");\n      if (this.userId == null) {\n        console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\n      }\n      if (this.adapter == null) {\n        console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\n      }\n      if (initializationException) {\n        console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\n        console.error(initializationException);\n      }\n    }\n  }\n  activateFriendListFetch() {\n    if (this.adapter) {\n      // Loading current users list\n      if (this.pollFriendsList) {\n        // Setting a long poll interval to update the friends list\n        this.fetchFriendsList(true);\n        this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\n      } else {\n        // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\n        this.fetchFriendsList(true);\n      }\n    }\n  }\n  // Initializes browser notifications\n  initializeBrowserNotifications() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.browserNotificationsEnabled && \"Notification\" in window) {\n        if ((yield Notification.requestPermission()) === \"granted\") {\n          this.browserNotificationsBootstrapped = true;\n        }\n      }\n    });\n  }\n  // Initializes default text\n  initializeDefaultText() {\n    if (!this.localization) {\n      this.localization = {\n        messagePlaceholder: this.messagePlaceholder,\n        searchPlaceholder: this.searchPlaceholder,\n        title: this.title,\n        statusDescription: this.statusDescription,\n        browserNotificationTitle: this.browserNotificationTitle,\n        loadMessageHistoryPlaceholder: \"Load older messages\"\n      };\n    }\n  }\n  initializeTheme() {\n    if (this.customTheme) {\n      this.theme = Theme.Custom;\n    } else if (this.theme != Theme.Light && this.theme != Theme.Dark) {\n      // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\n      throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\n    }\n  }\n  // Sends a request to load the friends list\n  fetchFriendsList(isBootstrapping) {\n    this.adapter.listFriends().pipe(map(participantsResponse => {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n    })).subscribe(() => {\n      if (isBootstrapping) {\n        this.restoreWindowsState();\n      }\n    });\n  }\n  fetchMessageHistory(window) {\n    // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\n    if (this.adapter instanceof PagedHistoryChatAdapter) {\n      window.isLoadingHistory = true;\n      this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        const direction = window.historyPage == 1 ? ScrollDirection.Bottom : ScrollDirection.Top;\n        window.hasMoreMessages = result.length == this.historyPageSize;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\n      })).subscribe();\n    } else {\n      this.adapter.getMessageHistory(window.participant.id).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\n      })).subscribe();\n    }\n  }\n  onFetchMessageHistoryLoaded(messages, window, direction, forceMarkMessagesAsSeen = false) {\n    this.scrollChatWindow(window, direction);\n    if (window.hasFocus || forceMarkMessagesAsSeen) {\n      const unseenMessages = messages.filter(m => !m.dateSeen);\n      this.markMessagesAsRead(unseenMessages);\n    }\n  }\n  // Updates the friends list via the event handler\n  onFriendsListChanged(participantsResponse) {\n    if (participantsResponse) {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n      this.participantsInteractedWith = [];\n    }\n  }\n  // Handles received messages by the adapter\n  onMessageReceived(participant, message) {\n    if (participant && message) {\n      const chatWindow = this.openChatWindow(participant);\n      this.assertMessageType(message);\n      if (!chatWindow[1] || !this.historyEnabled) {\n        chatWindow[0].messages.push(message);\n        this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\n        if (chatWindow[0].hasFocus) {\n          this.markMessagesAsRead([message]);\n        }\n      }\n      this.emitMessageSound(chatWindow[0]);\n      // Github issue #58\n      // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\n      if (this.maximizeWindowOnNewMessage || !chatWindow[1] && !chatWindow[0].isCollapsed) {\n        // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\n        this.emitBrowserNotification(chatWindow[0], message);\n      }\n    }\n  }\n  onParticipantClickedFromFriendsList(participant) {\n    this.openChatWindow(participant, true, true);\n  }\n  cancelOptionPrompt() {\n    if (this.currentActiveOption) {\n      this.currentActiveOption.isActive = false;\n      this.currentActiveOption = null;\n    }\n  }\n  onOptionPromptCanceled() {\n    this.cancelOptionPrompt();\n  }\n  onOptionPromptConfirmed(event) {\n    // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\n    this.confirmNewGroup(event);\n    // Canceling current state\n    this.cancelOptionPrompt();\n  }\n  confirmNewGroup(users) {\n    const newGroup = new Group(users);\n    this.openChatWindow(newGroup);\n    if (this.groupAdapter) {\n      this.groupAdapter.groupCreated(newGroup);\n    }\n  }\n  // Opens a new chat whindow. Takes care of available viewport\n  // Works for opening a chat window for an user or for a group\n  // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\n  openChatWindow(participant, focusOnNewWindow = false, invokedByUserClick = false) {\n    // Is this window opened?\n    const openedWindow = this.windows.find(x => x.participant.id == participant.id);\n    if (!openedWindow) {\n      if (invokedByUserClick) {\n        this.onParticipantClicked.emit(participant);\n      }\n      // Refer to issue #58 on Github\n      const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\n      const newChatWindow = new Window(participant, this.historyEnabled, collapseWindow);\n      // Loads the chat history via an RxJs Observable\n      if (this.historyEnabled) {\n        this.fetchMessageHistory(newChatWindow);\n      }\n      this.windows.unshift(newChatWindow);\n      // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\n      if (!this.isViewportOnMobileEnabled) {\n        if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\n          this.windows.pop();\n        }\n      }\n      this.updateWindowsState(this.windows);\n      if (focusOnNewWindow && !collapseWindow) {\n        this.focusOnWindow(newChatWindow);\n      }\n      this.participantsInteractedWith.push(participant);\n      this.onParticipantChatOpened.emit(participant);\n      return [newChatWindow, true];\n    } else {\n      // Returns the existing chat window\n      return [openedWindow, false];\n    }\n  }\n  // Focus on the input element of the supplied window\n  focusOnWindow(window, callback = () => {}) {\n    const windowIndex = this.windows.indexOf(window);\n    if (windowIndex >= 0) {\n      setTimeout(() => {\n        if (this.chatWindows) {\n          const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\n          chatWindowToFocus.chatWindowInput.nativeElement.focus();\n        }\n        callback();\n      });\n    }\n  }\n  assertMessageType(message) {\n    // Always fallback to \"Text\" messages to avoid rendenring issues\n    if (!message.type) {\n      message.type = MessageType.Text;\n    }\n  }\n  // Marks all messages provided as read with the current time.\n  markMessagesAsRead(messages) {\n    const currentDate = new Date();\n    messages.forEach(msg => {\n      msg.dateSeen = currentDate;\n    });\n    this.onMessagesSeen.emit(messages);\n  }\n  // Buffers audio file (For component's bootstrapping)\n  bufferAudioFile() {\n    if (this.audioSource && this.audioSource.length > 0) {\n      this.audioFile = new Audio();\n      this.audioFile.src = this.audioSource;\n      this.audioFile.load();\n    }\n  }\n  // Emits a message notification audio if enabled after every message received\n  emitMessageSound(window) {\n    if (this.audioEnabled && !window.hasFocus && this.audioFile) {\n      this.audioFile.play();\n    }\n  }\n  // Emits a browser notification\n  emitBrowserNotification(window, message) {\n    if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\n      const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\n        'body': message.message,\n        'icon': this.browserNotificationIconSource\n      });\n      setTimeout(() => {\n        notification.close();\n      }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\n    }\n  }\n  // Saves current windows state into local storage if persistence is enabled\n  updateWindowsState(windows) {\n    if (this.persistWindowsState) {\n      const participantIds = windows.map(w => {\n        return w.participant.id;\n      });\n      localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\n    }\n  }\n  restoreWindowsState() {\n    try {\n      if (this.persistWindowsState) {\n        const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\n        if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0) {\n          const participantIds = JSON.parse(stringfiedParticipantIds);\n          const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\n          participantsToRestore.forEach(participant => {\n            this.openChatWindow(participant);\n          });\n        }\n      }\n    } catch (ex) {\n      console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\n    }\n  }\n  // Gets closest open window if any. Most recent opened has priority (Right)\n  getClosestWindow(window) {\n    const index = this.windows.indexOf(window);\n    if (index > 0) {\n      return this.windows[index - 1];\n    } else if (index == 0 && this.windows.length > 1) {\n      return this.windows[index + 1];\n    }\n  }\n  closeWindow(window) {\n    const index = this.windows.indexOf(window);\n    this.windows.splice(index, 1);\n    this.updateWindowsState(this.windows);\n    this.onParticipantChatClosed.emit(window.participant);\n  }\n  getChatWindowComponentInstance(targetWindow) {\n    const windowIndex = this.windows.indexOf(targetWindow);\n    if (this.chatWindows) {\n      let targetWindow = this.chatWindows.toArray()[windowIndex];\n      return targetWindow;\n    }\n    return null;\n  }\n  // Scrolls a chat window message flow to the bottom\n  scrollChatWindow(window, direction) {\n    const chatWindow = this.getChatWindowComponentInstance(window);\n    if (chatWindow) {\n      chatWindow.scrollChatWindow(window, direction);\n    }\n  }\n  onWindowMessagesSeen(messagesSeen) {\n    this.markMessagesAsRead(messagesSeen);\n  }\n  onWindowChatClosed(payload) {\n    const {\n      closedWindow,\n      closedViaEscapeKey\n    } = payload;\n    if (closedViaEscapeKey) {\n      let closestWindow = this.getClosestWindow(closedWindow);\n      if (closestWindow) {\n        this.focusOnWindow(closestWindow, () => {\n          this.closeWindow(closedWindow);\n        });\n      } else {\n        this.closeWindow(closedWindow);\n      }\n    } else {\n      this.closeWindow(closedWindow);\n    }\n  }\n  onWindowTabTriggered(payload) {\n    const {\n      triggeringWindow,\n      shiftKeyPressed\n    } = payload;\n    const currentWindowIndex = this.windows.indexOf(triggeringWindow);\n    let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\n    if (!windowToFocus) {\n      // Edge windows, go to start or end\n      windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\n    }\n    this.focusOnWindow(windowToFocus);\n  }\n  onWindowMessageSent(messageSent) {\n    this.adapter.sendMessage(messageSent);\n  }\n  onWindowOptionTriggered(option) {\n    this.currentActiveOption = option;\n  }\n  triggerOpenChatWindow(user) {\n    if (user) {\n      this.openChatWindow(user);\n    }\n  }\n  triggerCloseChatWindow(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n    if (openedWindow) {\n      this.closeWindow(openedWindow);\n    }\n  }\n  triggerToggleChatWindowVisibility(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n    if (openedWindow) {\n      const chatWindow = this.getChatWindowComponentInstance(openedWindow);\n      if (chatWindow) {\n        chatWindow.onChatWindowClicked(openedWindow);\n      }\n    }\n  }\n}\nNgChat.ɵfac = function NgChat_Factory(t) {\n  return new (t || NgChat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient));\n};\nNgChat.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChat,\n  selectors: [[\"ng-chat\"]],\n  viewQuery: function NgChat_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindows = _t);\n    }\n  },\n  hostBindings: function NgChat_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function NgChat_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    isCollapsed: \"isCollapsed\",\n    maximizeWindowOnNewMessage: \"maximizeWindowOnNewMessage\",\n    pollFriendsList: \"pollFriendsList\",\n    pollingInterval: \"pollingInterval\",\n    historyEnabled: \"historyEnabled\",\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    audioEnabled: \"audioEnabled\",\n    searchEnabled: \"searchEnabled\",\n    audioSource: \"audioSource\",\n    persistWindowsState: \"persistWindowsState\",\n    title: \"title\",\n    messagePlaceholder: \"messagePlaceholder\",\n    searchPlaceholder: \"searchPlaceholder\",\n    browserNotificationsEnabled: \"browserNotificationsEnabled\",\n    browserNotificationIconSource: \"browserNotificationIconSource\",\n    browserNotificationTitle: \"browserNotificationTitle\",\n    historyPageSize: \"historyPageSize\",\n    hideFriendsList: \"hideFriendsList\",\n    hideFriendsListOnUnsupportedViewport: \"hideFriendsListOnUnsupportedViewport\",\n    theme: \"theme\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    showMessageDate: \"showMessageDate\",\n    isViewportOnMobileEnabled: \"isViewportOnMobileEnabled\",\n    isDisabled: \"isDisabled\",\n    fileUploadAdapter: \"fileUploadAdapter\",\n    localization: \"localization\",\n    adapter: \"adapter\",\n    groupAdapter: \"groupAdapter\",\n    userId: \"userId\",\n    fileUploadUrl: \"fileUploadUrl\",\n    customTheme: \"customTheme\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onParticipantChatOpened: \"onParticipantChatOpened\",\n    onParticipantChatClosed: \"onParticipantChatClosed\",\n    onMessagesSeen: \"onMessagesSeen\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[\"rel\", \"stylesheet\", 3, \"href\", 4, \"ngIf\"], [\"id\", \"ng-chat\", 3, \"ngClass\", 4, \"ngIf\"], [\"rel\", \"stylesheet\", 3, \"href\"], [\"id\", \"ng-chat\", 3, \"ngClass\"], [3, \"localization\", \"shouldDisplay\", \"userId\", \"isCollapsed\", \"searchEnabled\", \"participants\", \"participantsResponse\", \"participantsInteractedWith\", \"windows\", \"currentActiveOption\", \"onParticipantClicked\", \"onOptionPromptCanceled\", \"onOptionPromptConfirmed\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"fileUploadAdapter\", \"localization\", \"userId\", \"window\", \"showOptions\", \"emojisEnabled\", \"linkfyEnabled\", \"showMessageDate\", \"messageDatePipeFormat\", \"hasPagedHistory\", \"onMessagesSeen\", \"onMessageSent\", \"onTabTriggered\", \"onChatWindowClosed\", \"onOptionTriggered\", \"onLoadHistoryTriggered\"], [\"chatWindow\", \"\"]],\n  template: function NgChat_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChat_link_0_Template, 2, 3, \"link\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\\n\");\n      ɵngcc0.ɵɵtemplate(2, NgChat_div_2_Template, 7, 12, \"div\", 1);\n      ɵngcc0.ɵɵtext(3, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.customTheme);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isDisabled && ctx.isBootstrapped && !ctx.unsupportedViewport);\n    }\n  },\n  dependencies: function () {\n    return [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle, NgChatFriendsListComponent, NgChatWindowComponent, SanitizePipe];\n  },\n  styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"],\n  encapsulation: 2\n});\nNgChat.ctorParameters = () => [{\n  type: HttpClient\n}];\nNgChat.propDecorators = {\n  isDisabled: [{\n    type: Input\n  }],\n  adapter: [{\n    type: Input\n  }],\n  groupAdapter: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  isCollapsed: [{\n    type: Input\n  }],\n  maximizeWindowOnNewMessage: [{\n    type: Input\n  }],\n  pollFriendsList: [{\n    type: Input\n  }],\n  pollingInterval: [{\n    type: Input\n  }],\n  historyEnabled: [{\n    type: Input\n  }],\n  emojisEnabled: [{\n    type: Input\n  }],\n  linkfyEnabled: [{\n    type: Input\n  }],\n  audioEnabled: [{\n    type: Input\n  }],\n  searchEnabled: [{\n    type: Input\n  }],\n  audioSource: [{\n    type: Input\n  }],\n  persistWindowsState: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  messagePlaceholder: [{\n    type: Input\n  }],\n  searchPlaceholder: [{\n    type: Input\n  }],\n  browserNotificationsEnabled: [{\n    type: Input\n  }],\n  browserNotificationIconSource: [{\n    type: Input\n  }],\n  browserNotificationTitle: [{\n    type: Input\n  }],\n  historyPageSize: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  hideFriendsList: [{\n    type: Input\n  }],\n  hideFriendsListOnUnsupportedViewport: [{\n    type: Input\n  }],\n  fileUploadUrl: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  customTheme: [{\n    type: Input\n  }],\n  messageDatePipeFormat: [{\n    type: Input\n  }],\n  showMessageDate: [{\n    type: Input\n  }],\n  isViewportOnMobileEnabled: [{\n    type: Input\n  }],\n  fileUploadAdapter: [{\n    type: Input\n  }],\n  onParticipantClicked: [{\n    type: Output\n  }],\n  onParticipantChatOpened: [{\n    type: Output\n  }],\n  onParticipantChatClosed: [{\n    type: Output\n  }],\n  onMessagesSeen: [{\n    type: Output\n  }],\n  chatWindows: [{\n    type: ViewChildren,\n    args: ['chatWindow']\n  }],\n  onResize: [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChat, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat',\n      template: \"<link *ngIf=\\\"customTheme\\\" rel=\\\"stylesheet\\\" [href]='customTheme | sanitize'>\\r\\n\\r\\n<div id=\\\"ng-chat\\\" *ngIf=\\\"!isDisabled && isBootstrapped && !unsupportedViewport\\\" [ngClass]=\\\"theme\\\">\\r\\n    <ng-chat-friends-list\\r\\n        [localization]=\\\"localization\\\"\\r\\n        [shouldDisplay]=\\\"!hideFriendsList\\\"\\r\\n        [userId]=\\\"userId\\\"\\r\\n        [isCollapsed]=\\\"isCollapsed\\\"\\r\\n        [searchEnabled]=\\\"searchEnabled\\\"\\r\\n        [participants]=\\\"participants\\\"\\r\\n        [participantsResponse]=\\\"participantsResponse\\\"\\r\\n        [participantsInteractedWith]=\\\"participantsInteractedWith\\\"\\r\\n        [windows]=\\\"windows\\\"\\r\\n        [currentActiveOption]=\\\"currentActiveOption\\\"\\r\\n        (onParticipantClicked)=\\\"onParticipantClickedFromFriendsList($event)\\\"\\r\\n        (onOptionPromptCanceled)=\\\"onOptionPromptCanceled()\\\"\\r\\n        (onOptionPromptConfirmed)=\\\"onOptionPromptConfirmed($event)\\\"\\r\\n    >\\r\\n    </ng-chat-friends-list>\\r\\n\\r\\n    <div *ngFor=\\\"let window of windows; let i = index\\\" [ngClass]=\\\"{'ng-chat-window': true, 'primary-outline-color': true, 'ng-chat-window-collapsed': window.isCollapsed}\\\" [ngStyle]=\\\"{'right': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + 'px'}\\\">\\r\\n        <ng-chat-window\\r\\n            #chatWindow\\r\\n            [fileUploadAdapter]=\\\"fileUploadAdapter\\\"\\r\\n            [localization]=\\\"localization\\\"\\r\\n            [userId]=\\\"userId\\\"\\r\\n            [window]=\\\"window\\\"\\r\\n            [showOptions]=\\\"groupAdapter\\\"\\r\\n            [emojisEnabled]=\\\"emojisEnabled\\\"\\r\\n            [linkfyEnabled]=\\\"linkfyEnabled\\\"\\r\\n            [showMessageDate]=\\\"showMessageDate\\\"\\r\\n            [messageDatePipeFormat]=\\\"messageDatePipeFormat\\\"\\r\\n            [hasPagedHistory]=\\\"hasPagedHistory\\\"\\r\\n            (onMessagesSeen)=\\\"onWindowMessagesSeen($event)\\\"\\r\\n            (onMessageSent)=\\\"onWindowMessageSent($event)\\\"\\r\\n            (onTabTriggered)=\\\"onWindowTabTriggered($event)\\\"\\r\\n            (onChatWindowClosed)=\\\"onWindowChatClosed($event)\\\"\\r\\n            (onOptionTriggered)=\\\"onWindowOptionTriggered($event)\\\"\\r\\n            (onLoadHistoryTriggered)=\\\"fetchMessageHistory($event)\\\"\\r\\n        >\\r\\n        </ng-chat-window>\\r\\n    </div>\\r\\n</div>\\r\\n\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HttpClient\n    }];\n  }, {\n    isCollapsed: [{\n      type: Input\n    }],\n    maximizeWindowOnNewMessage: [{\n      type: Input\n    }],\n    pollFriendsList: [{\n      type: Input\n    }],\n    pollingInterval: [{\n      type: Input\n    }],\n    historyEnabled: [{\n      type: Input\n    }],\n    emojisEnabled: [{\n      type: Input\n    }],\n    linkfyEnabled: [{\n      type: Input\n    }],\n    audioEnabled: [{\n      type: Input\n    }],\n    searchEnabled: [{\n      type: Input\n    }],\n    audioSource: [{\n      type: Input\n    }],\n    persistWindowsState: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    messagePlaceholder: [{\n      type: Input\n    }],\n    searchPlaceholder: [{\n      type: Input\n    }],\n    browserNotificationsEnabled: [{\n      type: Input\n    }],\n    browserNotificationIconSource: [{\n      type: Input\n    }],\n    browserNotificationTitle: [{\n      type: Input\n    }],\n    historyPageSize: [{\n      type: Input\n    }],\n    hideFriendsList: [{\n      type: Input\n    }],\n    hideFriendsListOnUnsupportedViewport: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    messageDatePipeFormat: [{\n      type: Input\n    }],\n    showMessageDate: [{\n      type: Input\n    }],\n    isViewportOnMobileEnabled: [{\n      type: Input\n    }],\n    onParticipantClicked: [{\n      type: Output\n    }],\n    onParticipantChatOpened: [{\n      type: Output\n    }],\n    onParticipantChatClosed: [{\n      type: Output\n    }],\n    onMessagesSeen: [{\n      type: Output\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    fileUploadAdapter: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    adapter: [{\n      type: Input\n    }],\n    groupAdapter: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    fileUploadUrl: [{\n      type: Input\n    }],\n    customTheme: [{\n      type: Input\n    }],\n    chatWindows: [{\n      type: ViewChildren,\n      args: ['chatWindow']\n    }]\n  });\n})();\nlet emojiDictionary = [{\n  patterns: [':)', ':-)', '=)'],\n  unicode: '😃'\n}, {\n  patterns: [':D', ':-D', '=D'],\n  unicode: '😀'\n}, {\n  patterns: [':(', ':-(', '=('],\n  unicode: '🙁'\n}, {\n  patterns: [':|', ':-|', '=|'],\n  unicode: '😐'\n}, {\n  patterns: [':*', ':-*', '=*'],\n  unicode: '😙'\n}, {\n  patterns: ['T_T', 'T.T'],\n  unicode: '😭'\n}, {\n  patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'],\n  unicode: '😮'\n}, {\n  patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'],\n  unicode: '😋'\n}, {\n  patterns: ['>.<'],\n  unicode: '😣'\n}, {\n  patterns: ['@.@'],\n  unicode: '😵'\n}, {\n  patterns: ['*.*'],\n  unicode: '😍'\n}, {\n  patterns: ['<3'],\n  unicode: '❤️'\n}, {\n  patterns: ['^.^'],\n  unicode: '😊'\n}, {\n  patterns: [':+1'],\n  unicode: '👍'\n}, {\n  patterns: [':-1'],\n  unicode: '👎'\n}];\n/*\r\n * Transforms common emoji text to UTF encoded emojis\r\n*/\nclass EmojifyPipe {\n  transform(message, pipeEnabled) {\n    if (pipeEnabled && message && message.length > 1) {\n      emojiDictionary.forEach(emoji => {\n        emoji.patterns.forEach(pattern => {\n          message = message.replace(pattern, emoji.unicode);\n        });\n      });\n    }\n    return message;\n  }\n}\nEmojifyPipe.ɵfac = function EmojifyPipe_Factory(t) {\n  return new (t || EmojifyPipe)();\n};\nEmojifyPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"emojify\",\n  type: EmojifyPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmojifyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'emojify'\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Transforms text containing URLs or E-mails to valid links/mailtos\r\n*/\nclass LinkfyPipe {\n  transform(message, pipeEnabled) {\n    if (pipeEnabled && message && message.length > 1) {\n      let replacedText;\n      let replacePatternProtocol;\n      let replacePatternWWW;\n      let replacePatternMailTo;\n      // URLs starting with http://, https://, or ftp://\n      replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n      replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>');\n      // URLs starting with \"www.\" (ignoring // before it).\n      replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n      replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n      // Change email addresses to mailto:: links.\n      replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n      replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\n      return replacedText;\n    } else return message;\n  }\n}\nLinkfyPipe.ɵfac = function LinkfyPipe_Factory(t) {\n  return new (t || LinkfyPipe)();\n};\nLinkfyPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"linkfy\",\n  type: LinkfyPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkfyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'linkfy'\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Sanitizes an URL resource\r\n*/\nclass SanitizePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) {\n  return new (t || SanitizePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer, 16));\n};\nSanitizePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"sanitize\",\n  type: SanitizePipe,\n  pure: true\n});\nSanitizePipe.ctorParameters = () => [{\n  type: DomSanitizer\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SanitizePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sanitize'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc3.DomSanitizer\n    }];\n  }, null);\n})();\n\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\nclass GroupMessageDisplayNamePipe {\n  transform(participant, message) {\n    if (participant && participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\n    } else return \"\";\n  }\n}\nGroupMessageDisplayNamePipe.ɵfac = function GroupMessageDisplayNamePipe_Factory(t) {\n  return new (t || GroupMessageDisplayNamePipe)();\n};\nGroupMessageDisplayNamePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"groupMessageDisplayName\",\n  type: GroupMessageDisplayNamePipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroupMessageDisplayNamePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'groupMessageDisplayName'\n    }]\n  }], null, null);\n})();\nclass NgChatOptionsComponent {\n  constructor() {\n    this.activeOptionTrackerChange = new EventEmitter();\n  }\n  onOptionClicked(option) {\n    option.isActive = true;\n    if (option.action) {\n      option.action(option.chattingTo);\n    }\n    this.activeOptionTrackerChange.emit(option);\n  }\n}\nNgChatOptionsComponent.ɵfac = function NgChatOptionsComponent_Factory(t) {\n  return new (t || NgChatOptionsComponent)();\n};\nNgChatOptionsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatOptionsComponent,\n  selectors: [[\"ng-chat-options\"]],\n  inputs: {\n    options: \"options\",\n    activeOptionTracker: \"activeOptionTracker\"\n  },\n  outputs: {\n    activeOptionTrackerChange: \"activeOptionTrackerChange\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"class\", \"ng-chat-options\", 4, \"ngIf\"], [1, \"ng-chat-options\"], [1, \"ng-chat-options-activator\"], [1, \"primary-text\"], [1, \"ng-chat-options-content\", \"primary-background\", \"shadowed\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n  template: function NgChatOptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatOptionsComponent_div_0_Template, 13, 1, \"div\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options && ctx.options.length > 0);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf],\n  styles: [\".ng-chat-options-activator[_ngcontent-%COMP%]{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{position:relative;top:-5px;left:0}.ng-chat-options[_ngcontent-%COMP%]{position:relative;display:inline-block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-content[_ngcontent-%COMP%]{display:block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-activator[_ngcontent-%COMP%]{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content[_ngcontent-%COMP%]{right:0}}\"]\n});\nNgChatOptionsComponent.ctorParameters = () => [];\nNgChatOptionsComponent.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  activeOptionTracker: [{\n    type: Input\n  }],\n  activeOptionTrackerChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatOptionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-options',\n      template: \"<div *ngIf=\\\"options && options.length > 0\\\" class=\\\"ng-chat-options\\\">\\r\\n\\t\\t<button class=\\\"ng-chat-options-activator\\\">\\r\\n\\t\\t\\t<span class=\\\"primary-text\\\">...</span>\\r\\n\\t\\t</button>\\r\\n\\t<div class=\\\"ng-chat-options-content primary-background shadowed\\\">\\r\\n\\t\\t<a *ngFor=\\\"let option of options; let i = index\\\" [ngClass]=\\\"'primary-text'\\\" (click)=\\\"onOptionClicked(option)\\\">\\r\\n\\t\\t\\t{{option.displayLabel}}\\r\\n\\t\\t</a>\\r\\n\\t</div>      \\r\\n</div>\\r\\n\",\n      styles: [\".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    activeOptionTrackerChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    activeOptionTracker: [{\n      type: Input\n    }]\n  });\n})();\nclass MessageCounter {\n  static formatUnreadMessagesTotal(totalUnreadMessages) {\n    if (totalUnreadMessages > 0) {\n      if (totalUnreadMessages > 99) return \"99+\";else return String(totalUnreadMessages);\n    }\n    // Empty fallback.\n    return \"\";\n  }\n  /**\r\n   * Returns a formatted string containing the total unread messages of a chat window.\r\n   * @param window The window instance to count the unread total messages.\r\n   * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n   */\n  static unreadMessagesTotal(window, currentUserId) {\n    let totalUnreadMessages = 0;\n    if (window) {\n      totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\n    }\n    return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n  }\n}\nfunction chatParticipantStatusDescriptor(status, localization) {\n  const currentStatus = ChatParticipantStatus[status].toString().toLowerCase();\n  return localization.statusDescription[currentStatus];\n}\nclass NgChatFriendsListComponent {\n  constructor() {\n    this.participantsInteractedWith = [];\n    this.onParticipantClicked = new EventEmitter();\n    this.onOptionPromptCanceled = new EventEmitter();\n    this.onOptionPromptConfirmed = new EventEmitter();\n    this.selectedUsersFromFriendsList = [];\n    this.searchInput = '';\n    // Exposes enums and functions for the ng-template\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n    this.cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\n  }\n  ngOnChanges(changes) {\n    if (this.currentActiveOption) {\n      const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\n      const isActivatedUserInSelectedList = this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy).length > 0;\n      if (!isActivatedUserInSelectedList) {\n        this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant);\n      }\n    }\n  }\n  get filteredParticipants() {\n    if (this.searchInput.length > 0) {\n      // Searches in the friend list by the inputted search string\n      return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\n    }\n    return this.participants;\n  }\n  isUserSelectedFromFriendsList(user) {\n    return this.selectedUsersFromFriendsList.filter(item => item.id == user.id).length > 0;\n  }\n  unreadMessagesTotalByParticipant(participant) {\n    let openedWindow = this.windows.find(x => x.participant.id == participant.id);\n    if (openedWindow) {\n      return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\n    } else {\n      let totalUnreadMessages = this.participantsResponse.filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0).map(participantResponse => {\n        return participantResponse.metadata.totalUnreadMessages;\n      })[0];\n      return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n    }\n  }\n  // Toggle friends list visibility\n  onChatTitleClicked() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n  onFriendsListCheckboxChange(selectedUser, isChecked) {\n    if (isChecked) {\n      this.selectedUsersFromFriendsList.push(selectedUser);\n    } else {\n      this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\n    }\n  }\n  onUserClick(clickedUser) {\n    this.onParticipantClicked.emit(clickedUser);\n  }\n  onFriendsListActionCancelClicked() {\n    this.onOptionPromptCanceled.emit();\n    this.cleanUpUserSelection();\n  }\n  onFriendsListActionConfirmClicked() {\n    this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\n    this.cleanUpUserSelection();\n  }\n}\nNgChatFriendsListComponent.ɵfac = function NgChatFriendsListComponent_Factory(t) {\n  return new (t || NgChatFriendsListComponent)();\n};\nNgChatFriendsListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatFriendsListComponent,\n  selectors: [[\"ng-chat-friends-list\"]],\n  inputs: {\n    participantsInteractedWith: \"participantsInteractedWith\",\n    isCollapsed: \"isCollapsed\",\n    participants: \"participants\",\n    participantsResponse: \"participantsResponse\",\n    windows: \"windows\",\n    userId: \"userId\",\n    localization: \"localization\",\n    shouldDisplay: \"shouldDisplay\",\n    searchEnabled: \"searchEnabled\",\n    currentActiveOption: \"currentActiveOption\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onOptionPromptCanceled: \"onOptionPromptCanceled\",\n    onOptionPromptConfirmed: \"onOptionPromptConfirmed\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"id\", \"ng-chat-people\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"ng-chat-people\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-title\", \"secondary-background\", \"shadowed\", 3, \"click\"], [\"class\", \"ng-chat-people-actions\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ng-chat-search_friend\", \"class\", \"friends-search-bar\", \"type\", \"search\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-chat-people-actions\", 3, \"click\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\"], [1, \"remove-icon\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\", 3, \"click\"], [1, \"check-icon\"], [\"id\", \"ng-chat-search_friend\", \"type\", \"search\", 1, \"friends-search-bar\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"class\", \"ng-chat-users-checkbox\", 3, \"checked\", \"change\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"ng-chat-users-checkbox\", 3, \"checked\", \"change\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"]],\n  template: function NgChatFriendsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatFriendsListComponent_div_0_Template, 14, 7, \"div\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldDisplay);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, SanitizePipe],\n  styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"],\n  encapsulation: 2\n});\nNgChatFriendsListComponent.ctorParameters = () => [];\nNgChatFriendsListComponent.propDecorators = {\n  participants: [{\n    type: Input\n  }],\n  participantsResponse: [{\n    type: Input\n  }],\n  participantsInteractedWith: [{\n    type: Input\n  }],\n  windows: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  shouldDisplay: [{\n    type: Input\n  }],\n  isCollapsed: [{\n    type: Input\n  }],\n  searchEnabled: [{\n    type: Input\n  }],\n  currentActiveOption: [{\n    type: Input\n  }],\n  onParticipantClicked: [{\n    type: Output\n  }],\n  onOptionPromptCanceled: [{\n    type: Output\n  }],\n  onOptionPromptConfirmed: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatFriendsListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-friends-list',\n      template: \"<div *ngIf=\\\"shouldDisplay\\\" id=\\\"ng-chat-people\\\" [ngClass]=\\\"{'primary-outline-color': true, 'primary-background': true, 'ng-chat-people-collapsed': isCollapsed}\\\">\\r\\n\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-title secondary-background shadowed\\\" (click)=\\\"onChatTitleClicked()\\\">\\r\\n\\t\\t<span>\\r\\n\\t\\t\\t{{localization.title}}\\r\\n\\t\\t</span>\\r\\n\\t</a>\\r\\n\\t<div *ngIf=\\\"currentActiveOption\\\" class=\\\"ng-chat-people-actions\\\" (click)=\\\"onFriendsListActionCancelClicked()\\\">\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\">\\r\\n\\t\\t\\t<i class=\\\"remove-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\" (click)=\\\"onFriendsListActionConfirmClicked()\\\">\\r\\n\\t\\t\\t<i class=\\\"check-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\t<input *ngIf=\\\"searchEnabled\\\" id=\\\"ng-chat-search_friend\\\" class=\\\"friends-search-bar\\\" type=\\\"search\\\" [placeholder]=\\\"localization.searchPlaceholder\\\" [(ngModel)]=\\\"searchInput\\\" />\\r\\n\\t<ul id=\\\"ng-chat-users\\\" *ngIf=\\\"!isCollapsed\\\" [ngClass]=\\\"{'offset-search': searchEnabled}\\\">\\r\\n\\t\\t<li *ngFor=\\\"let user of filteredParticipants\\\">\\r\\n\\t\\t\\t<input \\r\\n\\t\\t\\t\\t*ngIf=\\\"currentActiveOption && currentActiveOption.validateContext(user)\\\" \\r\\n\\t\\t\\t\\ttype=\\\"checkbox\\\" \\r\\n\\t\\t\\t\\tclass=\\\"ng-chat-users-checkbox\\\" \\r\\n\\t\\t\\t\\t(change)=\\\"onFriendsListCheckboxChange(user, $event.target.checked)\\\" \\r\\n\\t\\t\\t\\t[checked]=\\\"isUserSelectedFromFriendsList(user)\\\"/>\\r\\n\\t\\t\\t<div [ngClass]=\\\"{'ng-chat-friends-list-selectable-offset': currentActiveOption, 'ng-chat-friends-list-container': true}\\\" (click)=\\\"onUserClick(user)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!user.avatar\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"user.avatar\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\"  [src]=\\\"user.avatar | sanitize\\\"/>\\r\\n\\t\\t\\t\\t<strong title=\\\"{{user.displayName}}\\\">{{user.displayName}}</strong>\\r\\n\\t\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': user.status == ChatParticipantStatus.Online, 'busy': user.status == ChatParticipantStatus.Busy, 'away': user.status == ChatParticipantStatus.Away, 'offline': user.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(user.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotalByParticipant(user).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotalByParticipant(user)}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</div>\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    participantsInteractedWith: [{\n      type: Input\n    }],\n    onParticipantClicked: [{\n      type: Output\n    }],\n    onOptionPromptCanceled: [{\n      type: Output\n    }],\n    onOptionPromptConfirmed: [{\n      type: Output\n    }],\n    isCollapsed: [{\n      type: Input\n    }],\n    participants: [{\n      type: Input\n    }],\n    participantsResponse: [{\n      type: Input\n    }],\n    windows: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    shouldDisplay: [{\n      type: Input\n    }],\n    searchEnabled: [{\n      type: Input\n    }],\n    currentActiveOption: [{\n      type: Input\n    }]\n  });\n})();\nclass NgChatWindowComponent {\n  constructor() {\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.showMessageDate = true;\n    this.messageDatePipeFormat = \"short\";\n    this.hasPagedHistory = true;\n    this.onChatWindowClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.onMessageSent = new EventEmitter();\n    this.onTabTriggered = new EventEmitter();\n    this.onOptionTriggered = new EventEmitter();\n    this.onLoadHistoryTriggered = new EventEmitter();\n    // File upload state\n    this.fileUploadersInUse = []; // Id bucket of uploaders in use\n    // Exposes enums and functions for the ng-template\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n  }\n  defaultWindowOptions(currentWindow) {\n    if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User) {\n      return [{\n        isActive: false,\n        chattingTo: currentWindow,\n        validateContext: participant => {\n          return participant.participantType == ChatParticipantType.User;\n        },\n        displayLabel: 'Add People' // TODO: Localize this\n      }];\n    }\n\n    return [];\n  }\n  // Asserts if a user avatar is visible in a chat cluster\n  isAvatarVisible(window, message, index) {\n    if (message.fromId != this.userId) {\n      if (index == 0) {\n        return true; // First message, good to show the thumbnail\n      } else {\n        // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\n        if (window.messages[index - 1].fromId != message.fromId) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  getChatWindowAvatar(participant, message) {\n    if (participant.participantType == ChatParticipantType.User) {\n      return participant.avatar;\n    } else if (participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\n    }\n    return null;\n  }\n  isUploadingFile(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\n  }\n  // Generates a unique file uploader id for each participant\n  getUniqueFileUploadInstanceId(window) {\n    if (window && window.participant) {\n      return `ng-chat-file-upload-${window.participant.id}`;\n    }\n    return 'ng-chat-file-upload';\n  }\n  unreadMessagesTotal(window) {\n    return MessageCounter.unreadMessagesTotal(window, this.userId);\n  }\n  // Scrolls a chat window message flow to the bottom\n  scrollChatWindow(window, direction) {\n    if (!window.isCollapsed) {\n      setTimeout(() => {\n        if (this.chatMessages) {\n          let element = this.chatMessages.nativeElement;\n          let position = direction === ScrollDirection.Top ? 0 : element.scrollHeight;\n          element.scrollTop = position;\n        }\n      });\n    }\n  }\n  activeOptionTrackerChange(option) {\n    this.onOptionTriggered.emit(option);\n  }\n  // Triggers native file upload for file selection from the user\n  triggerNativeFileUpload(window) {\n    if (window) {\n      if (this.nativeFileInput) this.nativeFileInput.nativeElement.click();\n    }\n  }\n  // Toggles a window focus on the focus/blur of a 'newMessage' input\n  toggleWindowFocus(window) {\n    window.hasFocus = !window.hasFocus;\n    if (window.hasFocus) {\n      const unreadMessages = window.messages.filter(message => message.dateSeen == null && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\n      if (unreadMessages && unreadMessages.length > 0) {\n        this.onMessagesSeen.emit(unreadMessages);\n      }\n    }\n  }\n  markMessagesAsRead(messages) {\n    this.onMessagesSeen.emit(messages);\n  }\n  fetchMessageHistory(window) {\n    this.onLoadHistoryTriggered.emit(window);\n  }\n  // Closes a chat window via the close 'X' button\n  onCloseChatWindow() {\n    this.onChatWindowClosed.emit({\n      closedWindow: this.window,\n      closedViaEscapeKey: false\n    });\n  }\n  /*  Monitors pressed keys on a chat window\r\n      - Dispatches a message when the ENTER key is pressed\r\n      - Tabs between windows on TAB or SHIFT + TAB\r\n      - Closes the current focused window on ESC\r\n  */\n  onChatInputTyped(event, window) {\n    switch (event.keyCode) {\n      case 13:\n        if (window.newMessage && window.newMessage.trim() != \"\") {\n          let message = new Message();\n          message.fromId = this.userId;\n          message.toId = window.participant.id;\n          message.message = window.newMessage;\n          message.dateSent = new Date();\n          window.messages.push(message);\n          this.onMessageSent.emit(message);\n          window.newMessage = \"\"; // Resets the new message input\n          this.scrollChatWindow(window, ScrollDirection.Bottom);\n        }\n        break;\n      case 9:\n        event.preventDefault();\n        this.onTabTriggered.emit({\n          triggeringWindow: window,\n          shiftKeyPressed: event.shiftKey\n        });\n        break;\n      case 27:\n        this.onChatWindowClosed.emit({\n          closedWindow: window,\n          closedViaEscapeKey: true\n        });\n        break;\n    }\n  }\n  // Toggles a chat window visibility between maximized/minimized\n  onChatWindowClicked(window) {\n    window.isCollapsed = !window.isCollapsed;\n    this.scrollChatWindow(window, ScrollDirection.Bottom);\n  }\n  clearInUseFileUploader(fileUploadInstanceId) {\n    const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\n    if (uploaderInstanceIdIndex > -1) {\n      this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\n    }\n  }\n  // Handles file selection and uploads the selected file using the file upload adapter\n  onFileChosen(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    const uploadElementRef = this.nativeFileInput;\n    if (uploadElementRef) {\n      const file = uploadElementRef.nativeElement.files[0];\n      this.fileUploadersInUse.push(fileUploadInstanceId);\n      this.fileUploadAdapter.uploadFile(file, window.participant.id).subscribe(fileMessage => {\n        this.clearInUseFileUploader(fileUploadInstanceId);\n        fileMessage.fromId = this.userId;\n        // Push file message to current user window   \n        window.messages.push(fileMessage);\n        this.onMessageSent.emit(fileMessage);\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\n        // Resets the file upload element\n        uploadElementRef.nativeElement.value = '';\n      }, error => {\n        this.clearInUseFileUploader(fileUploadInstanceId);\n        // Resets the file upload element\n        uploadElementRef.nativeElement.value = '';\n        // TODO: Invoke a file upload adapter error here\n      });\n    }\n  }\n}\n\nNgChatWindowComponent.ɵfac = function NgChatWindowComponent_Factory(t) {\n  return new (t || NgChatWindowComponent)();\n};\nNgChatWindowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatWindowComponent,\n  selectors: [[\"ng-chat-window\"]],\n  viewQuery: function NgChatWindowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, 5);\n      ɵngcc0.ɵɵviewQuery(_c8, 5);\n      ɵngcc0.ɵɵviewQuery(_c9, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nativeFileInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindowInput = _t.first);\n    }\n  },\n  inputs: {\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    showMessageDate: \"showMessageDate\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    hasPagedHistory: \"hasPagedHistory\",\n    fileUploadAdapter: \"fileUploadAdapter\",\n    window: \"window\",\n    userId: \"userId\",\n    localization: \"localization\",\n    showOptions: \"showOptions\"\n  },\n  outputs: {\n    onChatWindowClosed: \"onChatWindowClosed\",\n    onMessagesSeen: \"onMessagesSeen\",\n    onMessageSent: \"onMessageSent\",\n    onTabTriggered: \"onTabTriggered\",\n    onOptionTriggered: \"onOptionTriggered\",\n    onLoadHistoryTriggered: \"onLoadHistoryTriggered\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"ng-chat-title\", \"secondary-background\"], [1, \"ng-chat-title-visibility-toggle-area\", 3, \"click\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-close\", \"primary-text\", 3, \"click\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"], [3, \"ngClass\", \"options\", \"activeOptionTrackerChange\"], [1, \"ng-chat-messages\", \"primary-background\"], [\"chatMessages\", \"\"], [\"class\", \"ng-chat-loading-wrapper\", 4, \"ngIf\"], [\"class\", \"ng-chat-load-history\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng-chat-footer\", \"primary-outline-color\", \"primary-background\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngClass\", \"ngModelChange\", \"keydown\", \"blur\", \"focus\"], [\"chatWindowInput\", \"\"], [1, \"ng-chat-loading-wrapper\"], [1, \"loader\"], [1, \"ng-chat-load-history\"], [1, \"load-history-action\", 3, \"click\"], [3, \"ngClass\"], [3, \"ngSwitch\"], [3, \"ngClass\", 4, \"ngSwitchCase\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"ng-chat-participant-name\", 4, \"ngIf\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-participant-name\"], [3, \"innerHtml\"], [\"class\", \"message-sent-date\", 4, \"ngIf\"], [1, \"message-sent-date\"], [1, \"image-message\", 3, \"src\"], [1, \"file-message-icon-container\"], [1, \"paperclip-icon\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"download\", \"\", 1, \"file-details\", 3, \"click\"], [1, \"file-message-title\"], [\"class\", \"file-message-size\", 4, \"ngIf\"], [1, \"file-message-size\"], [\"class\", \"btn-add-file\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"nativeFileInput\", \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"btn-add-file\", 3, \"click\"], [1, \"upload-icon\"]],\n  template: function NgChatWindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatWindowComponent_ng_container_0_Template, 18, 10, \"ng-container\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\");\n      ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_Template, 40, 24, \"ng-container\", 0);\n      ɵngcc0.ɵɵtext(3, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && ctx.window.isCollapsed);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && !ctx.window.isCollapsed);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, NgChatOptionsComponent, ɵngcc2.DatePipe, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe],\n  styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"],\n  encapsulation: 2\n});\nNgChatWindowComponent.ctorParameters = () => [];\nNgChatWindowComponent.propDecorators = {\n  fileUploadAdapter: [{\n    type: Input\n  }],\n  window: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  showOptions: [{\n    type: Input\n  }],\n  emojisEnabled: [{\n    type: Input\n  }],\n  linkfyEnabled: [{\n    type: Input\n  }],\n  showMessageDate: [{\n    type: Input\n  }],\n  messageDatePipeFormat: [{\n    type: Input\n  }],\n  hasPagedHistory: [{\n    type: Input\n  }],\n  onChatWindowClosed: [{\n    type: Output\n  }],\n  onMessagesSeen: [{\n    type: Output\n  }],\n  onMessageSent: [{\n    type: Output\n  }],\n  onTabTriggered: [{\n    type: Output\n  }],\n  onOptionTriggered: [{\n    type: Output\n  }],\n  onLoadHistoryTriggered: [{\n    type: Output\n  }],\n  chatMessages: [{\n    type: ViewChild,\n    args: ['chatMessages']\n  }],\n  nativeFileInput: [{\n    type: ViewChild,\n    args: ['nativeFileInput']\n  }],\n  chatWindowInput: [{\n    type: ViewChild,\n    args: ['chatWindowInput']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatWindowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-window',\n      template: \"<ng-container *ngIf=\\\"window && window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"window && !window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t\\t<ng-chat-options [ngClass]=\\\"'ng-chat-options-container'\\\" [options]=\\\"defaultWindowOptions(window)\\\" (activeOptionTrackerChange)=\\\"activeOptionTrackerChange($event)\\\"></ng-chat-options>\\r\\n\\t</div>\\r\\n\\t<div #chatMessages class=\\\"ng-chat-messages primary-background\\\">\\r\\n\\t\\t<div *ngIf=\\\"window.isLoadingHistory\\\" class=\\\"ng-chat-loading-wrapper\\\">\\r\\n\\t\\t\\t<div class=\\\"loader\\\">Loading history...</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory\\\" class=\\\"ng-chat-load-history\\\">\\r\\n\\t\\t\\t<a class=\\\"load-history-action\\\" (click)=\\\"fetchMessageHistory(window)\\\">{{localization.loadMessageHistoryPlaceholder}}</a>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let message of window.messages; let i = index\\\" [ngClass]=\\\"{'ng-chat-message': true, 'ng-chat-message-received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isAvatarVisible(window, message, i)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!getChatWindowAvatar(window.participant, message)\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"getChatWindowAvatar(window.participant, message)\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\" [src]=\\\"getChatWindowAvatar(window.participant, message) | sanitize\\\" />\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"window.participant.participantType == ChatParticipantType.Group\\\" class=\\\"ng-chat-participant-name\\\">{{window.participant | groupMessageDisplayName:message}}</span>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container [ngSwitch]=\\\"message.type\\\">\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.Text\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n          <span [innerHtml]=\\\"message.message | emojify:emojisEnabled | linkfy:linkfyEnabled\\\"></span>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n        <div *ngSwitchCase=\\\"MessageType.Image\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n\\r\\n          <img src=\\\"{{message.message}}\\\" class=\\\"image-message\\\" />\\r\\n\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.File\\\" [ngClass]=\\\"{'file-message-container': true, 'received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"file-message-icon-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"paperclip-icon\\\"></i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<a class=\\\"file-details\\\" [attr.href]=\\\"message.downloadUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" (click)=\\\"this.markMessagesAsRead([message])\\\" download>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"file-message-title\\\" [attr.title]=\\\"message.message\\\">{{message.message}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"message.fileSizeInBytes\\\"  class=\\\"file-message-size\\\">{{message.fileSizeInBytes}} Bytes</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"ng-chat-footer primary-outline-color primary-background\\\">\\r\\n\\t\\t<input #chatWindowInput\\r\\n\\t\\t\\ttype=\\\"text\\\"\\r\\n\\t\\t\\t[ngModel]=\\\"window.newMessage | emojify:emojisEnabled\\\"\\r\\n\\t\\t\\t(ngModelChange)=\\\"window.newMessage=$event\\\"\\r\\n\\t\\t\\t[placeholder]=\\\"localization.messagePlaceholder\\\"\\r\\n\\t\\t\\t[ngClass]=\\\"{'chat-window-input': true, 'has-side-action': fileUploadAdapter}\\\"\\r\\n\\t\\t\\t(keydown)=\\\"onChatInputTyped($event, window)\\\"\\r\\n\\t\\t\\t(blur)=\\\"toggleWindowFocus(window)\\\"\\r\\n\\t\\t\\t(focus)=\\\"toggleWindowFocus(window)\\\"/>\\r\\n\\r\\n\\t\\t<!-- File Upload -->\\r\\n\\t\\t<ng-container *ngIf=\\\"fileUploadAdapter\\\">\\r\\n\\t\\t\\t<a *ngIf=\\\"!isUploadingFile(window)\\\" class=\\\"btn-add-file\\\" (click)=\\\"triggerNativeFileUpload(window)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"upload-icon\\\"></i>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\\\"file\\\"\\r\\n\\t\\t\\t\\t#nativeFileInput\\r\\n\\t\\t\\t\\tstyle=\\\"display: none;\\\"\\r\\n\\t\\t\\t\\t[attr.id]=\\\"getUniqueFileUploadInstanceId(window)\\\"\\r\\n\\t\\t\\t\\t(change)=\\\"onFileChosen(window)\\\" />\\r\\n\\t\\t\\t<div *ngIf=\\\"isUploadingFile(window)\\\" class=\\\"loader\\\"></div>\\r\\n\\t\\t</ng-container>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    emojisEnabled: [{\n      type: Input\n    }],\n    linkfyEnabled: [{\n      type: Input\n    }],\n    showMessageDate: [{\n      type: Input\n    }],\n    messageDatePipeFormat: [{\n      type: Input\n    }],\n    hasPagedHistory: [{\n      type: Input\n    }],\n    onChatWindowClosed: [{\n      type: Output\n    }],\n    onMessagesSeen: [{\n      type: Output\n    }],\n    onMessageSent: [{\n      type: Output\n    }],\n    onTabTriggered: [{\n      type: Output\n    }],\n    onOptionTriggered: [{\n      type: Output\n    }],\n    onLoadHistoryTriggered: [{\n      type: Output\n    }],\n    fileUploadAdapter: [{\n      type: Input\n    }],\n    window: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    showOptions: [{\n      type: Input\n    }],\n    chatMessages: [{\n      type: ViewChild,\n      args: ['chatMessages']\n    }],\n    nativeFileInput: [{\n      type: ViewChild,\n      args: ['nativeFileInput']\n    }],\n    chatWindowInput: [{\n      type: ViewChild,\n      args: ['chatWindowInput']\n    }]\n  });\n})();\nclass NgChatModule {}\nNgChatModule.ɵfac = function NgChatModule_Factory(t) {\n  return new (t || NgChatModule)();\n};\nNgChatModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgChatModule\n});\nNgChatModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, HttpClientModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, HttpClientModule],\n      declarations: [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent],\n      exports: [NgChat]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgChatModule, {\n    declarations: function () {\n      return [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, HttpClientModule];\n    },\n    exports: function () {\n      return [NgChat];\n    }\n  });\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ChatAdapter, ChatParticipantStatus, ChatParticipantType, Group, Message, MessageType, NgChatModule, PagedHistoryChatAdapter, ParticipantMetadata, ParticipantResponse, Theme, User, Window, NgChat as ɵa, EmojifyPipe as ɵb, LinkfyPipe as ɵc, SanitizePipe as ɵd, GroupMessageDisplayNamePipe as ɵe, NgChatOptionsComponent as ɵf, NgChatFriendsListComponent as ɵg, NgChatWindowComponent as ɵh };","map":{"version":3,"names":["CommonModule","EventEmitter","Component","ViewEncapsulation","Input","Output","ViewChildren","HostListener","Pipe","ViewChild","NgModule","FormsModule","HttpClient","HttpClientModule","__awaiter","map","DomSanitizer","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","NgChat_link_0_Template","rf","ctx","ɵɵelement","ɵɵpipe","ctx_r0","ɵɵnextContext","ɵɵproperty","ɵɵpipeBind1","customTheme","ɵɵsanitizeResourceUrl","_c1","a2","_c2","a0","NgChat_div_2_div_5_Template","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵtext","ɵɵlistener","NgChat_div_2_div_5_Template_ng_chat_window_onMessagesSeen_2_listener","$event","ɵɵrestoreView","ctx_r6","ɵɵresetView","onWindowMessagesSeen","NgChat_div_2_div_5_Template_ng_chat_window_onMessageSent_2_listener","ctx_r8","onWindowMessageSent","NgChat_div_2_div_5_Template_ng_chat_window_onTabTriggered_2_listener","ctx_r9","onWindowTabTriggered","NgChat_div_2_div_5_Template_ng_chat_window_onChatWindowClosed_2_listener","ctx_r10","onWindowChatClosed","NgChat_div_2_div_5_Template_ng_chat_window_onOptionTriggered_2_listener","ctx_r11","onWindowOptionTriggered","NgChat_div_2_div_5_Template_ng_chat_window_onLoadHistoryTriggered_2_listener","ctx_r12","fetchMessageHistory","ɵɵelementEnd","window_r3","$implicit","i_r4","index","ctx_r2","ɵɵpureFunction1","isCollapsed","hideFriendsList","friendsListWidth","windowSizeFactor","ɵɵadvance","fileUploadAdapter","localization","userId","groupAdapter","emojisEnabled","linkfyEnabled","showMessageDate","messageDatePipeFormat","hasPagedHistory","NgChat_div_2_Template","_r14","NgChat_div_2_Template_ng_chat_friends_list_onParticipantClicked_2_listener","ctx_r13","onParticipantClickedFromFriendsList","NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptCanceled_2_listener","ctx_r15","onOptionPromptCanceled","NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptConfirmed_2_listener","ctx_r16","onOptionPromptConfirmed","ɵɵtemplate","ctx_r1","theme","searchEnabled","participants","participantsResponse","participantsInteractedWith","windows","currentActiveOption","NgChatOptionsComponent_div_0_a_10_Template","_r5","NgChatOptionsComponent_div_0_a_10_Template_a_click_0_listener","restoredCtx","option_r2","ctx_r4","onOptionClicked","ɵɵtextInterpolate1","displayLabel","NgChatOptionsComponent_div_0_Template","options","NgChatFriendsListComponent_div_0_div_8_Template","NgChatFriendsListComponent_div_0_div_8_Template_div_click_0_listener","onFriendsListActionCancelClicked","NgChatFriendsListComponent_div_0_div_8_Template_a_click_7_listener","onFriendsListActionConfirmClicked","NgChatFriendsListComponent_div_0_input_10_Template","_r8","NgChatFriendsListComponent_div_0_input_10_Template_input_ngModelChange_0_listener","ctx_r7","searchInput","searchPlaceholder","NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template","_r17","NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template_input_change_0_listener","user_r10","onFriendsListCheckboxChange","target","checked","isUserSelectedFromFriendsList","NgChatFriendsListComponent_div_0_ul_12_li_2_div_6_Template","NgChatFriendsListComponent_div_0_ul_12_li_2_img_8_Template","avatar","ɵɵsanitizeUrl","NgChatFriendsListComponent_div_0_ul_12_li_2_span_15_Template","ctx_r14","ɵɵtextInterpolate","unreadMessagesTotalByParticipant","_c3","_c4","a1","a3","a4","NgChatFriendsListComponent_div_0_ul_12_li_2_Template","_r22","NgChatFriendsListComponent_div_0_ul_12_li_2_Template_div_click_4_listener","ctx_r21","onUserClick","validateContext","ɵɵpropertyInterpolate","displayName","chatParticipantStatusDescriptor","status","ɵɵpureFunction4","ChatParticipantStatus","Online","Busy","Away","Offline","length","_c5","NgChatFriendsListComponent_div_0_ul_12_Template","ctx_r3","filteredParticipants","_c6","NgChatFriendsListComponent_div_0_Template","_r24","NgChatFriendsListComponent_div_0_Template_a_click_2_listener","ctx_r23","onChatTitleClicked","title","_c7","_c8","_c9","NgChatWindowComponent_ng_container_0_span_11_Template","unreadMessagesTotal","window","NgChatWindowComponent_ng_container_0_Template","_r4","ɵɵelementContainerStart","NgChatWindowComponent_ng_container_0_Template_div_click_4_listener","onChatWindowClicked","NgChatWindowComponent_ng_container_0_Template_a_click_14_listener","ctx_r5","onCloseChatWindow","ɵɵelementContainerEnd","participant","NgChatWindowComponent_ng_container_2_span_11_Template","NgChatWindowComponent_ng_container_2_div_23_Template","NgChatWindowComponent_ng_container_2_div_25_Template","NgChatWindowComponent_ng_container_2_div_25_Template_a_click_2_listener","loadMessageHistoryPlaceholder","NgChatWindowComponent_ng_container_2_div_27_ng_container_2_div_2_Template","NgChatWindowComponent_ng_container_2_div_27_ng_container_2_img_4_Template","message_r15","ctx_r22","getChatWindowAvatar","NgChatWindowComponent_ng_container_2_div_27_ng_container_2_span_6_Template","ɵɵpipeBind2","NgChatWindowComponent_ng_container_2_div_27_ng_container_2_Template","ctx_r17","participantType","ChatParticipantType","Group","NgChatWindowComponent_ng_container_2_div_27_div_6_span_6_Template","ctx_r27","dateSent","_c10","NgChatWindowComponent_ng_container_2_div_27_div_6_Template","ctx_r18","ɵɵpureFunction2","fromId","message","ɵɵsanitizeHtml","NgChatWindowComponent_ng_container_2_div_27_div_8_span_4_Template","ctx_r30","NgChatWindowComponent_ng_container_2_div_27_div_8_Template","ctx_r19","NgChatWindowComponent_ng_container_2_div_27_div_10_span_12_Template","fileSizeInBytes","_c11","NgChatWindowComponent_ng_container_2_div_27_div_10_Template","_r37","NgChatWindowComponent_ng_container_2_div_27_div_10_Template_a_click_7_listener","ctx_r35","markMessagesAsRead","ctx_r20","ɵɵattribute","downloadUrl","_c12","NgChatWindowComponent_ng_container_2_div_27_Template","i_r16","isAvatarVisible","type","MessageType","Text","Image","File","NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template","_r43","NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template_a_click_0_listener","ctx_r42","triggerNativeFileUpload","NgChatWindowComponent_ng_container_2_ng_container_37_div_7_Template","NgChatWindowComponent_ng_container_2_ng_container_37_Template","_r45","NgChatWindowComponent_ng_container_2_ng_container_37_Template_input_change_4_listener","ctx_r44","onFileChosen","isUploadingFile","getUniqueFileUploadInstanceId","_c13","NgChatWindowComponent_ng_container_2_Template","_r47","NgChatWindowComponent_ng_container_2_Template_div_click_4_listener","ctx_r46","NgChatWindowComponent_ng_container_2_Template_a_click_14_listener","ctx_r48","NgChatWindowComponent_ng_container_2_Template_ng_chat_options_activeOptionTrackerChange_17_listener","ctx_r49","activeOptionTrackerChange","NgChatWindowComponent_ng_container_2_Template_input_ngModelChange_32_listener","ctx_r50","newMessage","NgChatWindowComponent_ng_container_2_Template_input_keydown_32_listener","ctx_r51","onChatInputTyped","NgChatWindowComponent_ng_container_2_Template_input_blur_32_listener","ctx_r52","toggleWindowFocus","NgChatWindowComponent_ng_container_2_Template_input_focus_32_listener","ctx_r53","defaultWindowOptions","isLoadingHistory","hasMoreMessages","messages","messagePlaceholder","ChatAdapter","constructor","friendsListChangedHandler","messageReceivedHandler","onFriendsListChanged","onMessageReceived","Message","User","ParticipantResponse","ParticipantMetadata","totalUnreadMessages","Window","hasFocus","historyPage","PagedHistoryChatAdapter","Theme","Guid","newGuid","replace","c","r","Math","random","v","toString","id","chattingTo","p","sort","first","second","join","ScrollDirection","DefaultFileUploadAdapter","_serverEndpointUrl","_http","uploadFile","file","participantId","formData","FormData","append","name","post","NgChat","_httpClient","_isDisabled","maximizeWindowOnNewMessage","pollFriendsList","pollingInterval","historyEnabled","audioEnabled","audioSource","persistWindowsState","browserNotificationsEnabled","browserNotificationIconSource","browserNotificationTitle","historyPageSize","hideFriendsListOnUnsupportedViewport","Light","isViewportOnMobileEnabled","onParticipantClicked","onParticipantChatOpened","onParticipantChatClosed","onMessagesSeen","browserNotificationsBootstrapped","statusDescription","online","busy","away","offline","unsupportedViewport","isBootstrapped","isDisabled","value","clearInterval","pollingIntervalWindowInstance","activateFriendListFetch","localStorageKey","ngOnInit","bootstrapChat","onResize","event","viewPortTotalArea","innerWidth","NormalizeWindows","maxSupportedOpenedWindows","floor","difference","splice","updateWindowsState","initializationException","adapter","initializeTheme","initializeDefaultText","initializeBrowserNotifications","msg","bufferAudioFile","fileUploadUrl","ex","console","error","fetchFriendsList","setInterval","Notification","requestPermission","Custom","Dark","Error","isBootstrapping","listFriends","pipe","response","subscribe","restoreWindowsState","getMessageHistoryByPage","result","forEach","assertMessageType","concat","direction","Bottom","Top","setTimeout","onFetchMessageHistoryLoaded","getMessageHistory","forceMarkMessagesAsSeen","scrollChatWindow","unseenMessages","filter","m","dateSeen","chatWindow","openChatWindow","push","emitMessageSound","emitBrowserNotification","cancelOptionPrompt","isActive","confirmNewGroup","users","newGroup","groupCreated","focusOnNewWindow","invokedByUserClick","openedWindow","find","x","emit","collapseWindow","newChatWindow","unshift","pop","focusOnWindow","callback","windowIndex","indexOf","chatWindows","chatWindowToFocus","toArray","chatWindowInput","nativeElement","focus","currentDate","Date","audioFile","Audio","src","load","play","notification","close","participantIds","w","localStorage","setItem","JSON","stringify","stringfiedParticipantIds","getItem","parse","participantsToRestore","u","getClosestWindow","closeWindow","getChatWindowComponentInstance","targetWindow","messagesSeen","payload","closedWindow","closedViaEscapeKey","closestWindow","triggeringWindow","shiftKeyPressed","currentWindowIndex","windowToFocus","messageSent","sendMessage","option","triggerOpenChatWindow","user","triggerCloseChatWindow","triggerToggleChatWindowVisibility","ɵfac","NgChat_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgChat_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostBindings","NgChat_HostBindings","NgChat_resize_HostBindingHandler","ɵɵresolveWindow","inputs","outputs","decls","vars","consts","template","NgChat_Template","dependencies","NgClass","NgForOf","NgIf","NgStyle","NgChatFriendsListComponent","NgChatWindowComponent","SanitizePipe","styles","encapsulation","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","None","emojiDictionary","patterns","unicode","EmojifyPipe","transform","pipeEnabled","emoji","pattern","EmojifyPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","LinkfyPipe","replacedText","replacePatternProtocol","replacePatternWWW","replacePatternMailTo","LinkfyPipe_Factory","sanitizer","url","bypassSecurityTrustResourceUrl","SanitizePipe_Factory","GroupMessageDisplayNamePipe","group","userIndex","findIndex","GroupMessageDisplayNamePipe_Factory","NgChatOptionsComponent","action","NgChatOptionsComponent_Factory","activeOptionTracker","NgChatOptionsComponent_Template","MessageCounter","formatUnreadMessagesTotal","String","currentUserId","currentStatus","toLowerCase","selectedUsersFromFriendsList","cleanUpUserSelection","ngOnChanges","changes","currentOptionTriggeredBy","isActivatedUserInSelectedList","item","toUpperCase","includes","metadata","participantResponse","selectedUser","isChecked","clickedUser","NgChatFriendsListComponent_Factory","shouldDisplay","features","ɵɵNgOnChangesFeature","NgChatFriendsListComponent_Template","DefaultValueAccessor","NgControlStatus","NgModel","onChatWindowClosed","onMessageSent","onTabTriggered","onOptionTriggered","onLoadHistoryTriggered","fileUploadersInUse","currentWindow","showOptions","fileUploadInstanceId","chatMessages","element","position","scrollHeight","scrollTop","nativeFileInput","click","unreadMessages","toId","keyCode","trim","preventDefault","shiftKey","clearInUseFileUploader","uploaderInstanceIdIndex","uploadElementRef","files","fileMessage","NgChatWindowComponent_Factory","NgChatWindowComponent_Query","NgChatWindowComponent_Template","NgSwitch","NgSwitchCase","DatePipe","NgChatModule","NgChatModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe","ɵf","ɵg","ɵh"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/ng-chat/__ivy_ngcc__/fesm2015/ng-chat.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ViewChildren, HostListener, Pipe, ViewChild, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/platform-browser';\nimport * as ɵngcc4 from '@angular/forms';\n\nconst _c0 = [\"chatWindow\"];\nfunction NgChat_link_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"link\", 2);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"href\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.customTheme), ɵngcc0.ɵɵsanitizeResourceUrl);\n} }\nconst _c1 = function (a2) { return { \"ng-chat-window\": true, \"primary-outline-color\": true, \"ng-chat-window-collapsed\": a2 }; };\nconst _c2 = function (a0) { return { \"right\": a0 }; };\nfunction NgChat_div_2_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1, \"\\n        \");\n    ɵngcc0.ɵɵelementStart(2, \"ng-chat-window\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"onMessagesSeen\", function NgChat_div_2_div_5_Template_ng_chat_window_onMessagesSeen_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r6.onWindowMessagesSeen($event)); })(\"onMessageSent\", function NgChat_div_2_div_5_Template_ng_chat_window_onMessageSent_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r8.onWindowMessageSent($event)); })(\"onTabTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onTabTriggered_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r9.onWindowTabTriggered($event)); })(\"onChatWindowClosed\", function NgChat_div_2_div_5_Template_ng_chat_window_onChatWindowClosed_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r10.onWindowChatClosed($event)); })(\"onOptionTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onOptionTriggered_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r11.onWindowOptionTriggered($event)); })(\"onLoadHistoryTriggered\", function NgChat_div_2_div_5_Template_ng_chat_window_onLoadHistoryTriggered_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r12.fetchMessageHistory($event)); });\n    ɵngcc0.ɵɵtext(4, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(5, \"\\n    \");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const window_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c1, window_r3.isCollapsed))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(14, _c2, (!ctx_r2.hideFriendsList ? ctx_r2.friendsListWidth : 0) + 20 + ctx_r2.windowSizeFactor * i_r4 + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"fileUploadAdapter\", ctx_r2.fileUploadAdapter)(\"localization\", ctx_r2.localization)(\"userId\", ctx_r2.userId)(\"window\", window_r3)(\"showOptions\", ctx_r2.groupAdapter)(\"emojisEnabled\", ctx_r2.emojisEnabled)(\"linkfyEnabled\", ctx_r2.linkfyEnabled)(\"showMessageDate\", ctx_r2.showMessageDate)(\"messageDatePipeFormat\", ctx_r2.messageDatePipeFormat)(\"hasPagedHistory\", ctx_r2.hasPagedHistory);\n} }\nfunction NgChat_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1, \"\\n    \");\n    ɵngcc0.ɵɵelementStart(2, \"ng-chat-friends-list\", 4);\n    ɵngcc0.ɵɵlistener(\"onParticipantClicked\", function NgChat_div_2_Template_ng_chat_friends_list_onParticipantClicked_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r13.onParticipantClickedFromFriendsList($event)); })(\"onOptionPromptCanceled\", function NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptCanceled_2_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15.onOptionPromptCanceled()); })(\"onOptionPromptConfirmed\", function NgChat_div_2_Template_ng_chat_friends_list_onOptionPromptConfirmed_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r16.onOptionPromptConfirmed($event)); });\n    ɵngcc0.ɵɵtext(3, \"\\n    \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\n    \");\n    ɵngcc0.ɵɵtemplate(5, NgChat_div_2_div_5_Template, 6, 16, \"div\", 5);\n    ɵngcc0.ɵɵtext(6, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.theme);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"localization\", ctx_r1.localization)(\"shouldDisplay\", !ctx_r1.hideFriendsList)(\"userId\", ctx_r1.userId)(\"isCollapsed\", ctx_r1.isCollapsed)(\"searchEnabled\", ctx_r1.searchEnabled)(\"participants\", ctx_r1.participants)(\"participantsResponse\", ctx_r1.participantsResponse)(\"participantsInteractedWith\", ctx_r1.participantsInteractedWith)(\"windows\", ctx_r1.windows)(\"currentActiveOption\", ctx_r1.currentActiveOption);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.windows);\n} }\nfunction NgChatOptionsComponent_div_0_a_10_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatOptionsComponent_div_0_a_10_Template_a_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const option_r2 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r4.onOptionClicked(option_r2)); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"primary-text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\", option_r2.displayLabel, \"\\n\\t\\t\");\n} }\nfunction NgChatOptionsComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n    ɵngcc0.ɵɵtext(5, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(8, \"div\", 4);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatOptionsComponent_div_0_a_10_Template, 2, 2, \"a\", 5);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(12, \"      \\n\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(10);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n} }\nfunction NgChatFriendsListComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_8_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r4.onFriendsListActionCancelClicked()); });\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 7);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(4, \"i\", 8);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(7, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_8_Template_a_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r6.onFriendsListActionConfirmClicked()); });\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"i\", 10);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatFriendsListComponent_div_0_input_10_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 11);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatFriendsListComponent_div_0_input_10_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r7.searchInput = $event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r2.localization.searchPlaceholder)(\"ngModel\", ctx_r2.searchInput);\n} }\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 21);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const user_r10 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r15 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r15.onFriendsListCheckboxChange(user_r10, $event.target.checked)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r11.isUserSelectedFromFriendsList(user_r10));\n} }\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_div_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 23);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_img_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 24);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, user_r10.avatar), ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_span_15_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.unreadMessagesTotalByParticipant(user_r10));\n} }\nconst _c3 = function (a0) { return { \"ng-chat-friends-list-selectable-offset\": a0, \"ng-chat-friends-list-container\": true }; };\nconst _c4 = function (a1, a2, a3, a4) { return { \"ng-chat-participant-status\": true, \"online\": a1, \"busy\": a2, \"away\": a3, \"offline\": a4 }; };\nfunction NgChatFriendsListComponent_div_0_ul_12_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatFriendsListComponent_div_0_ul_12_li_2_input_2_Template, 1, 1, \"input\", 14);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_ul_12_li_2_Template_div_click_4_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r22); const user_r10 = restoredCtx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r21.onUserClick(user_r10)); });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatFriendsListComponent_div_0_ul_12_li_2_div_6_Template, 4, 0, \"div\", 16);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_ul_12_li_2_img_8_Template, 2, 3, \"img\", 17);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(10, \"strong\", 18);\n    ɵngcc0.ɵɵtext(11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(13, \"span\", 19);\n    ɵngcc0.ɵɵtext(14, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(15, NgChatFriendsListComponent_div_0_ul_12_li_2_span_15_Template, 2, 1, \"span\", 20);\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(17, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.currentActiveOption && ctx_r9.currentActiveOption.validateContext(user_r10));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r9.currentActiveOption));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !user_r10.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", user_r10.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(user_r10.displayName);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r9.chatParticipantStatusDescriptor(user_r10.status, ctx_r9.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(11, _c4, user_r10.status == ctx_r9.ChatParticipantStatus.Online, user_r10.status == ctx_r9.ChatParticipantStatus.Busy, user_r10.status == ctx_r9.ChatParticipantStatus.Away, user_r10.status == ctx_r9.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.unreadMessagesTotalByParticipant(user_r10).length > 0);\n} }\nconst _c5 = function (a0) { return { \"offset-search\": a0 }; };\nfunction NgChatFriendsListComponent_div_0_ul_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 12);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatFriendsListComponent_div_0_ul_12_li_2_Template, 18, 16, \"li\", 13);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r3.searchEnabled));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredParticipants);\n} }\nconst _c6 = function (a2) { return { \"primary-outline-color\": true, \"primary-background\": true, \"ng-chat-people-collapsed\": a2 }; };\nfunction NgChatFriendsListComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r23.onChatTitleClicked()); });\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_div_8_Template, 12, 0, \"div\", 3);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatFriendsListComponent_div_0_input_10_Template, 1, 2, \"input\", 4);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\");\n    ɵngcc0.ɵɵtemplate(12, NgChatFriendsListComponent_div_0_ul_12_Template, 4, 4, \"ul\", 5);\n    ɵngcc0.ɵɵtext(13, \"\\n\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c6, ctx_r0.isCollapsed));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\", ctx_r0.localization.title, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.currentActiveOption);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.searchEnabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isCollapsed);\n} }\nconst _c7 = [\"chatMessages\"];\nconst _c8 = [\"nativeFileInput\"];\nconst _c9 = [\"chatWindowInput\"];\nfunction NgChatWindowComponent_ng_container_0_span_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.unreadMessagesTotal(ctx_r2.window));\n} }\nfunction NgChatWindowComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_div_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.onChatWindowClicked(ctx_r3.window)); });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(6, \"strong\", 3);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"span\", 4);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(11, NgChatWindowComponent_ng_container_0_span_11_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(14, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_a_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5.onCloseChatWindow()); });\n    ɵngcc0.ɵɵtext(15, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(17, \"\\n\");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\\t\", ctx_r0.window.participant.displayName, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.chatParticipantStatusDescriptor(ctx_r0.window.participant.status, ctx_r0.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c4, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Online, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Busy, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Away, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.unreadMessagesTotal(ctx_r0.window).length > 0);\n} }\nfunction NgChatWindowComponent_ng_container_2_span_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.unreadMessagesTotal(ctx_r6.window));\n} }\nfunction NgChatWindowComponent_ng_container_2_div_23_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 18);\n    ɵngcc0.ɵɵtext(3, \"Loading history...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatWindowComponent_ng_container_2_div_25_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"a\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_div_25_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r13.fetchMessageHistory(ctx_r13.window)); });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.localization.loadMessageHistoryPlaceholder);\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 28);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_img_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 29);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r22.getChatWindowAvatar(ctx_r22.window.participant, message_r15)), ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 30);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"groupMessageDisplayName\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r23.window.participant, message_r15));\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_div_2_Template, 4, 0, \"div\", 24);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_img_4_Template, 2, 3, \"img\", 25);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_span_6_Template, 3, 4, \"span\", 26);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.window.participant.participantType == ctx_r17.ChatParticipantType.Group);\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_div_6_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r27.messageDatePipeFormat));\n} }\nconst _c10 = function (a0, a1) { return { \"sent-chat-message-container\": a0, \"received-chat-message-container\": a1 }; };\nfunction NgChatWindowComponent_ng_container_2_div_27_div_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n          \");\n    ɵngcc0.ɵɵelement(2, \"span\", 31);\n    ɵngcc0.ɵɵpipe(3, \"linkfy\");\n    ɵngcc0.ɵɵpipe(4, \"emojify\");\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_div_6_span_6_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵtext(7, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c10, message_r15.fromId == ctx_r18.userId, message_r15.fromId != ctx_r18.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ɵngcc0.ɵɵpipeBind2(3, 3, ɵngcc0.ɵɵpipeBind2(4, 6, message_r15.message, ctx_r18.emojisEnabled), ctx_r18.linkfyEnabled), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.showMessageDate && message_r15.dateSent);\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_div_8_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r30.messageDatePipeFormat));\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\n          \");\n    ɵngcc0.ɵɵelement(2, \"img\", 34);\n    ɵngcc0.ɵɵtext(3, \"\\n\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_2_div_27_div_8_span_4_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c10, message_r15.fromId == ctx_r19.userId, message_r15.fromId != ctx_r19.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", message_r15.message, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r19.showMessageDate && message_r15.dateSent);\n} }\nfunction NgChatWindowComponent_ng_container_2_div_27_div_10_span_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 40);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", message_r15.fileSizeInBytes, \" Bytes\");\n} }\nconst _c11 = function (a1) { return { \"file-message-container\": true, \"received\": a1 }; };\nfunction NgChatWindowComponent_ng_container_2_div_27_div_10_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 35);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(4, \"i\", 36);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(7, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_div_27_div_10_Template_a_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r37); const message_r15 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r35.markMessagesAsRead([message_r15])); });\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(9, \"span\", 38);\n    ɵngcc0.ɵɵtext(10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(12, NgChatWindowComponent_ng_container_2_div_27_div_10_span_12_Template, 2, 1, \"span\", 39);\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(14, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c11, message_r15.fromId != ctx_r20.userId));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵattribute(\"href\", message_r15.downloadUrl, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"title\", message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(message_r15.message);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r15.fileSizeInBytes);\n} }\nconst _c12 = function (a1) { return { \"ng-chat-message\": true, \"ng-chat-message-received\": a1 }; };\nfunction NgChatWindowComponent_ng_container_2_div_27_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_div_27_ng_container_2_Template, 8, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerStart(4, 22);\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_2_div_27_div_6_Template, 8, 12, \"div\", 23);\n    ɵngcc0.ɵɵtext(7, \"\\n        \");\n    ɵngcc0.ɵɵtemplate(8, NgChatWindowComponent_ng_container_2_div_27_div_8_Template, 6, 6, \"div\", 23);\n    ɵngcc0.ɵɵtext(9, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(10, NgChatWindowComponent_ng_container_2_div_27_div_10_Template, 15, 7, \"div\", 23);\n    ɵngcc0.ɵɵtext(11, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c12, message_r15.fromId != ctx_r10.userId));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.isAvatarVisible(ctx_r10.window, message_r15, i_r16));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", message_r15.type);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Text);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Image);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.File);\n} }\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template(rf, ctx) { if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 45);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r42 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r42.triggerNativeFileUpload(ctx_r42.window)); });\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(2, \"i\", 46);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n} }\nfunction NgChatWindowComponent_ng_container_2_ng_container_37_Template(rf, ctx) { if (rf & 1) {\n    const _r45 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_ng_container_37_a_2_Template, 4, 0, \"a\", 41);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"input\", 42, 43);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatWindowComponent_ng_container_2_ng_container_37_Template_input_change_4_listener() { ɵngcc0.ɵɵrestoreView(_r45); const ctx_r44 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r44.onFileChosen(ctx_r44.window)); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(7, NgChatWindowComponent_ng_container_2_ng_container_37_div_7_Template, 1, 0, \"div\", 44);\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.isUploadingFile(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r12.getUniqueFileUploadInstanceId(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.isUploadingFile(ctx_r12.window));\n} }\nconst _c13 = function (a1) { return { \"chat-window-input\": true, \"has-side-action\": a1 }; };\nfunction NgChatWindowComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n    ɵngcc0.ɵɵtext(3, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_Template_div_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r46 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r46.onChatWindowClicked(ctx_r46.window)); });\n    ɵngcc0.ɵɵtext(5, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelementStart(6, \"strong\", 3);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(8, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵelement(9, \"span\", 4);\n    ɵngcc0.ɵɵtext(10, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵtemplate(11, NgChatWindowComponent_ng_container_2_span_11_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵtext(12, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(13, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(14, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_2_Template_a_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r48 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r48.onCloseChatWindow()); });\n    ɵngcc0.ɵɵtext(15, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(16, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(17, \"ng-chat-options\", 8);\n    ɵngcc0.ɵɵlistener(\"activeOptionTrackerChange\", function NgChatWindowComponent_ng_container_2_Template_ng_chat_options_activeOptionTrackerChange_17_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r49 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r49.activeOptionTrackerChange($event)); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(18, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(19, \"\\n\\t\");\n    ɵngcc0.ɵɵelementStart(20, \"div\", 9, 10);\n    ɵngcc0.ɵɵtext(22, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(23, NgChatWindowComponent_ng_container_2_div_23_Template, 5, 0, \"div\", 11);\n    ɵngcc0.ɵɵtext(24, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(25, NgChatWindowComponent_ng_container_2_div_25_Template, 5, 1, \"div\", 12);\n    ɵngcc0.ɵɵtext(26, \"\\n\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(27, NgChatWindowComponent_ng_container_2_div_27_Template, 13, 8, \"div\", 13);\n    ɵngcc0.ɵɵtext(28, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(29, \"\\n\\n\\t\");\n    ɵngcc0.ɵɵelementStart(30, \"div\", 14);\n    ɵngcc0.ɵɵtext(31, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵelementStart(32, \"input\", 15, 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatWindowComponent_ng_container_2_Template_input_ngModelChange_32_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r50.window.newMessage = $event); })(\"keydown\", function NgChatWindowComponent_ng_container_2_Template_input_keydown_32_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r51.onChatInputTyped($event, ctx_r51.window)); })(\"blur\", function NgChatWindowComponent_ng_container_2_Template_input_blur_32_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r52 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r52.toggleWindowFocus(ctx_r52.window)); })(\"focus\", function NgChatWindowComponent_ng_container_2_Template_input_focus_32_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r53 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r53.toggleWindowFocus(ctx_r53.window)); });\n    ɵngcc0.ɵɵpipe(34, \"emojify\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(35, \"\\n\\n\\t\\t\");\n    ɵngcc0.ɵɵtext(36, \"\\n\\t\\t\");\n    ɵngcc0.ɵɵtemplate(37, NgChatWindowComponent_ng_container_2_ng_container_37_Template, 9, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵtext(38, \"\\n\\t\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(39, \"\\n\");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\n\\t\\t\\t\\t\", ctx_r1.window.participant.displayName, \"\\n\\t\\t\\t\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.chatParticipantStatusDescriptor(ctx_r1.window.participant.status, ctx_r1.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(17, _c4, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Online, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Busy, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Away, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.unreadMessagesTotal(ctx_r1.window).length > 0);\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"ng-chat-options-container\")(\"options\", ctx_r1.defaultWindowOptions(ctx_r1.window));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.hasPagedHistory && ctx_r1.window.hasMoreMessages && !ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.window.messages);\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ɵngcc0.ɵɵpipeBind2(34, 14, ctx_r1.window.newMessage, ctx_r1.emojisEnabled))(\"placeholder\", ctx_r1.localization.messagePlaceholder)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(22, _c13, ctx_r1.fileUploadAdapter));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.fileUploadAdapter);\n} }\nclass ChatAdapter {\r\n    constructor() {\r\n        // ### Abstract adapter methods ###\r\n        // Event handlers\r\n        /** @internal */\r\n        this.friendsListChangedHandler = (participantsResponse) => { };\r\n        /** @internal */\r\n        this.messageReceivedHandler = (participant, message) => { };\r\n    }\r\n    // ### Adapter/Chat income/ingress events ###\r\n    onFriendsListChanged(participantsResponse) {\r\n        this.friendsListChangedHandler(participantsResponse);\r\n    }\r\n    onMessageReceived(participant, message) {\r\n        this.messageReceivedHandler(participant, message);\r\n    }\r\n}\n\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Text\"] = 1] = \"Text\";\r\n    MessageType[MessageType[\"File\"] = 2] = \"File\";\r\n    MessageType[MessageType[\"Image\"] = 3] = \"Image\";\r\n})(MessageType || (MessageType = {}));\n\nclass Message {\r\n    constructor() {\r\n        this.type = MessageType.Text;\r\n    }\r\n}\n\nvar ChatParticipantStatus;\r\n(function (ChatParticipantStatus) {\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Online\"] = 0] = \"Online\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Busy\"] = 1] = \"Busy\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Away\"] = 2] = \"Away\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Offline\"] = 3] = \"Offline\";\r\n})(ChatParticipantStatus || (ChatParticipantStatus = {}));\n\nvar ChatParticipantType;\r\n(function (ChatParticipantType) {\r\n    ChatParticipantType[ChatParticipantType[\"User\"] = 0] = \"User\";\r\n    ChatParticipantType[ChatParticipantType[\"Group\"] = 1] = \"Group\";\r\n})(ChatParticipantType || (ChatParticipantType = {}));\n\nclass User {\r\n    constructor() {\r\n        this.participantType = ChatParticipantType.User;\r\n    }\r\n}\n\nclass ParticipantResponse {\r\n}\n\nclass ParticipantMetadata {\r\n    constructor() {\r\n        this.totalUnreadMessages = 0;\r\n    }\r\n}\n\nclass Window {\r\n    constructor(participant, isLoadingHistory, isCollapsed) {\r\n        this.messages = [];\r\n        this.newMessage = \"\";\r\n        // UI Behavior properties\r\n        this.isCollapsed = false;\r\n        this.isLoadingHistory = false;\r\n        this.hasFocus = false;\r\n        this.hasMoreMessages = true;\r\n        this.historyPage = 0;\r\n        this.participant = participant;\r\n        this.messages = [];\r\n        this.isLoadingHistory = isLoadingHistory;\r\n        this.hasFocus = false; // This will be triggered when the 'newMessage' input gets the current focus\r\n        this.isCollapsed = isCollapsed;\r\n        this.hasMoreMessages = false;\r\n        this.historyPage = 0;\r\n    }\r\n}\n\n/**\r\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr.\r\n * You will need an existing @see ChatAdapter implementation\r\n */\r\nclass PagedHistoryChatAdapter extends ChatAdapter {\r\n}\n\nvar Theme;\r\n(function (Theme) {\r\n    Theme[\"Custom\"] = \"custom-theme\";\r\n    Theme[\"Light\"] = \"light-theme\";\r\n    Theme[\"Dark\"] = \"dark-theme\";\r\n})(Theme || (Theme = {}));\n\n// Poached from: https://github.com/Steve-Fenton/TypeScriptUtilities\r\n// @dynamic\r\nclass Guid {\r\n    static newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\n\nclass Group {\r\n    constructor(participants) {\r\n        this.id = Guid.newGuid();\r\n        this.participantType = ChatParticipantType.Group;\r\n        this.chattingTo = participants;\r\n        this.status = ChatParticipantStatus.Online;\r\n        // TODO: Add some customization for this in future releases\r\n        this.displayName = participants.map((p) => p.displayName).sort((first, second) => second > first ? -1 : 1).join(\", \");\r\n    }\r\n}\n\nvar ScrollDirection;\r\n(function (ScrollDirection) {\r\n    ScrollDirection[ScrollDirection[\"Top\"] = 0] = \"Top\";\r\n    ScrollDirection[ScrollDirection[\"Bottom\"] = 1] = \"Bottom\";\r\n})(ScrollDirection || (ScrollDirection = {}));\n\nclass DefaultFileUploadAdapter {\r\n    /**\r\n     * @summary Basic file upload adapter implementation for HTTP request form file consumption\r\n     * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\r\n     */\r\n    constructor(_serverEndpointUrl, _http) {\r\n        this._serverEndpointUrl = _serverEndpointUrl;\r\n        this._http = _http;\r\n    }\r\n    uploadFile(file, participantId) {\r\n        const formData = new FormData();\r\n        //formData.append('ng-chat-sender-userid', currentUserId);\r\n        formData.append('ng-chat-participant-id', participantId);\r\n        formData.append('file', file, file.name);\r\n        return this._http.post(this._serverEndpointUrl, formData);\r\n        // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\r\n        // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\r\n        //     reportProgress: true\r\n        // });\r\n        // const uploadProgress = new Subject<number>();\r\n        // const uploadStatus = uploadProgress.asObservable();\r\n        //const responsePromise = new Subject<Message>();\r\n        // this._http\r\n        //     .request(fileRequest)\r\n        //     .subscribe(event => {\r\n        //         // if (event.type == HttpEventType.UploadProgress)\r\n        //         // {\r\n        //         //     const percentDone = Math.round(100 * event.loaded / event.total);\r\n        //         //     uploadProgress.next(percentDone);\r\n        //         // }\r\n        //         // else if (event instanceof HttpResponse)\r\n        //         // {\r\n        //         //     uploadProgress.complete();\r\n        //         // }\r\n        //     });\r\n    }\r\n}\n\nclass NgChat {\r\n    constructor(_httpClient) {\r\n        this._httpClient = _httpClient;\r\n        // Exposes enums for the ng-template\r\n        this.ChatParticipantType = ChatParticipantType;\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.MessageType = MessageType;\r\n        this._isDisabled = false;\r\n        this.isCollapsed = false;\r\n        this.maximizeWindowOnNewMessage = true;\r\n        this.pollFriendsList = false;\r\n        this.pollingInterval = 5000;\r\n        this.historyEnabled = true;\r\n        this.emojisEnabled = true;\r\n        this.linkfyEnabled = true;\r\n        this.audioEnabled = true;\r\n        this.searchEnabled = true;\r\n        this.audioSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\r\n        this.persistWindowsState = true;\r\n        this.title = \"Friends\";\r\n        this.messagePlaceholder = \"Type a message\";\r\n        this.searchPlaceholder = \"Search\";\r\n        this.browserNotificationsEnabled = true;\r\n        this.browserNotificationIconSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\r\n        this.browserNotificationTitle = \"New message from\";\r\n        this.historyPageSize = 10;\r\n        this.hideFriendsList = false;\r\n        this.hideFriendsListOnUnsupportedViewport = true;\r\n        this.theme = Theme.Light;\r\n        this.messageDatePipeFormat = \"short\";\r\n        this.showMessageDate = true;\r\n        this.isViewportOnMobileEnabled = false;\r\n        this.onParticipantClicked = new EventEmitter();\r\n        this.onParticipantChatOpened = new EventEmitter();\r\n        this.onParticipantChatClosed = new EventEmitter();\r\n        this.onMessagesSeen = new EventEmitter();\r\n        this.browserNotificationsBootstrapped = false;\r\n        this.hasPagedHistory = false;\r\n        // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\r\n        this.statusDescription = {\r\n            online: 'Online',\r\n            busy: 'Busy',\r\n            away: 'Away',\r\n            offline: 'Offline'\r\n        };\r\n        this.participantsInteractedWith = [];\r\n        // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\r\n        this.windowSizeFactor = 320;\r\n        // Total width size of the friends list section\r\n        this.friendsListWidth = 262;\r\n        // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\r\n        this.unsupportedViewport = false;\r\n        this.windows = [];\r\n        this.isBootstrapped = false;\r\n    }\r\n    get isDisabled() {\r\n        return this._isDisabled;\r\n    }\r\n    set isDisabled(value) {\r\n        this._isDisabled = value;\r\n        if (value) {\r\n            // To address issue https://github.com/rpaschoal/ng-chat/issues/120\r\n            window.clearInterval(this.pollingIntervalWindowInstance);\r\n        }\r\n        else {\r\n            this.activateFriendListFetch();\r\n        }\r\n    }\r\n    get localStorageKey() {\r\n        return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        this.bootstrapChat();\r\n    }\r\n    onResize(event) {\r\n        this.viewPortTotalArea = event.target.innerWidth;\r\n        this.NormalizeWindows();\r\n    }\r\n    // Checks if there are more opened windows than the view port can display\r\n    NormalizeWindows() {\r\n        const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\r\n        const difference = this.windows.length - maxSupportedOpenedWindows;\r\n        if (difference >= 0) {\r\n            this.windows.splice(this.windows.length - difference);\r\n        }\r\n        this.updateWindowsState(this.windows);\r\n        // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\r\n        this.unsupportedViewport = this.isViewportOnMobileEnabled ? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\r\n    }\r\n    // Initializes the chat plugin and the messaging adapter\r\n    bootstrapChat() {\r\n        let initializationException = null;\r\n        if (this.adapter != null && this.userId != null) {\r\n            try {\r\n                this.viewPortTotalArea = window.innerWidth;\r\n                this.initializeTheme();\r\n                this.initializeDefaultText();\r\n                this.initializeBrowserNotifications();\r\n                // Binding event listeners\r\n                this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\r\n                this.adapter.friendsListChangedHandler = (participantsResponse) => this.onFriendsListChanged(participantsResponse);\r\n                this.activateFriendListFetch();\r\n                this.bufferAudioFile();\r\n                this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\r\n                if (this.fileUploadUrl && this.fileUploadUrl !== \"\") {\r\n                    this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\r\n                }\r\n                this.NormalizeWindows();\r\n                this.isBootstrapped = true;\r\n            }\r\n            catch (ex) {\r\n                initializationException = ex;\r\n            }\r\n        }\r\n        if (!this.isBootstrapped) {\r\n            console.error(\"ng-chat component couldn't be bootstrapped.\");\r\n            if (this.userId == null) {\r\n                console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\r\n            }\r\n            if (this.adapter == null) {\r\n                console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\r\n            }\r\n            if (initializationException) {\r\n                console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\r\n                console.error(initializationException);\r\n            }\r\n        }\r\n    }\r\n    activateFriendListFetch() {\r\n        if (this.adapter) {\r\n            // Loading current users list\r\n            if (this.pollFriendsList) {\r\n                // Setting a long poll interval to update the friends list\r\n                this.fetchFriendsList(true);\r\n                this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\r\n            }\r\n            else {\r\n                // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\r\n                this.fetchFriendsList(true);\r\n            }\r\n        }\r\n    }\r\n    // Initializes browser notifications\r\n    initializeBrowserNotifications() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.browserNotificationsEnabled && (\"Notification\" in window)) {\r\n                if ((yield Notification.requestPermission()) === \"granted\") {\r\n                    this.browserNotificationsBootstrapped = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Initializes default text\r\n    initializeDefaultText() {\r\n        if (!this.localization) {\r\n            this.localization = {\r\n                messagePlaceholder: this.messagePlaceholder,\r\n                searchPlaceholder: this.searchPlaceholder,\r\n                title: this.title,\r\n                statusDescription: this.statusDescription,\r\n                browserNotificationTitle: this.browserNotificationTitle,\r\n                loadMessageHistoryPlaceholder: \"Load older messages\"\r\n            };\r\n        }\r\n    }\r\n    initializeTheme() {\r\n        if (this.customTheme) {\r\n            this.theme = Theme.Custom;\r\n        }\r\n        else if (this.theme != Theme.Light && this.theme != Theme.Dark) {\r\n            // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\r\n            throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\r\n        }\r\n    }\r\n    // Sends a request to load the friends list\r\n    fetchFriendsList(isBootstrapping) {\r\n        this.adapter.listFriends()\r\n            .pipe(map((participantsResponse) => {\r\n            this.participantsResponse = participantsResponse;\r\n            this.participants = participantsResponse.map((response) => {\r\n                return response.participant;\r\n            });\r\n        })).subscribe(() => {\r\n            if (isBootstrapping) {\r\n                this.restoreWindowsState();\r\n            }\r\n        });\r\n    }\r\n    fetchMessageHistory(window) {\r\n        // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\r\n        if (this.adapter instanceof PagedHistoryChatAdapter) {\r\n            window.isLoadingHistory = true;\r\n            this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage)\r\n                .pipe(map((result) => {\r\n                result.forEach((message) => this.assertMessageType(message));\r\n                window.messages = result.concat(window.messages);\r\n                window.isLoadingHistory = false;\r\n                const direction = (window.historyPage == 1) ? ScrollDirection.Bottom : ScrollDirection.Top;\r\n                window.hasMoreMessages = result.length == this.historyPageSize;\r\n                setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\r\n            })).subscribe();\r\n        }\r\n        else {\r\n            this.adapter.getMessageHistory(window.participant.id)\r\n                .pipe(map((result) => {\r\n                result.forEach((message) => this.assertMessageType(message));\r\n                window.messages = result.concat(window.messages);\r\n                window.isLoadingHistory = false;\r\n                setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\r\n            })).subscribe();\r\n        }\r\n    }\r\n    onFetchMessageHistoryLoaded(messages, window, direction, forceMarkMessagesAsSeen = false) {\r\n        this.scrollChatWindow(window, direction);\r\n        if (window.hasFocus || forceMarkMessagesAsSeen) {\r\n            const unseenMessages = messages.filter(m => !m.dateSeen);\r\n            this.markMessagesAsRead(unseenMessages);\r\n        }\r\n    }\r\n    // Updates the friends list via the event handler\r\n    onFriendsListChanged(participantsResponse) {\r\n        if (participantsResponse) {\r\n            this.participantsResponse = participantsResponse;\r\n            this.participants = participantsResponse.map((response) => {\r\n                return response.participant;\r\n            });\r\n            this.participantsInteractedWith = [];\r\n        }\r\n    }\r\n    // Handles received messages by the adapter\r\n    onMessageReceived(participant, message) {\r\n        if (participant && message) {\r\n            const chatWindow = this.openChatWindow(participant);\r\n            this.assertMessageType(message);\r\n            if (!chatWindow[1] || !this.historyEnabled) {\r\n                chatWindow[0].messages.push(message);\r\n                this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\r\n                if (chatWindow[0].hasFocus) {\r\n                    this.markMessagesAsRead([message]);\r\n                }\r\n            }\r\n            this.emitMessageSound(chatWindow[0]);\r\n            // Github issue #58\r\n            // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\r\n            if (this.maximizeWindowOnNewMessage || (!chatWindow[1] && !chatWindow[0].isCollapsed)) {\r\n                // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\r\n                this.emitBrowserNotification(chatWindow[0], message);\r\n            }\r\n        }\r\n    }\r\n    onParticipantClickedFromFriendsList(participant) {\r\n        this.openChatWindow(participant, true, true);\r\n    }\r\n    cancelOptionPrompt() {\r\n        if (this.currentActiveOption) {\r\n            this.currentActiveOption.isActive = false;\r\n            this.currentActiveOption = null;\r\n        }\r\n    }\r\n    onOptionPromptCanceled() {\r\n        this.cancelOptionPrompt();\r\n    }\r\n    onOptionPromptConfirmed(event) {\r\n        // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\r\n        this.confirmNewGroup(event);\r\n        // Canceling current state\r\n        this.cancelOptionPrompt();\r\n    }\r\n    confirmNewGroup(users) {\r\n        const newGroup = new Group(users);\r\n        this.openChatWindow(newGroup);\r\n        if (this.groupAdapter) {\r\n            this.groupAdapter.groupCreated(newGroup);\r\n        }\r\n    }\r\n    // Opens a new chat whindow. Takes care of available viewport\r\n    // Works for opening a chat window for an user or for a group\r\n    // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\r\n    openChatWindow(participant, focusOnNewWindow = false, invokedByUserClick = false) {\r\n        // Is this window opened?\r\n        const openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n        if (!openedWindow) {\r\n            if (invokedByUserClick) {\r\n                this.onParticipantClicked.emit(participant);\r\n            }\r\n            // Refer to issue #58 on Github\r\n            const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\r\n            const newChatWindow = new Window(participant, this.historyEnabled, collapseWindow);\r\n            // Loads the chat history via an RxJs Observable\r\n            if (this.historyEnabled) {\r\n                this.fetchMessageHistory(newChatWindow);\r\n            }\r\n            this.windows.unshift(newChatWindow);\r\n            // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\r\n            if (!this.isViewportOnMobileEnabled) {\r\n                if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\r\n                    this.windows.pop();\r\n                }\r\n            }\r\n            this.updateWindowsState(this.windows);\r\n            if (focusOnNewWindow && !collapseWindow) {\r\n                this.focusOnWindow(newChatWindow);\r\n            }\r\n            this.participantsInteractedWith.push(participant);\r\n            this.onParticipantChatOpened.emit(participant);\r\n            return [newChatWindow, true];\r\n        }\r\n        else {\r\n            // Returns the existing chat window\r\n            return [openedWindow, false];\r\n        }\r\n    }\r\n    // Focus on the input element of the supplied window\r\n    focusOnWindow(window, callback = () => { }) {\r\n        const windowIndex = this.windows.indexOf(window);\r\n        if (windowIndex >= 0) {\r\n            setTimeout(() => {\r\n                if (this.chatWindows) {\r\n                    const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\r\n                    chatWindowToFocus.chatWindowInput.nativeElement.focus();\r\n                }\r\n                callback();\r\n            });\r\n        }\r\n    }\r\n    assertMessageType(message) {\r\n        // Always fallback to \"Text\" messages to avoid rendenring issues\r\n        if (!message.type) {\r\n            message.type = MessageType.Text;\r\n        }\r\n    }\r\n    // Marks all messages provided as read with the current time.\r\n    markMessagesAsRead(messages) {\r\n        const currentDate = new Date();\r\n        messages.forEach((msg) => {\r\n            msg.dateSeen = currentDate;\r\n        });\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n    // Buffers audio file (For component's bootstrapping)\r\n    bufferAudioFile() {\r\n        if (this.audioSource && this.audioSource.length > 0) {\r\n            this.audioFile = new Audio();\r\n            this.audioFile.src = this.audioSource;\r\n            this.audioFile.load();\r\n        }\r\n    }\r\n    // Emits a message notification audio if enabled after every message received\r\n    emitMessageSound(window) {\r\n        if (this.audioEnabled && !window.hasFocus && this.audioFile) {\r\n            this.audioFile.play();\r\n        }\r\n    }\r\n    // Emits a browser notification\r\n    emitBrowserNotification(window, message) {\r\n        if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\r\n            const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\r\n                'body': message.message,\r\n                'icon': this.browserNotificationIconSource\r\n            });\r\n            setTimeout(() => {\r\n                notification.close();\r\n            }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\r\n        }\r\n    }\r\n    // Saves current windows state into local storage if persistence is enabled\r\n    updateWindowsState(windows) {\r\n        if (this.persistWindowsState) {\r\n            const participantIds = windows.map((w) => {\r\n                return w.participant.id;\r\n            });\r\n            localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\r\n        }\r\n    }\r\n    restoreWindowsState() {\r\n        try {\r\n            if (this.persistWindowsState) {\r\n                const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\r\n                if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0) {\r\n                    const participantIds = JSON.parse(stringfiedParticipantIds);\r\n                    const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\r\n                    participantsToRestore.forEach((participant) => {\r\n                        this.openChatWindow(participant);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\r\n        }\r\n    }\r\n    // Gets closest open window if any. Most recent opened has priority (Right)\r\n    getClosestWindow(window) {\r\n        const index = this.windows.indexOf(window);\r\n        if (index > 0) {\r\n            return this.windows[index - 1];\r\n        }\r\n        else if (index == 0 && this.windows.length > 1) {\r\n            return this.windows[index + 1];\r\n        }\r\n    }\r\n    closeWindow(window) {\r\n        const index = this.windows.indexOf(window);\r\n        this.windows.splice(index, 1);\r\n        this.updateWindowsState(this.windows);\r\n        this.onParticipantChatClosed.emit(window.participant);\r\n    }\r\n    getChatWindowComponentInstance(targetWindow) {\r\n        const windowIndex = this.windows.indexOf(targetWindow);\r\n        if (this.chatWindows) {\r\n            let targetWindow = this.chatWindows.toArray()[windowIndex];\r\n            return targetWindow;\r\n        }\r\n        return null;\r\n    }\r\n    // Scrolls a chat window message flow to the bottom\r\n    scrollChatWindow(window, direction) {\r\n        const chatWindow = this.getChatWindowComponentInstance(window);\r\n        if (chatWindow) {\r\n            chatWindow.scrollChatWindow(window, direction);\r\n        }\r\n    }\r\n    onWindowMessagesSeen(messagesSeen) {\r\n        this.markMessagesAsRead(messagesSeen);\r\n    }\r\n    onWindowChatClosed(payload) {\r\n        const { closedWindow, closedViaEscapeKey } = payload;\r\n        if (closedViaEscapeKey) {\r\n            let closestWindow = this.getClosestWindow(closedWindow);\r\n            if (closestWindow) {\r\n                this.focusOnWindow(closestWindow, () => { this.closeWindow(closedWindow); });\r\n            }\r\n            else {\r\n                this.closeWindow(closedWindow);\r\n            }\r\n        }\r\n        else {\r\n            this.closeWindow(closedWindow);\r\n        }\r\n    }\r\n    onWindowTabTriggered(payload) {\r\n        const { triggeringWindow, shiftKeyPressed } = payload;\r\n        const currentWindowIndex = this.windows.indexOf(triggeringWindow);\r\n        let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\r\n        if (!windowToFocus) {\r\n            // Edge windows, go to start or end\r\n            windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\r\n        }\r\n        this.focusOnWindow(windowToFocus);\r\n    }\r\n    onWindowMessageSent(messageSent) {\r\n        this.adapter.sendMessage(messageSent);\r\n    }\r\n    onWindowOptionTriggered(option) {\r\n        this.currentActiveOption = option;\r\n    }\r\n    triggerOpenChatWindow(user) {\r\n        if (user) {\r\n            this.openChatWindow(user);\r\n        }\r\n    }\r\n    triggerCloseChatWindow(userId) {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n        if (openedWindow) {\r\n            this.closeWindow(openedWindow);\r\n        }\r\n    }\r\n    triggerToggleChatWindowVisibility(userId) {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n        if (openedWindow) {\r\n            const chatWindow = this.getChatWindowComponentInstance(openedWindow);\r\n            if (chatWindow) {\r\n                chatWindow.onChatWindowClicked(openedWindow);\r\n            }\r\n        }\r\n    }\r\n}\nNgChat.ɵfac = function NgChat_Factory(t) { return new (t || NgChat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient)); };\nNgChat.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChat, selectors: [[\"ng-chat\"]], viewQuery: function NgChat_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindows = _t);\n    } }, hostBindings: function NgChat_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function NgChat_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } }, inputs: { isCollapsed: \"isCollapsed\", maximizeWindowOnNewMessage: \"maximizeWindowOnNewMessage\", pollFriendsList: \"pollFriendsList\", pollingInterval: \"pollingInterval\", historyEnabled: \"historyEnabled\", emojisEnabled: \"emojisEnabled\", linkfyEnabled: \"linkfyEnabled\", audioEnabled: \"audioEnabled\", searchEnabled: \"searchEnabled\", audioSource: \"audioSource\", persistWindowsState: \"persistWindowsState\", title: \"title\", messagePlaceholder: \"messagePlaceholder\", searchPlaceholder: \"searchPlaceholder\", browserNotificationsEnabled: \"browserNotificationsEnabled\", browserNotificationIconSource: \"browserNotificationIconSource\", browserNotificationTitle: \"browserNotificationTitle\", historyPageSize: \"historyPageSize\", hideFriendsList: \"hideFriendsList\", hideFriendsListOnUnsupportedViewport: \"hideFriendsListOnUnsupportedViewport\", theme: \"theme\", messageDatePipeFormat: \"messageDatePipeFormat\", showMessageDate: \"showMessageDate\", isViewportOnMobileEnabled: \"isViewportOnMobileEnabled\", isDisabled: \"isDisabled\", fileUploadAdapter: \"fileUploadAdapter\", localization: \"localization\", adapter: \"adapter\", groupAdapter: \"groupAdapter\", userId: \"userId\", fileUploadUrl: \"fileUploadUrl\", customTheme: \"customTheme\" }, outputs: { onParticipantClicked: \"onParticipantClicked\", onParticipantChatOpened: \"onParticipantChatOpened\", onParticipantChatClosed: \"onParticipantChatClosed\", onMessagesSeen: \"onMessagesSeen\" }, decls: 4, vars: 2, consts: [[\"rel\", \"stylesheet\", 3, \"href\", 4, \"ngIf\"], [\"id\", \"ng-chat\", 3, \"ngClass\", 4, \"ngIf\"], [\"rel\", \"stylesheet\", 3, \"href\"], [\"id\", \"ng-chat\", 3, \"ngClass\"], [3, \"localization\", \"shouldDisplay\", \"userId\", \"isCollapsed\", \"searchEnabled\", \"participants\", \"participantsResponse\", \"participantsInteractedWith\", \"windows\", \"currentActiveOption\", \"onParticipantClicked\", \"onOptionPromptCanceled\", \"onOptionPromptConfirmed\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"fileUploadAdapter\", \"localization\", \"userId\", \"window\", \"showOptions\", \"emojisEnabled\", \"linkfyEnabled\", \"showMessageDate\", \"messageDatePipeFormat\", \"hasPagedHistory\", \"onMessagesSeen\", \"onMessageSent\", \"onTabTriggered\", \"onChatWindowClosed\", \"onOptionTriggered\", \"onLoadHistoryTriggered\"], [\"chatWindow\", \"\"]], template: function NgChat_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChat_link_0_Template, 2, 3, \"link\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\\n\");\n        ɵngcc0.ɵɵtemplate(2, NgChat_div_2_Template, 7, 12, \"div\", 1);\n        ɵngcc0.ɵɵtext(3, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.customTheme);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isDisabled && ctx.isBootstrapped && !ctx.unsupportedViewport);\n    } }, dependencies: function () { return [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle, NgChatFriendsListComponent, NgChatWindowComponent, SanitizePipe]; }, styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"], encapsulation: 2 });\r\nNgChat.ctorParameters = () => [\r\n    { type: HttpClient }\r\n];\r\nNgChat.propDecorators = {\r\n    isDisabled: [{ type: Input }],\r\n    adapter: [{ type: Input }],\r\n    groupAdapter: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    isCollapsed: [{ type: Input }],\r\n    maximizeWindowOnNewMessage: [{ type: Input }],\r\n    pollFriendsList: [{ type: Input }],\r\n    pollingInterval: [{ type: Input }],\r\n    historyEnabled: [{ type: Input }],\r\n    emojisEnabled: [{ type: Input }],\r\n    linkfyEnabled: [{ type: Input }],\r\n    audioEnabled: [{ type: Input }],\r\n    searchEnabled: [{ type: Input }],\r\n    audioSource: [{ type: Input }],\r\n    persistWindowsState: [{ type: Input }],\r\n    title: [{ type: Input }],\r\n    messagePlaceholder: [{ type: Input }],\r\n    searchPlaceholder: [{ type: Input }],\r\n    browserNotificationsEnabled: [{ type: Input }],\r\n    browserNotificationIconSource: [{ type: Input }],\r\n    browserNotificationTitle: [{ type: Input }],\r\n    historyPageSize: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    hideFriendsList: [{ type: Input }],\r\n    hideFriendsListOnUnsupportedViewport: [{ type: Input }],\r\n    fileUploadUrl: [{ type: Input }],\r\n    theme: [{ type: Input }],\r\n    customTheme: [{ type: Input }],\r\n    messageDatePipeFormat: [{ type: Input }],\r\n    showMessageDate: [{ type: Input }],\r\n    isViewportOnMobileEnabled: [{ type: Input }],\r\n    fileUploadAdapter: [{ type: Input }],\r\n    onParticipantClicked: [{ type: Output }],\r\n    onParticipantChatOpened: [{ type: Output }],\r\n    onParticipantChatClosed: [{ type: Output }],\r\n    onMessagesSeen: [{ type: Output }],\r\n    chatWindows: [{ type: ViewChildren, args: ['chatWindow',] }],\r\n    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChat, [{\n        type: Component,\n        args: [{ selector: 'ng-chat', template: \"<link *ngIf=\\\"customTheme\\\" rel=\\\"stylesheet\\\" [href]='customTheme | sanitize'>\\r\\n\\r\\n<div id=\\\"ng-chat\\\" *ngIf=\\\"!isDisabled && isBootstrapped && !unsupportedViewport\\\" [ngClass]=\\\"theme\\\">\\r\\n    <ng-chat-friends-list\\r\\n        [localization]=\\\"localization\\\"\\r\\n        [shouldDisplay]=\\\"!hideFriendsList\\\"\\r\\n        [userId]=\\\"userId\\\"\\r\\n        [isCollapsed]=\\\"isCollapsed\\\"\\r\\n        [searchEnabled]=\\\"searchEnabled\\\"\\r\\n        [participants]=\\\"participants\\\"\\r\\n        [participantsResponse]=\\\"participantsResponse\\\"\\r\\n        [participantsInteractedWith]=\\\"participantsInteractedWith\\\"\\r\\n        [windows]=\\\"windows\\\"\\r\\n        [currentActiveOption]=\\\"currentActiveOption\\\"\\r\\n        (onParticipantClicked)=\\\"onParticipantClickedFromFriendsList($event)\\\"\\r\\n        (onOptionPromptCanceled)=\\\"onOptionPromptCanceled()\\\"\\r\\n        (onOptionPromptConfirmed)=\\\"onOptionPromptConfirmed($event)\\\"\\r\\n    >\\r\\n    </ng-chat-friends-list>\\r\\n\\r\\n    <div *ngFor=\\\"let window of windows; let i = index\\\" [ngClass]=\\\"{'ng-chat-window': true, 'primary-outline-color': true, 'ng-chat-window-collapsed': window.isCollapsed}\\\" [ngStyle]=\\\"{'right': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + 'px'}\\\">\\r\\n        <ng-chat-window\\r\\n            #chatWindow\\r\\n            [fileUploadAdapter]=\\\"fileUploadAdapter\\\"\\r\\n            [localization]=\\\"localization\\\"\\r\\n            [userId]=\\\"userId\\\"\\r\\n            [window]=\\\"window\\\"\\r\\n            [showOptions]=\\\"groupAdapter\\\"\\r\\n            [emojisEnabled]=\\\"emojisEnabled\\\"\\r\\n            [linkfyEnabled]=\\\"linkfyEnabled\\\"\\r\\n            [showMessageDate]=\\\"showMessageDate\\\"\\r\\n            [messageDatePipeFormat]=\\\"messageDatePipeFormat\\\"\\r\\n            [hasPagedHistory]=\\\"hasPagedHistory\\\"\\r\\n            (onMessagesSeen)=\\\"onWindowMessagesSeen($event)\\\"\\r\\n            (onMessageSent)=\\\"onWindowMessageSent($event)\\\"\\r\\n            (onTabTriggered)=\\\"onWindowTabTriggered($event)\\\"\\r\\n            (onChatWindowClosed)=\\\"onWindowChatClosed($event)\\\"\\r\\n            (onOptionTriggered)=\\\"onWindowOptionTriggered($event)\\\"\\r\\n            (onLoadHistoryTriggered)=\\\"fetchMessageHistory($event)\\\"\\r\\n        >\\r\\n        </ng-chat-window>\\r\\n    </div>\\r\\n</div>\\r\\n\", encapsulation: ViewEncapsulation.None, styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"] }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, { isCollapsed: [{\n            type: Input\n        }], maximizeWindowOnNewMessage: [{\n            type: Input\n        }], pollFriendsList: [{\n            type: Input\n        }], pollingInterval: [{\n            type: Input\n        }], historyEnabled: [{\n            type: Input\n        }], emojisEnabled: [{\n            type: Input\n        }], linkfyEnabled: [{\n            type: Input\n        }], audioEnabled: [{\n            type: Input\n        }], searchEnabled: [{\n            type: Input\n        }], audioSource: [{\n            type: Input\n        }], persistWindowsState: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], messagePlaceholder: [{\n            type: Input\n        }], searchPlaceholder: [{\n            type: Input\n        }], browserNotificationsEnabled: [{\n            type: Input\n        }], browserNotificationIconSource: [{\n            type: Input\n        }], browserNotificationTitle: [{\n            type: Input\n        }], historyPageSize: [{\n            type: Input\n        }], hideFriendsList: [{\n            type: Input\n        }], hideFriendsListOnUnsupportedViewport: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], messageDatePipeFormat: [{\n            type: Input\n        }], showMessageDate: [{\n            type: Input\n        }], isViewportOnMobileEnabled: [{\n            type: Input\n        }], onParticipantClicked: [{\n            type: Output\n        }], onParticipantChatOpened: [{\n            type: Output\n        }], onParticipantChatClosed: [{\n            type: Output\n        }], onMessagesSeen: [{\n            type: Output\n        }], isDisabled: [{\n            type: Input\n        }], onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }], fileUploadAdapter: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], adapter: [{\n            type: Input\n        }], groupAdapter: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], fileUploadUrl: [{\n            type: Input\n        }], customTheme: [{\n            type: Input\n        }], chatWindows: [{\n            type: ViewChildren,\n            args: ['chatWindow']\n        }] }); })();\n\nlet emojiDictionary = [\r\n    { patterns: [':)', ':-)', '=)'], unicode: '😃' },\r\n    { patterns: [':D', ':-D', '=D'], unicode: '😀' },\r\n    { patterns: [':(', ':-(', '=('], unicode: '🙁' },\r\n    { patterns: [':|', ':-|', '=|'], unicode: '😐' },\r\n    { patterns: [':*', ':-*', '=*'], unicode: '😙' },\r\n    { patterns: ['T_T', 'T.T'], unicode: '😭' },\r\n    { patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'], unicode: '😮' },\r\n    { patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'], unicode: '😋' },\r\n    { patterns: ['>.<'], unicode: '😣' },\r\n    { patterns: ['@.@'], unicode: '😵' },\r\n    { patterns: ['*.*'], unicode: '😍' },\r\n    { patterns: ['<3'], unicode: '❤️' },\r\n    { patterns: ['^.^'], unicode: '😊' },\r\n    { patterns: [':+1'], unicode: '👍' },\r\n    { patterns: [':-1'], unicode: '👎' }\r\n];\r\n/*\r\n * Transforms common emoji text to UTF encoded emojis\r\n*/\r\nclass EmojifyPipe {\r\n    transform(message, pipeEnabled) {\r\n        if (pipeEnabled && message && message.length > 1) {\r\n            emojiDictionary.forEach(emoji => {\r\n                emoji.patterns.forEach(pattern => {\r\n                    message = message.replace(pattern, emoji.unicode);\r\n                });\r\n            });\r\n        }\r\n        return message;\r\n    }\r\n}\nEmojifyPipe.ɵfac = function EmojifyPipe_Factory(t) { return new (t || EmojifyPipe)(); };\nEmojifyPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"emojify\", type: EmojifyPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmojifyPipe, [{\n        type: Pipe,\n        args: [{ name: 'emojify' }]\n    }], null, null); })();\n\n/*\r\n * Transforms text containing URLs or E-mails to valid links/mailtos\r\n*/\r\nclass LinkfyPipe {\r\n    transform(message, pipeEnabled) {\r\n        if (pipeEnabled && message && message.length > 1) {\r\n            let replacedText;\r\n            let replacePatternProtocol;\r\n            let replacePatternWWW;\r\n            let replacePatternMailTo;\r\n            // URLs starting with http://, https://, or ftp://\r\n            replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\r\n            replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n            // URLs starting with \"www.\" (ignoring // before it).\r\n            replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n            replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\r\n            // Change email addresses to mailto:: links.\r\n            replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n            replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\r\n            return replacedText;\r\n        }\r\n        else\r\n            return message;\r\n    }\r\n}\nLinkfyPipe.ɵfac = function LinkfyPipe_Factory(t) { return new (t || LinkfyPipe)(); };\nLinkfyPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"linkfy\", type: LinkfyPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkfyPipe, [{\n        type: Pipe,\n        args: [{ name: 'linkfy' }]\n    }], null, null); })();\n\n/*\r\n * Sanitizes an URL resource\r\n*/\r\nclass SanitizePipe {\r\n    constructor(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    transform(url) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) { return new (t || SanitizePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer, 16)); };\nSanitizePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"sanitize\", type: SanitizePipe, pure: true });\r\nSanitizePipe.ctorParameters = () => [\r\n    { type: DomSanitizer }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SanitizePipe, [{\n        type: Pipe,\n        args: [{ name: 'sanitize' }]\n    }], function () { return [{ type: ɵngcc3.DomSanitizer }]; }, null); })();\n\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\r\nclass GroupMessageDisplayNamePipe {\r\n    transform(participant, message) {\r\n        if (participant && participant.participantType == ChatParticipantType.Group) {\r\n            let group = participant;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n}\nGroupMessageDisplayNamePipe.ɵfac = function GroupMessageDisplayNamePipe_Factory(t) { return new (t || GroupMessageDisplayNamePipe)(); };\nGroupMessageDisplayNamePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"groupMessageDisplayName\", type: GroupMessageDisplayNamePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroupMessageDisplayNamePipe, [{\n        type: Pipe,\n        args: [{ name: 'groupMessageDisplayName' }]\n    }], null, null); })();\n\nclass NgChatOptionsComponent {\r\n    constructor() {\r\n        this.activeOptionTrackerChange = new EventEmitter();\r\n    }\r\n    onOptionClicked(option) {\r\n        option.isActive = true;\r\n        if (option.action) {\r\n            option.action(option.chattingTo);\r\n        }\r\n        this.activeOptionTrackerChange.emit(option);\r\n    }\r\n}\nNgChatOptionsComponent.ɵfac = function NgChatOptionsComponent_Factory(t) { return new (t || NgChatOptionsComponent)(); };\nNgChatOptionsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatOptionsComponent, selectors: [[\"ng-chat-options\"]], inputs: { options: \"options\", activeOptionTracker: \"activeOptionTracker\" }, outputs: { activeOptionTrackerChange: \"activeOptionTrackerChange\" }, decls: 2, vars: 1, consts: [[\"class\", \"ng-chat-options\", 4, \"ngIf\"], [1, \"ng-chat-options\"], [1, \"ng-chat-options-activator\"], [1, \"primary-text\"], [1, \"ng-chat-options-content\", \"primary-background\", \"shadowed\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]], template: function NgChatOptionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatOptionsComponent_div_0_Template, 13, 1, \"div\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options && ctx.options.length > 0);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf], styles: [\".ng-chat-options-activator[_ngcontent-%COMP%]{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{position:relative;top:-5px;left:0}.ng-chat-options[_ngcontent-%COMP%]{position:relative;display:inline-block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-content[_ngcontent-%COMP%]{display:block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-activator[_ngcontent-%COMP%]{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content[_ngcontent-%COMP%]{right:0}}\"] });\r\nNgChatOptionsComponent.ctorParameters = () => [];\r\nNgChatOptionsComponent.propDecorators = {\r\n    options: [{ type: Input }],\r\n    activeOptionTracker: [{ type: Input }],\r\n    activeOptionTrackerChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatOptionsComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-options', template: \"<div *ngIf=\\\"options && options.length > 0\\\" class=\\\"ng-chat-options\\\">\\r\\n\\t\\t<button class=\\\"ng-chat-options-activator\\\">\\r\\n\\t\\t\\t<span class=\\\"primary-text\\\">...</span>\\r\\n\\t\\t</button>\\r\\n\\t<div class=\\\"ng-chat-options-content primary-background shadowed\\\">\\r\\n\\t\\t<a *ngFor=\\\"let option of options; let i = index\\\" [ngClass]=\\\"'primary-text'\\\" (click)=\\\"onOptionClicked(option)\\\">\\r\\n\\t\\t\\t{{option.displayLabel}}\\r\\n\\t\\t</a>\\r\\n\\t</div>      \\r\\n</div>\\r\\n\", styles: [\".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}\"] }]\n    }], function () { return []; }, { activeOptionTrackerChange: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], activeOptionTracker: [{\n            type: Input\n        }] }); })();\n\nclass MessageCounter {\r\n    static formatUnreadMessagesTotal(totalUnreadMessages) {\r\n        if (totalUnreadMessages > 0) {\r\n            if (totalUnreadMessages > 99)\r\n                return \"99+\";\r\n            else\r\n                return String(totalUnreadMessages);\r\n        }\r\n        // Empty fallback.\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a formatted string containing the total unread messages of a chat window.\r\n     * @param window The window instance to count the unread total messages.\r\n     * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n     */\r\n    static unreadMessagesTotal(window, currentUserId) {\r\n        let totalUnreadMessages = 0;\r\n        if (window) {\r\n            totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\r\n        }\r\n        return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n    }\r\n}\n\nfunction chatParticipantStatusDescriptor(status, localization) {\r\n    const currentStatus = ChatParticipantStatus[status].toString().toLowerCase();\r\n    return localization.statusDescription[currentStatus];\r\n}\n\nclass NgChatFriendsListComponent {\r\n    constructor() {\r\n        this.participantsInteractedWith = [];\r\n        this.onParticipantClicked = new EventEmitter();\r\n        this.onOptionPromptCanceled = new EventEmitter();\r\n        this.onOptionPromptConfirmed = new EventEmitter();\r\n        this.selectedUsersFromFriendsList = [];\r\n        this.searchInput = '';\r\n        // Exposes enums and functions for the ng-template\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n        this.cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.currentActiveOption) {\r\n            const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\r\n            const isActivatedUserInSelectedList = (this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy)).length > 0;\r\n            if (!isActivatedUserInSelectedList) {\r\n                this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant);\r\n            }\r\n        }\r\n    }\r\n    get filteredParticipants() {\r\n        if (this.searchInput.length > 0) {\r\n            // Searches in the friend list by the inputted search string\r\n            return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\r\n        }\r\n        return this.participants;\r\n    }\r\n    isUserSelectedFromFriendsList(user) {\r\n        return (this.selectedUsersFromFriendsList.filter(item => item.id == user.id)).length > 0;\r\n    }\r\n    unreadMessagesTotalByParticipant(participant) {\r\n        let openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n        if (openedWindow) {\r\n            return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\r\n        }\r\n        else {\r\n            let totalUnreadMessages = this.participantsResponse\r\n                .filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0)\r\n                .map((participantResponse) => {\r\n                return participantResponse.metadata.totalUnreadMessages;\r\n            })[0];\r\n            return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n        }\r\n    }\r\n    // Toggle friends list visibility\r\n    onChatTitleClicked() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n    }\r\n    onFriendsListCheckboxChange(selectedUser, isChecked) {\r\n        if (isChecked) {\r\n            this.selectedUsersFromFriendsList.push(selectedUser);\r\n        }\r\n        else {\r\n            this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\r\n        }\r\n    }\r\n    onUserClick(clickedUser) {\r\n        this.onParticipantClicked.emit(clickedUser);\r\n    }\r\n    onFriendsListActionCancelClicked() {\r\n        this.onOptionPromptCanceled.emit();\r\n        this.cleanUpUserSelection();\r\n    }\r\n    onFriendsListActionConfirmClicked() {\r\n        this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\r\n        this.cleanUpUserSelection();\r\n    }\r\n}\nNgChatFriendsListComponent.ɵfac = function NgChatFriendsListComponent_Factory(t) { return new (t || NgChatFriendsListComponent)(); };\nNgChatFriendsListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatFriendsListComponent, selectors: [[\"ng-chat-friends-list\"]], inputs: { participantsInteractedWith: \"participantsInteractedWith\", isCollapsed: \"isCollapsed\", participants: \"participants\", participantsResponse: \"participantsResponse\", windows: \"windows\", userId: \"userId\", localization: \"localization\", shouldDisplay: \"shouldDisplay\", searchEnabled: \"searchEnabled\", currentActiveOption: \"currentActiveOption\" }, outputs: { onParticipantClicked: \"onParticipantClicked\", onOptionPromptCanceled: \"onOptionPromptCanceled\", onOptionPromptConfirmed: \"onOptionPromptConfirmed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"id\", \"ng-chat-people\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"ng-chat-people\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-title\", \"secondary-background\", \"shadowed\", 3, \"click\"], [\"class\", \"ng-chat-people-actions\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ng-chat-search_friend\", \"class\", \"friends-search-bar\", \"type\", \"search\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-chat-people-actions\", 3, \"click\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\"], [1, \"remove-icon\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\", 3, \"click\"], [1, \"check-icon\"], [\"id\", \"ng-chat-search_friend\", \"type\", \"search\", 1, \"friends-search-bar\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"class\", \"ng-chat-users-checkbox\", 3, \"checked\", \"change\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"ng-chat-users-checkbox\", 3, \"checked\", \"change\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"]], template: function NgChatFriendsListComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatFriendsListComponent_div_0_Template, 14, 7, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldDisplay);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, SanitizePipe], styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"], encapsulation: 2 });\r\nNgChatFriendsListComponent.ctorParameters = () => [];\r\nNgChatFriendsListComponent.propDecorators = {\r\n    participants: [{ type: Input }],\r\n    participantsResponse: [{ type: Input }],\r\n    participantsInteractedWith: [{ type: Input }],\r\n    windows: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    shouldDisplay: [{ type: Input }],\r\n    isCollapsed: [{ type: Input }],\r\n    searchEnabled: [{ type: Input }],\r\n    currentActiveOption: [{ type: Input }],\r\n    onParticipantClicked: [{ type: Output }],\r\n    onOptionPromptCanceled: [{ type: Output }],\r\n    onOptionPromptConfirmed: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatFriendsListComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-friends-list', template: \"<div *ngIf=\\\"shouldDisplay\\\" id=\\\"ng-chat-people\\\" [ngClass]=\\\"{'primary-outline-color': true, 'primary-background': true, 'ng-chat-people-collapsed': isCollapsed}\\\">\\r\\n\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-title secondary-background shadowed\\\" (click)=\\\"onChatTitleClicked()\\\">\\r\\n\\t\\t<span>\\r\\n\\t\\t\\t{{localization.title}}\\r\\n\\t\\t</span>\\r\\n\\t</a>\\r\\n\\t<div *ngIf=\\\"currentActiveOption\\\" class=\\\"ng-chat-people-actions\\\" (click)=\\\"onFriendsListActionCancelClicked()\\\">\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\">\\r\\n\\t\\t\\t<i class=\\\"remove-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\" (click)=\\\"onFriendsListActionConfirmClicked()\\\">\\r\\n\\t\\t\\t<i class=\\\"check-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\t<input *ngIf=\\\"searchEnabled\\\" id=\\\"ng-chat-search_friend\\\" class=\\\"friends-search-bar\\\" type=\\\"search\\\" [placeholder]=\\\"localization.searchPlaceholder\\\" [(ngModel)]=\\\"searchInput\\\" />\\r\\n\\t<ul id=\\\"ng-chat-users\\\" *ngIf=\\\"!isCollapsed\\\" [ngClass]=\\\"{'offset-search': searchEnabled}\\\">\\r\\n\\t\\t<li *ngFor=\\\"let user of filteredParticipants\\\">\\r\\n\\t\\t\\t<input \\r\\n\\t\\t\\t\\t*ngIf=\\\"currentActiveOption && currentActiveOption.validateContext(user)\\\" \\r\\n\\t\\t\\t\\ttype=\\\"checkbox\\\" \\r\\n\\t\\t\\t\\tclass=\\\"ng-chat-users-checkbox\\\" \\r\\n\\t\\t\\t\\t(change)=\\\"onFriendsListCheckboxChange(user, $event.target.checked)\\\" \\r\\n\\t\\t\\t\\t[checked]=\\\"isUserSelectedFromFriendsList(user)\\\"/>\\r\\n\\t\\t\\t<div [ngClass]=\\\"{'ng-chat-friends-list-selectable-offset': currentActiveOption, 'ng-chat-friends-list-container': true}\\\" (click)=\\\"onUserClick(user)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!user.avatar\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"user.avatar\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\"  [src]=\\\"user.avatar | sanitize\\\"/>\\r\\n\\t\\t\\t\\t<strong title=\\\"{{user.displayName}}\\\">{{user.displayName}}</strong>\\r\\n\\t\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': user.status == ChatParticipantStatus.Online, 'busy': user.status == ChatParticipantStatus.Busy, 'away': user.status == ChatParticipantStatus.Away, 'offline': user.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(user.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotalByParticipant(user).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotalByParticipant(user)}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</div>\", encapsulation: ViewEncapsulation.None, styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"] }]\n    }], function () { return []; }, { participantsInteractedWith: [{\n            type: Input\n        }], onParticipantClicked: [{\n            type: Output\n        }], onOptionPromptCanceled: [{\n            type: Output\n        }], onOptionPromptConfirmed: [{\n            type: Output\n        }], isCollapsed: [{\n            type: Input\n        }], participants: [{\n            type: Input\n        }], participantsResponse: [{\n            type: Input\n        }], windows: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], shouldDisplay: [{\n            type: Input\n        }], searchEnabled: [{\n            type: Input\n        }], currentActiveOption: [{\n            type: Input\n        }] }); })();\n\nclass NgChatWindowComponent {\r\n    constructor() {\r\n        this.emojisEnabled = true;\r\n        this.linkfyEnabled = true;\r\n        this.showMessageDate = true;\r\n        this.messageDatePipeFormat = \"short\";\r\n        this.hasPagedHistory = true;\r\n        this.onChatWindowClosed = new EventEmitter();\r\n        this.onMessagesSeen = new EventEmitter();\r\n        this.onMessageSent = new EventEmitter();\r\n        this.onTabTriggered = new EventEmitter();\r\n        this.onOptionTriggered = new EventEmitter();\r\n        this.onLoadHistoryTriggered = new EventEmitter();\r\n        // File upload state\r\n        this.fileUploadersInUse = []; // Id bucket of uploaders in use\r\n        // Exposes enums and functions for the ng-template\r\n        this.ChatParticipantType = ChatParticipantType;\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.MessageType = MessageType;\r\n        this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n    }\r\n    defaultWindowOptions(currentWindow) {\r\n        if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User) {\r\n            return [{\r\n                    isActive: false,\r\n                    chattingTo: currentWindow,\r\n                    validateContext: (participant) => {\r\n                        return participant.participantType == ChatParticipantType.User;\r\n                    },\r\n                    displayLabel: 'Add People' // TODO: Localize this\r\n                }];\r\n        }\r\n        return [];\r\n    }\r\n    // Asserts if a user avatar is visible in a chat cluster\r\n    isAvatarVisible(window, message, index) {\r\n        if (message.fromId != this.userId) {\r\n            if (index == 0) {\r\n                return true; // First message, good to show the thumbnail\r\n            }\r\n            else {\r\n                // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\r\n                if (window.messages[index - 1].fromId != message.fromId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getChatWindowAvatar(participant, message) {\r\n        if (participant.participantType == ChatParticipantType.User) {\r\n            return participant.avatar;\r\n        }\r\n        else if (participant.participantType == ChatParticipantType.Group) {\r\n            let group = participant;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\r\n        }\r\n        return null;\r\n    }\r\n    isUploadingFile(window) {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n        return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\r\n    }\r\n    // Generates a unique file uploader id for each participant\r\n    getUniqueFileUploadInstanceId(window) {\r\n        if (window && window.participant) {\r\n            return `ng-chat-file-upload-${window.participant.id}`;\r\n        }\r\n        return 'ng-chat-file-upload';\r\n    }\r\n    unreadMessagesTotal(window) {\r\n        return MessageCounter.unreadMessagesTotal(window, this.userId);\r\n    }\r\n    // Scrolls a chat window message flow to the bottom\r\n    scrollChatWindow(window, direction) {\r\n        if (!window.isCollapsed) {\r\n            setTimeout(() => {\r\n                if (this.chatMessages) {\r\n                    let element = this.chatMessages.nativeElement;\r\n                    let position = (direction === ScrollDirection.Top) ? 0 : element.scrollHeight;\r\n                    element.scrollTop = position;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    activeOptionTrackerChange(option) {\r\n        this.onOptionTriggered.emit(option);\r\n    }\r\n    // Triggers native file upload for file selection from the user\r\n    triggerNativeFileUpload(window) {\r\n        if (window) {\r\n            if (this.nativeFileInput)\r\n                this.nativeFileInput.nativeElement.click();\r\n        }\r\n    }\r\n    // Toggles a window focus on the focus/blur of a 'newMessage' input\r\n    toggleWindowFocus(window) {\r\n        window.hasFocus = !window.hasFocus;\r\n        if (window.hasFocus) {\r\n            const unreadMessages = window.messages\r\n                .filter(message => message.dateSeen == null\r\n                && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\r\n            if (unreadMessages && unreadMessages.length > 0) {\r\n                this.onMessagesSeen.emit(unreadMessages);\r\n            }\r\n        }\r\n    }\r\n    markMessagesAsRead(messages) {\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n    fetchMessageHistory(window) {\r\n        this.onLoadHistoryTriggered.emit(window);\r\n    }\r\n    // Closes a chat window via the close 'X' button\r\n    onCloseChatWindow() {\r\n        this.onChatWindowClosed.emit({ closedWindow: this.window, closedViaEscapeKey: false });\r\n    }\r\n    /*  Monitors pressed keys on a chat window\r\n        - Dispatches a message when the ENTER key is pressed\r\n        - Tabs between windows on TAB or SHIFT + TAB\r\n        - Closes the current focused window on ESC\r\n    */\r\n    onChatInputTyped(event, window) {\r\n        switch (event.keyCode) {\r\n            case 13:\r\n                if (window.newMessage && window.newMessage.trim() != \"\") {\r\n                    let message = new Message();\r\n                    message.fromId = this.userId;\r\n                    message.toId = window.participant.id;\r\n                    message.message = window.newMessage;\r\n                    message.dateSent = new Date();\r\n                    window.messages.push(message);\r\n                    this.onMessageSent.emit(message);\r\n                    window.newMessage = \"\"; // Resets the new message input\r\n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n                }\r\n                break;\r\n            case 9:\r\n                event.preventDefault();\r\n                this.onTabTriggered.emit({ triggeringWindow: window, shiftKeyPressed: event.shiftKey });\r\n                break;\r\n            case 27:\r\n                this.onChatWindowClosed.emit({ closedWindow: window, closedViaEscapeKey: true });\r\n                break;\r\n        }\r\n    }\r\n    // Toggles a chat window visibility between maximized/minimized\r\n    onChatWindowClicked(window) {\r\n        window.isCollapsed = !window.isCollapsed;\r\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n    }\r\n    clearInUseFileUploader(fileUploadInstanceId) {\r\n        const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\r\n        if (uploaderInstanceIdIndex > -1) {\r\n            this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\r\n        }\r\n    }\r\n    // Handles file selection and uploads the selected file using the file upload adapter\r\n    onFileChosen(window) {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n        const uploadElementRef = this.nativeFileInput;\r\n        if (uploadElementRef) {\r\n            const file = uploadElementRef.nativeElement.files[0];\r\n            this.fileUploadersInUse.push(fileUploadInstanceId);\r\n            this.fileUploadAdapter.uploadFile(file, window.participant.id)\r\n                .subscribe(fileMessage => {\r\n                this.clearInUseFileUploader(fileUploadInstanceId);\r\n                fileMessage.fromId = this.userId;\r\n                // Push file message to current user window   \r\n                window.messages.push(fileMessage);\r\n                this.onMessageSent.emit(fileMessage);\r\n                this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n                // Resets the file upload element\r\n                uploadElementRef.nativeElement.value = '';\r\n            }, (error) => {\r\n                this.clearInUseFileUploader(fileUploadInstanceId);\r\n                // Resets the file upload element\r\n                uploadElementRef.nativeElement.value = '';\r\n                // TODO: Invoke a file upload adapter error here\r\n            });\r\n        }\r\n    }\r\n}\nNgChatWindowComponent.ɵfac = function NgChatWindowComponent_Factory(t) { return new (t || NgChatWindowComponent)(); };\nNgChatWindowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatWindowComponent, selectors: [[\"ng-chat-window\"]], viewQuery: function NgChatWindowComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n        ɵngcc0.ɵɵviewQuery(_c9, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nativeFileInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindowInput = _t.first);\n    } }, inputs: { emojisEnabled: \"emojisEnabled\", linkfyEnabled: \"linkfyEnabled\", showMessageDate: \"showMessageDate\", messageDatePipeFormat: \"messageDatePipeFormat\", hasPagedHistory: \"hasPagedHistory\", fileUploadAdapter: \"fileUploadAdapter\", window: \"window\", userId: \"userId\", localization: \"localization\", showOptions: \"showOptions\" }, outputs: { onChatWindowClosed: \"onChatWindowClosed\", onMessagesSeen: \"onMessagesSeen\", onMessageSent: \"onMessageSent\", onTabTriggered: \"onTabTriggered\", onOptionTriggered: \"onOptionTriggered\", onLoadHistoryTriggered: \"onLoadHistoryTriggered\" }, decls: 4, vars: 2, consts: [[4, \"ngIf\"], [1, \"ng-chat-title\", \"secondary-background\"], [1, \"ng-chat-title-visibility-toggle-area\", 3, \"click\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-close\", \"primary-text\", 3, \"click\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"], [3, \"ngClass\", \"options\", \"activeOptionTrackerChange\"], [1, \"ng-chat-messages\", \"primary-background\"], [\"chatMessages\", \"\"], [\"class\", \"ng-chat-loading-wrapper\", 4, \"ngIf\"], [\"class\", \"ng-chat-load-history\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng-chat-footer\", \"primary-outline-color\", \"primary-background\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngClass\", \"ngModelChange\", \"keydown\", \"blur\", \"focus\"], [\"chatWindowInput\", \"\"], [1, \"ng-chat-loading-wrapper\"], [1, \"loader\"], [1, \"ng-chat-load-history\"], [1, \"load-history-action\", 3, \"click\"], [3, \"ngClass\"], [3, \"ngSwitch\"], [3, \"ngClass\", 4, \"ngSwitchCase\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"ng-chat-participant-name\", 4, \"ngIf\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-participant-name\"], [3, \"innerHtml\"], [\"class\", \"message-sent-date\", 4, \"ngIf\"], [1, \"message-sent-date\"], [1, \"image-message\", 3, \"src\"], [1, \"file-message-icon-container\"], [1, \"paperclip-icon\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"download\", \"\", 1, \"file-details\", 3, \"click\"], [1, \"file-message-title\"], [\"class\", \"file-message-size\", 4, \"ngIf\"], [1, \"file-message-size\"], [\"class\", \"btn-add-file\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"nativeFileInput\", \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"btn-add-file\", 3, \"click\"], [1, \"upload-icon\"]], template: function NgChatWindowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatWindowComponent_ng_container_0_Template, 18, 10, \"ng-container\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\");\n        ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_2_Template, 40, 24, \"ng-container\", 0);\n        ɵngcc0.ɵɵtext(3, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && ctx.window.isCollapsed);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && !ctx.window.isCollapsed);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, NgChatOptionsComponent, ɵngcc2.DatePipe, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe], styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"], encapsulation: 2 });\r\nNgChatWindowComponent.ctorParameters = () => [];\r\nNgChatWindowComponent.propDecorators = {\r\n    fileUploadAdapter: [{ type: Input }],\r\n    window: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    showOptions: [{ type: Input }],\r\n    emojisEnabled: [{ type: Input }],\r\n    linkfyEnabled: [{ type: Input }],\r\n    showMessageDate: [{ type: Input }],\r\n    messageDatePipeFormat: [{ type: Input }],\r\n    hasPagedHistory: [{ type: Input }],\r\n    onChatWindowClosed: [{ type: Output }],\r\n    onMessagesSeen: [{ type: Output }],\r\n    onMessageSent: [{ type: Output }],\r\n    onTabTriggered: [{ type: Output }],\r\n    onOptionTriggered: [{ type: Output }],\r\n    onLoadHistoryTriggered: [{ type: Output }],\r\n    chatMessages: [{ type: ViewChild, args: ['chatMessages',] }],\r\n    nativeFileInput: [{ type: ViewChild, args: ['nativeFileInput',] }],\r\n    chatWindowInput: [{ type: ViewChild, args: ['chatWindowInput',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatWindowComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-window', template: \"<ng-container *ngIf=\\\"window && window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"window && !window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t\\t<ng-chat-options [ngClass]=\\\"'ng-chat-options-container'\\\" [options]=\\\"defaultWindowOptions(window)\\\" (activeOptionTrackerChange)=\\\"activeOptionTrackerChange($event)\\\"></ng-chat-options>\\r\\n\\t</div>\\r\\n\\t<div #chatMessages class=\\\"ng-chat-messages primary-background\\\">\\r\\n\\t\\t<div *ngIf=\\\"window.isLoadingHistory\\\" class=\\\"ng-chat-loading-wrapper\\\">\\r\\n\\t\\t\\t<div class=\\\"loader\\\">Loading history...</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory\\\" class=\\\"ng-chat-load-history\\\">\\r\\n\\t\\t\\t<a class=\\\"load-history-action\\\" (click)=\\\"fetchMessageHistory(window)\\\">{{localization.loadMessageHistoryPlaceholder}}</a>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let message of window.messages; let i = index\\\" [ngClass]=\\\"{'ng-chat-message': true, 'ng-chat-message-received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isAvatarVisible(window, message, i)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!getChatWindowAvatar(window.participant, message)\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"getChatWindowAvatar(window.participant, message)\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\" [src]=\\\"getChatWindowAvatar(window.participant, message) | sanitize\\\" />\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"window.participant.participantType == ChatParticipantType.Group\\\" class=\\\"ng-chat-participant-name\\\">{{window.participant | groupMessageDisplayName:message}}</span>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container [ngSwitch]=\\\"message.type\\\">\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.Text\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n          <span [innerHtml]=\\\"message.message | emojify:emojisEnabled | linkfy:linkfyEnabled\\\"></span>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n        <div *ngSwitchCase=\\\"MessageType.Image\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n\\r\\n          <img src=\\\"{{message.message}}\\\" class=\\\"image-message\\\" />\\r\\n\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.File\\\" [ngClass]=\\\"{'file-message-container': true, 'received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"file-message-icon-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"paperclip-icon\\\"></i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<a class=\\\"file-details\\\" [attr.href]=\\\"message.downloadUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" (click)=\\\"this.markMessagesAsRead([message])\\\" download>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"file-message-title\\\" [attr.title]=\\\"message.message\\\">{{message.message}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"message.fileSizeInBytes\\\"  class=\\\"file-message-size\\\">{{message.fileSizeInBytes}} Bytes</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"ng-chat-footer primary-outline-color primary-background\\\">\\r\\n\\t\\t<input #chatWindowInput\\r\\n\\t\\t\\ttype=\\\"text\\\"\\r\\n\\t\\t\\t[ngModel]=\\\"window.newMessage | emojify:emojisEnabled\\\"\\r\\n\\t\\t\\t(ngModelChange)=\\\"window.newMessage=$event\\\"\\r\\n\\t\\t\\t[placeholder]=\\\"localization.messagePlaceholder\\\"\\r\\n\\t\\t\\t[ngClass]=\\\"{'chat-window-input': true, 'has-side-action': fileUploadAdapter}\\\"\\r\\n\\t\\t\\t(keydown)=\\\"onChatInputTyped($event, window)\\\"\\r\\n\\t\\t\\t(blur)=\\\"toggleWindowFocus(window)\\\"\\r\\n\\t\\t\\t(focus)=\\\"toggleWindowFocus(window)\\\"/>\\r\\n\\r\\n\\t\\t<!-- File Upload -->\\r\\n\\t\\t<ng-container *ngIf=\\\"fileUploadAdapter\\\">\\r\\n\\t\\t\\t<a *ngIf=\\\"!isUploadingFile(window)\\\" class=\\\"btn-add-file\\\" (click)=\\\"triggerNativeFileUpload(window)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"upload-icon\\\"></i>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\\\"file\\\"\\r\\n\\t\\t\\t\\t#nativeFileInput\\r\\n\\t\\t\\t\\tstyle=\\\"display: none;\\\"\\r\\n\\t\\t\\t\\t[attr.id]=\\\"getUniqueFileUploadInstanceId(window)\\\"\\r\\n\\t\\t\\t\\t(change)=\\\"onFileChosen(window)\\\" />\\r\\n\\t\\t\\t<div *ngIf=\\\"isUploadingFile(window)\\\" class=\\\"loader\\\"></div>\\r\\n\\t\\t</ng-container>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n\", encapsulation: ViewEncapsulation.None, styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"] }]\n    }], function () { return []; }, { emojisEnabled: [{\n            type: Input\n        }], linkfyEnabled: [{\n            type: Input\n        }], showMessageDate: [{\n            type: Input\n        }], messageDatePipeFormat: [{\n            type: Input\n        }], hasPagedHistory: [{\n            type: Input\n        }], onChatWindowClosed: [{\n            type: Output\n        }], onMessagesSeen: [{\n            type: Output\n        }], onMessageSent: [{\n            type: Output\n        }], onTabTriggered: [{\n            type: Output\n        }], onOptionTriggered: [{\n            type: Output\n        }], onLoadHistoryTriggered: [{\n            type: Output\n        }], fileUploadAdapter: [{\n            type: Input\n        }], window: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], showOptions: [{\n            type: Input\n        }], chatMessages: [{\n            type: ViewChild,\n            args: ['chatMessages']\n        }], nativeFileInput: [{\n            type: ViewChild,\n            args: ['nativeFileInput']\n        }], chatWindowInput: [{\n            type: ViewChild,\n            args: ['chatWindowInput']\n        }] }); })();\n\nclass NgChatModule {\r\n}\nNgChatModule.ɵfac = function NgChatModule_Factory(t) { return new (t || NgChatModule)(); };\nNgChatModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgChatModule });\nNgChatModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, FormsModule, HttpClientModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule, HttpClientModule],\n                declarations: [\n                    NgChat,\n                    EmojifyPipe,\n                    LinkfyPipe,\n                    SanitizePipe,\n                    GroupMessageDisplayNamePipe,\n                    NgChatOptionsComponent,\n                    NgChatFriendsListComponent,\n                    NgChatWindowComponent\n                ],\n                exports: [NgChat]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgChatModule, { declarations: function () { return [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent]; }, imports: function () { return [CommonModule, FormsModule, HttpClientModule]; }, exports: function () { return [NgChat]; } }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ChatAdapter, ChatParticipantStatus, ChatParticipantType, Group, Message, MessageType, NgChatModule, PagedHistoryChatAdapter, ParticipantMetadata, ParticipantResponse, Theme, User, Window, NgChat as ɵa, EmojifyPipe as ɵb, LinkfyPipe as ɵc, SanitizePipe as ɵd, GroupMessageDisplayNamePipe as ɵe, NgChatOptionsComponent as ɵf, NgChatFriendsListComponent as ɵg, NgChatWindowComponent as ɵh };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}