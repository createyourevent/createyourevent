{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport * as dayjs from 'dayjs';\nimport { map } from 'rxjs/operators';\nimport { createRequestOption } from './core/request/request-util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GeneralService {\n  constructor(http) {\n    this.http = http;\n    this.resourceUrl = SERVER_API_URL + 'api/users';\n    this.resourceUrl_keycloak = SERVER_API_URL + 'api/keycloak';\n    this.resourceUrlAddress = SERVER_API_URL + 'api/addresses';\n    this.resourceUrl_cye = SERVER_API_URL + 'api/users_createyourevent';\n    this.resourceUrl_worksheet = SERVER_API_URL + 'api/worksheets';\n    this.resourceUrl_eventproductrating = SERVER_API_URL + 'api/event-product-ratings';\n    this.resourceUrl_image = SERVER_API_URL + 'api/images';\n    this.resourceUrl_shop_like_dislikes = SERVER_API_URL + 'api/shop-like-dislikes';\n    this.resourceUrl_shop_comments = SERVER_API_URL + 'api/shop-comments';\n    this.resourceUrl_product_comments = SERVER_API_URL + 'api/product-comments';\n    this.resourceUrl_product_like_dislikes = SERVER_API_URL + 'api/product-like-dislikes';\n    this.resourceUrl_event_comments = SERVER_API_URL + 'api/event-comments';\n    this.resourceUrl_event_like_dislikes = SERVER_API_URL + 'api/event-like-dislikes';\n    this.resourceUrl_service_like_dislikes = SERVER_API_URL + 'api/service-like-dislikes';\n    this.resourceUrl_event = SERVER_API_URL + 'api/events';\n    this.resourceUrl_shop = SERVER_API_URL + 'api/shops';\n    this.resourceUrl_eventProductOrder = SERVER_API_URL + 'api/event-product-orders';\n    this.resourceUrl_product = SERVER_API_URL + 'api/products';\n    this.resourceUrl_chat = SERVER_API_URL + 'api/chatMessages';\n    this.resourceUrl_service = SERVER_API_URL + 'api/create-your-event-services';\n    this.resourceUrl_servicemaps = SERVER_API_URL + 'api/service-maps';\n    this.resourceUrl_serviceoffers = SERVER_API_URL + 'api/service-offers';\n    this.resourceUrl_service_comments = SERVER_API_URL + 'api/service-comments';\n    this.resourceUrl_event_service_map_orders = SERVER_API_URL + 'api/event-service-map-orders';\n    this.resourceUrl_event_star_ratings = SERVER_API_URL + 'api/event-star-ratings';\n    this.resourceUrl_reservation = SERVER_API_URL + 'api/reservations';\n    this.resourceUrl_tags = SERVER_API_URL + 'api/tags';\n    this.resourceUrl_points = SERVER_API_URL + 'api/points';\n    this.resourceUrl_pointsUsers = SERVER_API_URL + 'api/user-point-associations';\n    this.resourceUrl_shop_star_rating = SERVER_API_URL + 'api/shop-star-ratings';\n    this.resourceUrl_gifts = SERVER_API_URL + 'api/gifts';\n    this.resourceUrl_properties = SERVER_API_URL + 'api/properties';\n    this.resourceUrl_product_star_rating = SERVER_API_URL + 'api/product-star-ratings';\n    this.resourceUrl_service_star_rating = SERVER_API_URL + 'api/service-star-ratings';\n    this.resourceUrl_chips_collections = SERVER_API_URL + 'api/chips-collections';\n    this.resourceUrl_chips_admins = SERVER_API_URL + 'api/chips-admins';\n    this.resourceUrl_chips = SERVER_API_URL + 'api/chips';\n    this.resourceUrl_chips_collection_chips = SERVER_API_URL + 'api/chips-collection-chips';\n    this.resourceUrl_gift_shopping_carts = SERVER_API_URL + 'api/gift-shopping-carts';\n    this.resourceUrl_partners = SERVER_API_URL + 'api/partners';\n    this.resourceUrl_delivery_types = SERVER_API_URL + 'api/delivery-types';\n    this.resourceUrl_mp3 = SERVER_API_URL + 'api/mp-3-s';\n    this.resourceUrl_music = SERVER_API_URL + 'api/music';\n    this.resourceUrl_music_del = SERVER_API_URL + 'api/music_del';\n    this.resourceUrl_bond = SERVER_API_URL + 'api/bonds';\n    this.resourceUrl_datatrans = SERVER_API_URL + 'api/datatrans';\n    this.resourceUrl_tickets = SERVER_API_URL + 'api/tickets';\n    this.resourceUrl_send_ticket = SERVER_API_URL + 'api/send-ticket';\n    this.resourceUrl_restaurants = SERVER_API_URL + 'api/restaurants';\n    this.resourceUrl_hotels = SERVER_API_URL + 'api/hotels';\n    this.resourceUrl_clubs = SERVER_API_URL + 'api/clubs';\n    this.resourceUrl_buildings = SERVER_API_URL + 'api/buildings';\n    this.resourceUrl_organizations = SERVER_API_URL + 'api/organizations';\n    this.resourceUrl_organization_star_ratings = SERVER_API_URL + 'api/organization-star-ratings';\n    this.resourceUrl_organization_comments = SERVER_API_URL + 'api/organization-comments';\n    this.resourceUrl_organization_like_dislikes = SERVER_API_URL + 'api/organization-like-dislikes';\n    this.resourceUrl_organization_reservations = SERVER_API_URL + 'api/organization-reservations';\n    this.resourceUrl_slot_list_plum = SERVER_API_URL + 'api/slot-list-plums';\n    this.resourceUrl_slot_list_clock = SERVER_API_URL + 'api/slot-list-clocks';\n    this.resourceUrl_slot_list_orange = SERVER_API_URL + 'api/slot-list-oranges';\n    this.resourceUrl_slot_list_cherry = SERVER_API_URL + 'api/slot-list-cherries';\n    this.resourceUrl_coupons = SERVER_API_URL + 'api/coupons';\n  }\n  updatePointsKeycloak(points, userId) {\n    return this.http.put(`${this.resourceUrl_keycloak}/${userId}/${points}`, {\n      observe: 'response'\n    });\n  }\n  getPointsFromUser(userId) {\n    return this.http.get(`${this.resourceUrl_keycloak}/${userId}`, {\n      observe: 'response'\n    });\n  }\n  updateBond(bond) {\n    const copy = this.convertDateFromClient_Bond(bond);\n    return this.http.put(`${this.resourceUrl_bond}/${bond.id}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer_Bond(res)));\n  }\n  convertDateFromClient_Bond(bond) {\n    return Object.assign({}, bond, {\n      creationDate: dayjs(bond.creationDate)?.isValid() ? dayjs(bond.creationDate).toJSON() : undefined,\n      redemptionDate: dayjs(bond.redemptionDate)?.isValid() ? dayjs(bond.redemptionDate).toJSON() : undefined\n    });\n  }\n  convertDateFromServer_Bond(res) {\n    if (res.body) {\n      res.body.creationDate = res.body.creationDate ? dayjs(res.body.creationDate) : undefined;\n      res.body.redemptionDate = res.body.redemptionDate ? dayjs(res.body.redemptionDate) : undefined;\n    }\n    return res;\n  }\n  updateEvent(event) {\n    const copy = this.convertDateFromClient(event);\n    return this.http.put(`${this.resourceUrl_event}/${event.id}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer(res)));\n  }\n  updateOrganizationReservation(organizationReservation) {\n    const copy = this.convertOrganizationReservationDateFromClient(organizationReservation);\n    return this.http.put(`${this.resourceUrl_organization_reservations}/${organizationReservation.id}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertOrganizationReservationDateFromServer(res)));\n  }\n  convertOrganizationReservationDateFromClient(organizationReservation) {\n    return Object.assign({}, organizationReservation, {\n      date: dayjs(organizationReservation.date)?.isValid() ? dayjs(organizationReservation.date).toJSON() : undefined,\n      dateFrom: dayjs(organizationReservation.dateFrom)?.isValid() ? dayjs(organizationReservation.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(organizationReservation.dateUntil)?.isValid() ? dayjs(organizationReservation.dateUntil).toJSON() : undefined\n    });\n  }\n  convertOrganizationReservationDateFromServer(res) {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n  findEventWithId(id) {\n    return this.http.get(`${this.resourceUrl_event}/findById/${id}`, {\n      observe: 'response'\n    });\n  }\n  convertDateFromClient(event) {\n    const copy = Object.assign({}, event, {\n      dateStart: event.dateStart && dayjs(event.dateStart).isValid() ? dayjs(event.dateStart).toJSON() : undefined,\n      dateEnd: event.dateEnd && dayjs(event.dateEnd).isValid() ? dayjs(event.dateEnd).toJSON() : undefined\n    });\n    return copy;\n  }\n  convertDateFromServer(res) {\n    if (res.body) {\n      res.body.dateStart = res.body.dateStart ? dayjs(res.body.dateStart) : undefined;\n      res.body.dateEnd = res.body.dateEnd ? dayjs(res.body.dateEnd) : undefined;\n    }\n    return res;\n  }\n  updateEventProductOrder(eventProductOrder) {\n    const copy = this.convertDateFromClientEPO(eventProductOrder);\n    return this.http.put(`${this.resourceUrl_eventProductOrder}/${eventProductOrder.id}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServerEPO(res)));\n  }\n  convertDateFromClientEPO(eventProductOrder) {\n    return Object.assign({}, eventProductOrder, {\n      date: dayjs(eventProductOrder.date).isValid() ? dayjs(eventProductOrder.date).toJSON() : undefined,\n      dateFrom: dayjs(eventProductOrder.dateFrom).isValid() ? dayjs(eventProductOrder.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(eventProductOrder.dateUntil).isValid() ? dayjs(eventProductOrder.dateUntil).toJSON() : undefined\n    });\n  }\n  convertDateFromServerEPO(res) {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n  updateEventServiceMapOrder(eventServiceMapOrder) {\n    const copy = this.convertDateFromClientESMO(eventServiceMapOrder);\n    return this.http.put(`${this.resourceUrl_event_service_map_orders}/${eventServiceMapOrder.id}`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServerESMO(res)));\n  }\n  convertDateFromClientESMO(eventServiceMapOrder) {\n    return Object.assign({}, eventServiceMapOrder, {\n      date: dayjs(eventServiceMapOrder.date).isValid() ? dayjs(eventServiceMapOrder.date).toJSON() : undefined,\n      dateFrom: dayjs(eventServiceMapOrder.dateFrom).isValid() ? dayjs(eventServiceMapOrder.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(eventServiceMapOrder.dateUntil).isValid() ? dayjs(eventServiceMapOrder.dateUntil).toJSON() : undefined\n    });\n  }\n  convertDateFromServerESMO(res) {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n  findWidthAuthorities() {\n    return this.http.get(`${this.resourceUrl_cye}/loggedIn`, {\n      observe: 'response'\n    });\n  }\n  findUsersWidthAuthoritiesQuery(login) {\n    return this.http.get(`${this.resourceUrl_cye}/${login}/findByLogin`, {\n      observe: 'response'\n    });\n  }\n  findAddressByLocationId(addressId) {\n    return this.http.get(`${this.resourceUrlAddress}/${addressId}/findByLocationId`, {\n      observe: 'response'\n    });\n  }\n  findWidthAuthoritiesWidthId(id) {\n    return this.http.get(`${this.resourceUrl}/${id}/byId`, {\n      observe: 'response'\n    });\n  }\n  findWorksheetsByEventId(id) {\n    return this.http.get(`${this.resourceUrl_worksheet}/${id}/allByEventId`, {\n      observe: 'response'\n    });\n  }\n  findEventProductRatingsByEventIdAndProductId(eventId, productId) {\n    return this.http.get(`${this.resourceUrl_eventproductrating}/${eventId}/${productId}`, {\n      observe: 'response'\n    });\n  }\n  findImagesByProductId(productId) {\n    return this.http.get(`${this.resourceUrl_image}/${productId}/imagesFromProductId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByProductIdAndUserId(productId, userId) {\n    return this.http.get(`${this.resourceUrl_image}/${productId}/${userId}/imagesFromProductIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_image}/${shopId}/imagesFromShopId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByShopIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_image}/${shopId}/${userId}/imagesFromShopIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByOrganizationId(organizationId) {\n    return this.http.get(`${this.resourceUrl_image}/${organizationId}/imagesFromOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByOrganizationIdAndUserId(organizationId, userId) {\n    return this.http.get(`${this.resourceUrl_image}/${organizationId}/${userId}/imagesFromOrganizationIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByServiceId(serviceId) {\n    return this.http.get(`${this.resourceUrl_image}/${serviceId}/imagesFromServiceId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByServiceIdAndUserId(serviceId, userId) {\n    return this.http.get(`${this.resourceUrl_image}/${serviceId}/${userId}/imagesFromServiceIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_image}/${eventId}/imagesFromEventId`, {\n      observe: 'response'\n    });\n  }\n  findImagesByEventIdAndUserId(eventId, userId) {\n    return this.http.get(`${this.resourceUrl_image}/${eventId}/${userId}/imagesFromEventIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findShopLikeDislikeByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_shop_like_dislikes}/${shopId}/getShopLikeDislikeByShopId`, {\n      observe: 'response'\n    });\n  }\n  findServiceLikeDislikeByServiceId(serviceId) {\n    return this.http.get(`${this.resourceUrl_service_like_dislikes}/${serviceId}/getServiceLikeDislikeByServiceId`, {\n      observe: 'response'\n    });\n  }\n  findShopLikeDislikeByShopIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_shop_like_dislikes}/${shopId}/${userId}/getShopLikeDislikeByShopIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationLikeDislikeByOrganizationId(shopId) {\n    return this.http.get(`${this.resourceUrl_organization_like_dislikes}/${shopId}/getOrganizationLikeDislikeByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationLikeDislikeByOrganizationIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_organization_like_dislikes}/${shopId}/${userId}/getOrganizationLikeDislikeByOrganizationIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findServiceLikeDislikeByServiceIdAndUserId(serviceId, userId) {\n    return this.http.get(`${this.resourceUrl_service_like_dislikes}/${serviceId}/${userId}/getServiceLikeDislikeByServiceIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findShopCommentByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_shop_comments}/${shopId}/getShopCommentByShopId`, {\n      observe: 'response'\n    });\n  }\n  findServiceCommentByServiceId(serviceId) {\n    return this.http.get(`${this.resourceUrl_service_comments}/${serviceId}/getServiceCommentByServiceId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationCommentByOrganizationId(organizationId) {\n    return this.http.get(`${this.resourceUrl_organization_comments}/${organizationId}/getOrganizationCommentByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findShopCommentByShopIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_shop_comments}/${shopId}/${userId}/getShopCommentByShopIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findProductCommentByProductId(productId) {\n    return this.http.get(`${this.resourceUrl_product_comments}/${productId}/getProductCommentByProductId`, {\n      observe: 'response'\n    });\n  }\n  findProductCommentByProductIdAndUserId(productId, userId) {\n    return this.http.get(`${this.resourceUrl_product_comments}/${productId}/${userId}/getProductCommentByProductIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findProductLikeDislikeByProductId(productId) {\n    return this.http.get(`${this.resourceUrl_product_like_dislikes}/${productId}/getProductLikeDislikeByProductId`, {\n      observe: 'response'\n    });\n  }\n  findProductLikeDislikeByProductIdAndUserId(productId, userId) {\n    return this.http.get(`${this.resourceUrl_product_like_dislikes}/${productId}/${userId}/getProductLikeDislikeByProductIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findEventCommentByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_event_comments}/${eventId}/getEventCommentByEventId`, {\n      observe: 'response'\n    });\n  }\n  findEventCommentByEventIdAndUserId(eventId, userId) {\n    return this.http.get(`${this.resourceUrl_event_comments}/${eventId}/${userId}/getEventCommentByEventIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findEventLikeDislikeByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_event_like_dislikes}/${eventId}/getEventLikeDislikeByEventId`, {\n      observe: 'response'\n    });\n  }\n  findEventLikeDislikeByEventIdAndUserId(eventId, userId) {\n    return this.http.get(`${this.resourceUrl_event_like_dislikes}/${eventId}/${userId}/getEventLikeDislikeByEventIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findEventsByUserId(userId) {\n    return this.http.get(`${this.resourceUrl_event}/events/user/active/${userId}`, {\n      observe: 'response'\n    });\n  }\n  findEventByIsPublicAndActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event}/public/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findEventyByPrivateOrPublicAndActiveTrueAndDateEndAfter(dateEnd) {\n    const de = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(de));\n    return this.http.get(`${this.resourceUrl_event}/dateEnd/public/active`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findEventyByPrivateOrPublicAndActiveTrueAndDateEndBefor(dateEnd) {\n    const de = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateEnd', encodeURIComponent(de));\n    return this.http.get(`${this.resourceUrl_event}/dateEnd/befor/public/active`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findShopByActiveTrue() {\n    return this.http.get(`${this.resourceUrl_shop}/active`, {\n      observe: 'response'\n    });\n  }\n  findShopByActiveTrueAndActiveOwnerTrue() {\n    return this.http.get(`${this.resourceUrl_shop}/active/activeOwner`, {\n      observe: 'response'\n    });\n  }\n  findOrganisationsByActiveTrue() {\n    return this.http.get(`${this.resourceUrl_organizations}/active`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationsByActiveTrueAndActiveOwnerTrue() {\n    return this.http.get(`${this.resourceUrl_organizations}/active/activeOwner`, {\n      observe: 'response'\n    });\n  }\n  findEventProductOrdersByProductId(productId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${productId}/getEventProductOrderByProduct`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findEventProductOrdersByEventId(eventId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${eventId}/getProductsByEvent`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllProductsByShopId(shopId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_product}/${shopId}/all`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllChatMessagesByMessageToAndDateSeenIsNull(userToId) {\n    return this.http.get(`${this.resourceUrl_chat}/${userToId}/messageToAndDateSeenIsNull`, {\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersByDateStartBetween(dateStartFrom, dateStartUntil) {\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${dateStartFrom}/${dateStartUntil}/findAllByDateStartBetween`, {\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersByProductIdAndDateStartBetween(productId, dateStartFrom, dateStartUntil) {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${productId}/findAllByProductIdAndDateStartBetween`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersByProductIdAndDateUntilBetween(productId, dateStartFrom, dateStartUntil) {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${productId}/findAllByProductIdAndDateUntilBetween`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${shopId}/getEventProductOrdersByShopId`, {\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersByProductIdAndDateFromGreaterThenAndDateUntilSmallerThen(productId, dateStartFrom, dateStartUntil) {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${productId}/findAllWithProductIdAndDateFromGreaterThenAndDateUntilSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventsByIsPublicAndActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event}/public/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter(dateEnd) {\n    const d = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateEnd/public/active`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  getEventsFromUserAndActive(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event}/user/active/${userId}`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findEventsByPrivateOrPublicAndActiveTrueAndDateStartBetween(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_event}/between/public/active`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  getServicesFromUserAndActive(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_service}/user/active/${userId}`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getServiceFromServiceMapId(serviceMapId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_service}/active/serviceMap/${serviceMapId}`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findByCreateYourEventServiceId(serviceId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_servicemaps}/byServiceId/${serviceId}`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getServicesWhereActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_service}/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getServicesWhereActiveAndActiveOwnerTrue(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_service}/active/activeOwner`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getAllServiceOffersByServiceMapId(serviceMapId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_serviceoffers}/byServiceMapId/${serviceMapId}`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getAllEventServiceMapsOrdersByServiceMapId(serviceMapId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${serviceMapId}/getAllEventServiceMapsOrdersByServiceMapId`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getAllEventServiceMapsOrdersByServiceMapIdAndEventConfirmed(serviceMapId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${serviceMapId}/getAllEventServiceMapsOrdersByServiceMapIdAndEventConfirmed`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getAllEventServiceMapsOrdersByEventId(eventId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${eventId}/getAllEventServiceMapsOrdersByEventId`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllEventServiceMapOrdersWithDateRange(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRange`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventServiceMapOrdersWithDateRangeAndServiceMapId(serviceMapId, dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRangeAndServiceMapId/${serviceMapId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventServiceMapOrdersWithDateRangeAndEventId(dateStart, dateEnd, eventId) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRangeAndEventId/${eventId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllOrganizationReservationsWithDateRange(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_organization_reservations}/findAllIOrganizationReservationsWithDateRange`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersWithDateRange(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromRange`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  /* --------------------------------------------------------------------------------------------------------------------------------------------------- */\n  findAllEventProductOrdersWithDateFromRange(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromRange`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBetween(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBetween`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersWithDateFromBetweenAndDateUntilBiggerThen(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromBetweenAndDateUntilBiggerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBiggerThenAndOnSameTimeRange(dateStart, dateEnd) {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBiggerThenAndOnSameTimeRange`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  /* --------------------------------------------------------------------------------------------------------------------------------------------------- */\n  findAllEventServiceMapOrdersByDateUntilLessGreaterThanNow(now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersByDateUntilLessGreaterThanNow`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrderByDateGreaterThen(now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrderByDateGreaterThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findShopsByUserAndActiveTrue(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_shop}/user/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findShopsByUserIdAndActiveTrue(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_shop}/${userId}/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findByUserIdAndActiveTrueAndPrivateOrPublic(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event}/public/active/user`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getEventStarRatingByEventAndUser(eventId, userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_star_ratings}/${eventId}/${userId}/getEventStarRatingByEventAndUser`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getEventStarRatingByEvent(eventId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_star_ratings}/${eventId}/getEventStarRatingByEvent`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getEventStarRatingByUser(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_star_ratings}/${userId}/getEventStarRatingByUser`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllWhereStarsBiggerAs(stars, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_star_ratings}/${stars}/findAllWhereStarsBiggerAs`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  createReservation(reservation) {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http.post(`${this.resourceUrl_reservation}/ext`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer_Reservations(res)));\n  }\n  updateReservation(reservation) {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http.put(`${this.resourceUrl_reservation}/${reservation.id}/ext`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer_Reservations(res)));\n  }\n  partialUpdateReservation(reservation) {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http.patch(`${this.resourceUrl_reservation}/${reservation.id}/ext`, copy, {\n      observe: 'response'\n    }).pipe(map(res => this.convertDateFromServer_Reservations(res)));\n  }\n  deleteReservation(id) {\n    return this.http.delete(`${this.resourceUrl_reservation}/${id}/ext`, {\n      observe: 'response'\n    });\n  }\n  convertDateFromClient_Reservations(reservation) {\n    return Object.assign({}, reservation, {\n      date: reservation.date?.isValid() ? reservation.date.toJSON() : undefined,\n      accessDate: reservation.accessDate?.isValid() ? reservation.accessDate.toJSON() : undefined\n    });\n  }\n  convertDateFromServer_Reservations(res) {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.accessDate = res.body.accessDate ? dayjs(res.body.accessDate) : undefined;\n    }\n    return res;\n  }\n  convertDateArrayFromServer_Reservations(res) {\n    if (res.body) {\n      res.body.forEach(reservation => {\n        reservation.date = reservation.date ? dayjs(reservation.date) : undefined;\n        reservation.accessDate = reservation.accessDate ? dayjs(reservation.accessDate) : undefined;\n      });\n    }\n    return res;\n  }\n  getReservationsByUser(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserId`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getReservationsByUserAndBilled(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserIdAndBilled`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  getReservationsByUserAndNotBilled(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserIdAndNotBilled`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllEventsByActiveTrueAndBilledFalseAndDateEndBefor(date) {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateBefor/active/notBilled`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findEventById(eventId) {\n    return this.http.get(`${this.resourceUrl_event}/findById/${eventId}`, {\n      observe: 'response'\n    });\n  }\n  findAllEventsByActiveTrueAndBilledFalseAndDateEndBeforAndUserId(date, userId) {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateBefor/active/notBilled/${userId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventsByActiveTrueAndBilledTrueAndDateEndBeforAndUserId(date, userId) {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateBefor/active/billed/${userId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventsByActiveTrueAndDateEndBeforAndUserId(date, userId) {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateBefor/active/${userId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventsByActiveTrueAndDateEndAfterAndUserId(date, userId) {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n    return this.http.get(`${this.resourceUrl_event}/dateAfter/active/${userId}`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrderByShopIdAndBilledFalseAndDateStartSmallerThen(shopId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndBilledFalseAndDateStartSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrderByShopIdAndBilledTrueAndDateStartSmallerThen(shopId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndBilledTrueAndDateStartSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findAllEventProductOrderByShopIdAndDateStartSmallerThen(shopId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndDateStartSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findEventServiceMapOrdersByServiceMapIdAndBilledFalseAndDateEndSmallerThen(serviceMapId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndBilledFalseAndDateEndSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findEventServiceMapOrdersByServiceMapIdAndDateEndSmallerThen(serviceMapId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndDateEndSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findEventServiceMapOrdersByServiceMapIdAndBilledTrueAndDateEndSmallerThen(serviceMapId, now) {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndBilledTrueAndDateEndSmallerThen`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  deleteProductTag(id) {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteProduct/${id}`, {\n      observe: 'response'\n    });\n  }\n  deleteEventTag(id) {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteEvent/${id}`, {\n      observe: 'response'\n    });\n  }\n  deleteShopTag(id) {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteShop/${id}`, {\n      observe: 'response'\n    });\n  }\n  deleteServiceTag(id) {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteService/${id}`, {\n      observe: 'response'\n    });\n  }\n  deleteOrganization(id) {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteOrganization/${id}`, {\n      observe: 'response'\n    });\n  }\n  findProductTags(id) {\n    return this.http.get(`${this.resourceUrl_tags}/findProduct/${id}`, {\n      observe: 'response'\n    });\n  }\n  findEventTags(id) {\n    return this.http.get(`${this.resourceUrl_tags}/findEvent/${id}`, {\n      observe: 'response'\n    });\n  }\n  findShopTags(id) {\n    return this.http.get(`${this.resourceUrl_tags}/findShop/${id}`, {\n      observe: 'response'\n    });\n  }\n  findServiceTags(id) {\n    return this.http.get(`${this.resourceUrl_tags}/findService/${id}`, {\n      observe: 'response'\n    });\n  }\n  findOrganizations(id) {\n    return this.http.get(`${this.resourceUrl_tags}/findOrganization/${id}`, {\n      observe: 'response'\n    });\n  }\n  findAllTags() {\n    return this.http.get(`${this.resourceUrl_tags}/all`, {\n      observe: 'response'\n    });\n  }\n  find50TagsRandomly() {\n    return this.http.get(`${this.resourceUrl_tags}/50`, {\n      observe: 'response'\n    });\n  }\n  find50EventTagsRandomly() {\n    const t = this.http.get(`${this.resourceUrl_tags}/50event`, {\n      observe: 'response'\n    });\n    return t;\n  }\n  findAllTagsWithActiveTrue() {\n    return this.http.get(`${this.resourceUrl_tags}/active/all`, {\n      observe: 'response'\n    });\n  }\n  findPointsByKey(key) {\n    return this.http.get(`${this.resourceUrl_points}/key/${key}`, {\n      observe: 'response'\n    });\n  }\n  updateUserLoggedIn(id, loggedIn) {\n    return this.http.put(`${this.resourceUrl}/${id}/${loggedIn}`, {\n      observe: 'response'\n    });\n  }\n  updateUserLoggedInAndPoints(userId, loggedIn, points) {\n    return this.http.put(`${this.resourceUrl}/${userId}/${loggedIn}/${points}`, {\n      observe: 'response'\n    });\n  }\n  updateAddressAndPhoneFromUser(userId, address, phone) {\n    return this.http.put(`${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}`, {\n      observe: 'response'\n    });\n  }\n  updateAGBTrue(userId) {\n    return this.http.put(`${this.resourceUrl}/updateAGBTrue/${userId}`, {\n      observe: 'response'\n    });\n  }\n  updateAddressAndPhoneAndIBanFromUser(userId, address, phone, iban) {\n    return this.http.put(`${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}/${encodeURIComponent(iban)}`, {\n      observe: 'response'\n    });\n  }\n  updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser(userId, address, phone, iban, bankname, bankaddress) {\n    //let params = new HttpParams().set('address',address).set('phone', phone);\n    return this.http.put(`${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}/${encodeURIComponent(iban)}/${encodeURIComponent(bankname)}/${encodeURIComponent(bankaddress)}`, {\n      observe: 'response'\n    });\n  }\n  getAllPointsFromUser(userId) {\n    return this.http.get(`${this.resourceUrl_pointsUsers}/${userId}/getAllPointsFromUser`, {\n      observe: 'response'\n    });\n  }\n  findUserPointAssociationByUsersIdAndDateBetween(userId, betweenStart, betweenEnd) {\n    const s = betweenStart.format();\n    const e = betweenEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_pointsUsers}/${userId}/findByUsersIdAndDateBetween`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findUserPointAssociationByUsersIdAndPointkeyAndDateBetween(userId, key, betweenStart, betweenEnd) {\n    const s = betweenStart.format();\n    const e = betweenEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get(`${this.resourceUrl_pointsUsers}/${userId}/${key}/findByUsersIdAndPointkeyAndDateBetween`, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findUserPointAssociationByUsersIdAndPointkey(userId, key) {\n    return this.http.get(`${this.resourceUrl_pointsUsers}/${userId}/${key}/findByUsersIdAndPointkey`, {\n      observe: 'response'\n    });\n  }\n  findShopStarRatingsByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_shop_star_rating}/${shopId}/findShopStarRatingsByShopId`, {\n      observe: 'response'\n    });\n  }\n  findShopStarRatingsByShopIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_shop_star_rating}/${shopId}/${userId}/findShopStarRatingsByShopIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationStarRatingsByOrganizationId(organizationId) {\n    return this.http.get(`${this.resourceUrl_organization_star_ratings}/${organizationId}/findOrganizationStarRatingsByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationStarRatingsByOrganizationIdAndUserId(organizationId, userId) {\n    return this.http.get(`${this.resourceUrl_organization_star_ratings}/${organizationId}/${userId}/findOrganizationStarRatingsByOrganizationIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findServiceStarRatingsByServiceId(serviceId) {\n    return this.http.get(`${this.resourceUrl_service_star_rating}/${serviceId}/findServiceStarRatingsByServiceId`, {\n      observe: 'response'\n    });\n  }\n  findServiceStarRatingsByServiceIdAndUserId(serviceId, userId) {\n    return this.http.get(`${this.resourceUrl_service_star_rating}/${serviceId}/${userId}/findServiceStarRatingsByServiceIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findGiftsByActiveTrue() {\n    return this.http.get(`${this.resourceUrl_gifts}/active`, {\n      observe: 'response'\n    });\n  }\n  findBondsByCode(code) {\n    return this.http.get(`${this.resourceUrl_bond}/findByCode/${code}`, {\n      observe: 'response'\n    });\n  }\n  findPropertyByKey(key) {\n    return this.http.get(`${this.resourceUrl_properties}/key/${key}`, {\n      observe: 'response'\n    });\n  }\n  findProductStarRatingsByProductId(productId) {\n    return this.http.get(`${this.resourceUrl_product_star_rating}/${productId}/findProductStarRatingsByProductId`, {\n      observe: 'response'\n    });\n  }\n  findProductStarRatingsByProductIdAndUserId(productId, userId) {\n    return this.http.get(`${this.resourceUrl_product_star_rating}/${productId}/${userId}/findProductStarRatingsByProductIdAndUserId`, {\n      observe: 'response'\n    });\n  }\n  findChipsCollectionByUserId(userId) {\n    return this.http.get(`${this.resourceUrl_chips_collections}/${userId}/findChipsCollectionByUserId`, {\n      observe: 'response'\n    });\n  }\n  findAllChipsCollectionChipsByChipsCollectionId(id) {\n    return this.http.get(`${this.resourceUrl_chips_collection_chips}/${id}/findAllChipsCollectionChipsByChipsCollectionId`, {\n      observe: 'response'\n    });\n  }\n  findOndChipsCollectionChipsByChipsCollectionIdAndChipsId(collectionId, chipsId) {\n    return this.http.get(`${this.resourceUrl_chips_collection_chips}/${collectionId}/${chipsId}/findOneChipsCollectionChipsByChipsCollectionIdAndChipsId`, {\n      observe: 'response'\n    });\n  }\n  deleteAllChipsCollectionChips() {\n    return this.http.delete(`${this.resourceUrl_chips_collection_chips}/deleteAllChipsCollectionChips`, {\n      observe: 'response'\n    });\n  }\n  findAllProductsWhereShopActiveAndProductActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_product}/shop/product/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllIGiftShoppingCartsByUserId(userId, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_gift_shopping_carts}/${userId}/findByUserId`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findAllPartnersWhereActiveTrue(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_partners}/active`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  findDeliveryTypeByProductId(id, req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_delivery_types}/${id}/findDeliveryTypeByProductId`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  deleteDeliveryTypesByProductId(id) {\n    return this.http.delete(`${this.resourceUrl_delivery_types}/${id}/deleteByProductId`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByServiceIdAndUserId(serviceId, userId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${userId}/${serviceId}/service`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByServiceId(serviceId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${serviceId}/service`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByProductIdAndUserId(productId, userId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${userId}/${productId}/product`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByProductId(productId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${productId}/product`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByEventIdAndUserId(eventId, userId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${userId}/${eventId}/event`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${eventId}/event`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByShopIdAndUserId(shopId, userId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${userId}/${shopId}/shop`, {\n      observe: 'response'\n    });\n  }\n  findMp3ByShopId(shopId) {\n    return this.http.get(`${this.resourceUrl_mp3}/${shopId}/shop`, {\n      observe: 'response'\n    });\n  }\n  deleteMP3(mp3Id) {\n    return this.http.delete(`${this.resourceUrl_music_del}/${mp3Id}/delete`, {\n      observe: 'response'\n    });\n  }\n  findShopCommentsByEager() {\n    return this.http.get(`${this.resourceUrl_shop_comments}/findAllByEager`, {\n      observe: 'response'\n    });\n  }\n  getTransactionIdFromDatatrans(amount, type, id) {\n    return this.http.get(`${this.resourceUrl_datatrans}/${amount}/${type}/${id}`, {\n      observe: 'response'\n    });\n  }\n  getStatusFromTransactionIdFromDatatrans(id) {\n    return this.http.get(`${this.resourceUrl_datatrans}/txId/${id}`, {\n      observe: 'response'\n    });\n  }\n  findTicketsByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_tickets}/${eventId}/getAllTicketsByEventId`, {\n      observe: 'response'\n    });\n  }\n  uploadPdf(data, reservationId, mail, lang) {\n    let params = new HttpParams();\n    params = params.append('mail', mail);\n    return this.http.post(`${this.resourceUrl_send_ticket}/${reservationId}/${lang}/uploadPdf`, data, {\n      params: params,\n      observe: 'response'\n    });\n  }\n  findRestaurantsByUserAndActive() {\n    return this.http.get(`${this.resourceUrl_restaurants}/byUser/active`, {\n      observe: 'response'\n    });\n  }\n  findHotelsByUserAndActive() {\n    return this.http.get(`${this.resourceUrl_hotels}/byUser/active`, {\n      observe: 'response'\n    });\n  }\n  findClubsByUserAndActive() {\n    return this.http.get(`${this.resourceUrl_clubs}/byUser/active`, {\n      observe: 'response'\n    });\n  }\n  findBuildingsByUserAndActive() {\n    return this.http.get(`${this.resourceUrl_buildings}/byUser/active`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationsByActiveAndActiveOwner() {\n    return this.http.get(`${this.resourceUrl_organizations}/active/activeOwner`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationReservationsByEventId(eventId) {\n    return this.http.get(`${this.resourceUrl_organization_reservations}/${eventId}/findOrganizationReservationsByEventId`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationReservationsByOrganizationId(eventId) {\n    return this.http.get(`${this.resourceUrl_organization_reservations}/${eventId}/findOrganizationReservationsByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findClubByOrganizationId(id) {\n    return this.http.get(`${this.resourceUrl_clubs}/${id}/clubByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findHotelByOrganizationId(id) {\n    return this.http.get(`${this.resourceUrl_hotels}/${id}/hotelByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  findRestaurantByOrganizationId(id) {\n    return this.http.get(`${this.resourceUrl_restaurants}/${id}/restaurantByOrganizationId`, {\n      observe: 'response'\n    });\n  }\n  byActiveTrueAndUserIdAndDateUntilSmallerThanNow(userId) {\n    return this.http.get(`${this.resourceUrl_organization_reservations}/${userId}/byActiveTrueAndUserIdAndDateUntilSmallerThanNow`, {\n      observe: 'response'\n    });\n  }\n  findOrganizationReservationsByOrganizationWithUserId(userId) {\n    return this.http.get(`${this.resourceUrl_organization_reservations}/${userId}/findOrganizationReservationsByOrganizationWithUserId`, {\n      observe: 'response'\n    });\n  }\n  findEventServiceMapOrdersByEventDateEndSmallerThenNow(req) {\n    const options = createRequestOption(req);\n    return this.http.get(`${this.resourceUrl_event_service_map_orders}/findEventServiceMapOrdersByEventDateEndSmallerThenNow`, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  deleteAllSlotListPlum() {\n    return this.http.delete(`${this.resourceUrl_slot_list_plum}/deleteAll`, {\n      observe: 'response'\n    });\n  }\n  deleteAllSlotListOrange() {\n    return this.http.delete(`${this.resourceUrl_slot_list_orange}/deleteAll`, {\n      observe: 'response'\n    });\n  }\n  deleteAllSlotListCherry() {\n    return this.http.delete(`${this.resourceUrl_slot_list_cherry}/deleteAll`, {\n      observe: 'response'\n    });\n  }\n  deleteAllSlotListClock() {\n    return this.http.delete(`${this.resourceUrl_slot_list_clock}/deleteAll`, {\n      observe: 'response'\n    });\n  }\n  findCouponsByActiveUser() {\n    return this.http.get(`${this.resourceUrl_coupons}/byUser`, {\n      observe: 'response'\n    });\n  }\n  findCouponsByUser(userId) {\n    return this.http.get(`${this.resourceUrl_coupons}/${userId}/byUser`, {\n      observe: 'response'\n    });\n  }\n}\nGeneralService.ɵfac = function GeneralService_Factory(t) {\n  return new (t || GeneralService)(i0.ɵɵinject(i1.HttpClient));\n};\nGeneralService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GeneralService,\n  factory: GeneralService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","SERVER_API_URL","dayjs","map","createRequestOption","GeneralService","constructor","http","updatePointsKeycloak","points","userId","put","resourceUrl_keycloak","observe","getPointsFromUser","get","updateBond","bond","copy","convertDateFromClient_Bond","resourceUrl_bond","id","pipe","res","convertDateFromServer_Bond","Object","assign","creationDate","isValid","toJSON","undefined","redemptionDate","body","updateEvent","event","convertDateFromClient","resourceUrl_event","convertDateFromServer","updateOrganizationReservation","organizationReservation","convertOrganizationReservationDateFromClient","resourceUrl_organization_reservations","convertOrganizationReservationDateFromServer","date","dateFrom","dateUntil","findEventWithId","dateStart","dateEnd","updateEventProductOrder","eventProductOrder","convertDateFromClientEPO","resourceUrl_eventProductOrder","convertDateFromServerEPO","updateEventServiceMapOrder","eventServiceMapOrder","convertDateFromClientESMO","resourceUrl_event_service_map_orders","convertDateFromServerESMO","findWidthAuthorities","resourceUrl_cye","findUsersWidthAuthoritiesQuery","login","findAddressByLocationId","addressId","resourceUrlAddress","findWidthAuthoritiesWidthId","resourceUrl","findWorksheetsByEventId","resourceUrl_worksheet","findEventProductRatingsByEventIdAndProductId","eventId","productId","resourceUrl_eventproductrating","findImagesByProductId","resourceUrl_image","findImagesByProductIdAndUserId","findImagesByShopId","shopId","findImagesByShopIdAndUserId","findImagesByOrganizationId","organizationId","findImagesByOrganizationIdAndUserId","findImagesByServiceId","serviceId","findImagesByServiceIdAndUserId","findImagesByEventId","findImagesByEventIdAndUserId","findShopLikeDislikeByShopId","resourceUrl_shop_like_dislikes","findServiceLikeDislikeByServiceId","resourceUrl_service_like_dislikes","findShopLikeDislikeByShopIdAndUserId","findOrganizationLikeDislikeByOrganizationId","resourceUrl_organization_like_dislikes","findOrganizationLikeDislikeByOrganizationIdAndUserId","findServiceLikeDislikeByServiceIdAndUserId","findShopCommentByShopId","resourceUrl_shop_comments","findServiceCommentByServiceId","resourceUrl_service_comments","findOrganizationCommentByOrganizationId","resourceUrl_organization_comments","findShopCommentByShopIdAndUserId","findProductCommentByProductId","resourceUrl_product_comments","findProductCommentByProductIdAndUserId","findProductLikeDislikeByProductId","resourceUrl_product_like_dislikes","findProductLikeDislikeByProductIdAndUserId","findEventCommentByEventId","resourceUrl_event_comments","findEventCommentByEventIdAndUserId","findEventLikeDislikeByEventId","resourceUrl_event_like_dislikes","findEventLikeDislikeByEventIdAndUserId","findEventsByUserId","findEventByIsPublicAndActive","req","options","params","findEventyByPrivateOrPublicAndActiveTrueAndDateEndAfter","de","format","append","encodeURIComponent","findEventyByPrivateOrPublicAndActiveTrueAndDateEndBefor","findShopByActiveTrue","resourceUrl_shop","findShopByActiveTrueAndActiveOwnerTrue","findOrganisationsByActiveTrue","resourceUrl_organizations","findOrganizationsByActiveTrueAndActiveOwnerTrue","findEventProductOrdersByProductId","findEventProductOrdersByEventId","findAllProductsByShopId","resourceUrl_product","findAllChatMessagesByMessageToAndDateSeenIsNull","userToId","resourceUrl_chat","findAllEventProductOrdersByDateStartBetween","dateStartFrom","dateStartUntil","findAllEventProductOrdersByProductIdAndDateStartBetween","dSF","dSU","findAllEventProductOrdersByProductIdAndDateUntilBetween","findAllEventProductOrdersByShopId","findAllEventProductOrdersByProductIdAndDateFromGreaterThenAndDateUntilSmallerThen","findAllEventsByIsPublicAndActive","findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter","d","getEventsFromUserAndActive","findEventsByPrivateOrPublicAndActiveTrueAndDateStartBetween","s","e","getServicesFromUserAndActive","resourceUrl_service","getServiceFromServiceMapId","serviceMapId","findByCreateYourEventServiceId","resourceUrl_servicemaps","getServicesWhereActive","getServicesWhereActiveAndActiveOwnerTrue","getAllServiceOffersByServiceMapId","resourceUrl_serviceoffers","getAllEventServiceMapsOrdersByServiceMapId","getAllEventServiceMapsOrdersByServiceMapIdAndEventConfirmed","getAllEventServiceMapsOrdersByEventId","findAllEventServiceMapOrdersWithDateRange","findAllEventServiceMapOrdersWithDateRangeAndServiceMapId","findAllEventServiceMapOrdersWithDateRangeAndEventId","findAllOrganizationReservationsWithDateRange","findAllEventProductOrdersWithDateRange","findAllEventProductOrdersWithDateFromRange","findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBetween","findAllEventProductOrdersWithDateFromBetweenAndDateUntilBiggerThen","findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBiggerThenAndOnSameTimeRange","findAllEventServiceMapOrdersByDateUntilLessGreaterThanNow","now","findAllEventProductOrderByDateGreaterThen","findShopsByUserAndActiveTrue","findShopsByUserIdAndActiveTrue","findByUserIdAndActiveTrueAndPrivateOrPublic","getEventStarRatingByEventAndUser","resourceUrl_event_star_ratings","getEventStarRatingByEvent","getEventStarRatingByUser","findAllWhereStarsBiggerAs","stars","createReservation","reservation","convertDateFromClient_Reservations","post","resourceUrl_reservation","convertDateFromServer_Reservations","updateReservation","partialUpdateReservation","patch","deleteReservation","delete","accessDate","convertDateArrayFromServer_Reservations","forEach","getReservationsByUser","getReservationsByUserAndBilled","getReservationsByUserAndNotBilled","findAllEventsByActiveTrueAndBilledFalseAndDateEndBefor","findEventById","findAllEventsByActiveTrueAndBilledFalseAndDateEndBeforAndUserId","findAllEventsByActiveTrueAndBilledTrueAndDateEndBeforAndUserId","findAllEventsByActiveTrueAndDateEndBeforAndUserId","findAllEventsByActiveTrueAndDateEndAfterAndUserId","findAllEventProductOrderByShopIdAndBilledFalseAndDateStartSmallerThen","findAllEventProductOrderByShopIdAndBilledTrueAndDateStartSmallerThen","findAllEventProductOrderByShopIdAndDateStartSmallerThen","findEventServiceMapOrdersByServiceMapIdAndBilledFalseAndDateEndSmallerThen","findEventServiceMapOrdersByServiceMapIdAndDateEndSmallerThen","findEventServiceMapOrdersByServiceMapIdAndBilledTrueAndDateEndSmallerThen","deleteProductTag","resourceUrl_tags","deleteEventTag","deleteShopTag","deleteServiceTag","deleteOrganization","findProductTags","findEventTags","findShopTags","findServiceTags","findOrganizations","findAllTags","find50TagsRandomly","find50EventTagsRandomly","t","findAllTagsWithActiveTrue","findPointsByKey","key","resourceUrl_points","updateUserLoggedIn","loggedIn","updateUserLoggedInAndPoints","updateAddressAndPhoneFromUser","address","phone","updateAGBTrue","updateAddressAndPhoneAndIBanFromUser","iban","updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser","bankname","bankaddress","getAllPointsFromUser","resourceUrl_pointsUsers","findUserPointAssociationByUsersIdAndDateBetween","betweenStart","betweenEnd","findUserPointAssociationByUsersIdAndPointkeyAndDateBetween","findUserPointAssociationByUsersIdAndPointkey","findShopStarRatingsByShopId","resourceUrl_shop_star_rating","findShopStarRatingsByShopIdAndUserId","findOrganizationStarRatingsByOrganizationId","resourceUrl_organization_star_ratings","findOrganizationStarRatingsByOrganizationIdAndUserId","findServiceStarRatingsByServiceId","resourceUrl_service_star_rating","findServiceStarRatingsByServiceIdAndUserId","findGiftsByActiveTrue","resourceUrl_gifts","findBondsByCode","code","findPropertyByKey","resourceUrl_properties","findProductStarRatingsByProductId","resourceUrl_product_star_rating","findProductStarRatingsByProductIdAndUserId","findChipsCollectionByUserId","resourceUrl_chips_collections","findAllChipsCollectionChipsByChipsCollectionId","resourceUrl_chips_collection_chips","findOndChipsCollectionChipsByChipsCollectionIdAndChipsId","collectionId","chipsId","deleteAllChipsCollectionChips","findAllProductsWhereShopActiveAndProductActive","findAllIGiftShoppingCartsByUserId","resourceUrl_gift_shopping_carts","findAllPartnersWhereActiveTrue","resourceUrl_partners","findDeliveryTypeByProductId","resourceUrl_delivery_types","deleteDeliveryTypesByProductId","findMp3ByServiceIdAndUserId","resourceUrl_mp3","findMp3ByServiceId","findMp3ByProductIdAndUserId","findMp3ByProductId","findMp3ByEventIdAndUserId","findMp3ByEventId","findMp3ByShopIdAndUserId","findMp3ByShopId","deleteMP3","mp3Id","resourceUrl_music_del","findShopCommentsByEager","getTransactionIdFromDatatrans","amount","type","resourceUrl_datatrans","getStatusFromTransactionIdFromDatatrans","findTicketsByEventId","resourceUrl_tickets","uploadPdf","data","reservationId","mail","lang","resourceUrl_send_ticket","findRestaurantsByUserAndActive","resourceUrl_restaurants","findHotelsByUserAndActive","resourceUrl_hotels","findClubsByUserAndActive","resourceUrl_clubs","findBuildingsByUserAndActive","resourceUrl_buildings","findOrganizationsByActiveAndActiveOwner","findOrganizationReservationsByEventId","findOrganizationReservationsByOrganizationId","findClubByOrganizationId","findHotelByOrganizationId","findRestaurantByOrganizationId","byActiveTrueAndUserIdAndDateUntilSmallerThanNow","findOrganizationReservationsByOrganizationWithUserId","findEventServiceMapOrdersByEventDateEndSmallerThenNow","deleteAllSlotListPlum","resourceUrl_slot_list_plum","deleteAllSlotListOrange","resourceUrl_slot_list_orange","deleteAllSlotListCherry","resourceUrl_slot_list_cherry","deleteAllSlotListClock","resourceUrl_slot_list_clock","findCouponsByActiveUser","resourceUrl_coupons","findCouponsByUser","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/general.service.ts"],"sourcesContent":["import { IOrganization } from './entities/organization/organization.model';\nimport { ITicket } from './entities/ticket/ticket.model';\nimport { IBond } from './entities/bond/bond.model';\nimport { IMp3 } from './entities/mp-3/mp-3.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport * as dayjs from 'dayjs';\nimport { map } from 'rxjs/operators';\nimport { createRequestOption } from './core/request/request-util';\nimport { IChipsCollectionChips } from './entities/chips-collection-chips/chips-collection-chips.model';\nimport { IChipsCollection } from './entities/chips-collection/chips-collection.model';\nimport { ICreateYourEventService } from './entities/create-your-event-service/create-your-event-service.model';\nimport { IDeliveryType } from './entities/delivery-type/delivery-type.model';\nimport { IEventComment } from './entities/event-comment/event-comment.model';\nimport { IEventLikeDislike } from './entities/event-like-dislike/event-like-dislike.model';\nimport { IEventProductOrder } from './entities/event-product-order/event-product-order.model';\nimport { IEventProductRating } from './entities/event-product-rating/event-product-rating.model';\nimport { IEventServiceMapOrder } from './entities/event-service-map-order/event-service-map-order.model';\nimport { IEventStarRating } from './entities/event-star-rating/event-star-rating.model';\nimport { IEvent } from './entities/event/event.model';\nimport { IGiftShoppingCart } from './entities/gift-shopping-cart/gift-shopping-cart.model';\nimport { IGift } from './entities/gift/gift.model';\nimport { IImage } from './entities/image/image.model';\nimport { IPartner } from './entities/partner/partner.model';\nimport { IPoint } from './entities/point/point.model';\nimport { IProductComment } from './entities/product-comment/product-comment.model';\nimport { IProductLikeDislike } from './entities/product-like-dislike/product-like-dislike.model';\nimport { IProductStarRating } from './entities/product-star-rating/product-star-rating.model';\nimport { IProduct } from './entities/product/product.model';\nimport { IProperty } from './entities/property/property.model';\nimport { IReservation } from './entities/reservation/reservation.model';\nimport { IServiceComment } from './entities/service-comment/service-comment.model';\nimport { IServiceLikeDislike } from './entities/service-like-dislike/service-like-dislike.model';\nimport { IServiceMap } from './entities/service-map/service-map.model';\nimport { IServiceOffer } from './entities/service-offer/service-offer.model';\nimport { IServiceStarRating } from './entities/service-star-rating/service-star-rating.model';\nimport { IShopComment } from './entities/shop-comment/shop-comment.model';\nimport { IShopLikeDislike } from './entities/shop-like-dislike/shop-like-dislike.model';\nimport { IShopStarRating } from './entities/shop-star-rating/shop-star-rating.model';\nimport { IShop } from './entities/shop/shop.model';\nimport { ITags } from './entities/tags/tags.model';\nimport { IUserPointAssociation } from './entities/user-point-association/user-point-association.model';\nimport { IUser } from './entities/user/user.model';\nimport { IWorksheet } from './entities/worksheet/worksheet.model';\nimport { IChatMessage } from './chat/chat-message.model';\nimport { IAddress } from './entities/address/address.model';\nimport { IRestaurant } from './entities/restaurant/restaurant.model';\nimport { IHotel } from './entities/hotel/hotel.model';\nimport { IClub } from './entities/club/club.model';\nimport { IOrganizationLikeDislike } from './entities/organization-like-dislike/organization-like-dislike.model';\nimport { IOrganizationStarRating } from './entities/organization-star-rating/organization-star-rating.model';\nimport { IOrganizationComment } from './entities/organization-comment/organization-comment.model';\nimport { IOrganizationReservation } from './entities/organization-reservation/organization-reservation.model';\nimport { ICoupon } from './entities/coupon/coupon.model';\nimport { IBuilding } from './entities/building/building.model';\n\ntype EntityResponseType = HttpResponse<IUser>;\ntype EntityResponseType_Event = HttpResponse<IEvent>;\ntype EntityResponseType_Bond = HttpResponse<IBond>;\ntype EntityResponseType_EPO = HttpResponse<IEventProductOrder>;\ntype EntityResponseType_ESMO = HttpResponse<IEventServiceMapOrder>;\n\n@Injectable({ providedIn: 'root' })\nexport class GeneralService {\n  public resourceUrl = SERVER_API_URL + 'api/users';\n  public resourceUrl_keycloak = SERVER_API_URL + 'api/keycloak';\n  public resourceUrlAddress = SERVER_API_URL + 'api/addresses';\n  public resourceUrl_cye = SERVER_API_URL + 'api/users_createyourevent';\n  public resourceUrl_worksheet = SERVER_API_URL + 'api/worksheets';\n  public resourceUrl_eventproductrating = SERVER_API_URL + 'api/event-product-ratings';\n  public resourceUrl_image = SERVER_API_URL + 'api/images';\n  public resourceUrl_shop_like_dislikes = SERVER_API_URL + 'api/shop-like-dislikes';\n  public resourceUrl_shop_comments = SERVER_API_URL + 'api/shop-comments';\n  public resourceUrl_product_comments = SERVER_API_URL + 'api/product-comments';\n  public resourceUrl_product_like_dislikes = SERVER_API_URL + 'api/product-like-dislikes';\n  public resourceUrl_event_comments = SERVER_API_URL + 'api/event-comments';\n  public resourceUrl_event_like_dislikes = SERVER_API_URL + 'api/event-like-dislikes';\n  public resourceUrl_service_like_dislikes = SERVER_API_URL + 'api/service-like-dislikes';\n  public resourceUrl_event = SERVER_API_URL + 'api/events';\n  public resourceUrl_shop = SERVER_API_URL + 'api/shops';\n  public resourceUrl_eventProductOrder = SERVER_API_URL + 'api/event-product-orders';\n  public resourceUrl_product = SERVER_API_URL + 'api/products';\n  public resourceUrl_chat = SERVER_API_URL + 'api/chatMessages';\n  public resourceUrl_service = SERVER_API_URL + 'api/create-your-event-services';\n  public resourceUrl_servicemaps = SERVER_API_URL + 'api/service-maps';\n  public resourceUrl_serviceoffers = SERVER_API_URL + 'api/service-offers';\n  public resourceUrl_service_comments = SERVER_API_URL + 'api/service-comments';\n  public resourceUrl_event_service_map_orders = SERVER_API_URL + 'api/event-service-map-orders';\n  public resourceUrl_event_star_ratings = SERVER_API_URL + 'api/event-star-ratings';\n  public resourceUrl_reservation = SERVER_API_URL + 'api/reservations';\n  public resourceUrl_tags = SERVER_API_URL + 'api/tags';\n  public resourceUrl_points = SERVER_API_URL + 'api/points';\n  public resourceUrl_pointsUsers = SERVER_API_URL + 'api/user-point-associations';\n  public resourceUrl_shop_star_rating = SERVER_API_URL + 'api/shop-star-ratings';\n  public resourceUrl_gifts = SERVER_API_URL + 'api/gifts';\n  public resourceUrl_properties = SERVER_API_URL + 'api/properties';\n  public resourceUrl_product_star_rating = SERVER_API_URL + 'api/product-star-ratings';\n  public resourceUrl_service_star_rating = SERVER_API_URL + 'api/service-star-ratings';\n  public resourceUrl_chips_collections = SERVER_API_URL + 'api/chips-collections';\n  public resourceUrl_chips_admins = SERVER_API_URL + 'api/chips-admins';\n  public resourceUrl_chips = SERVER_API_URL + 'api/chips';\n  public resourceUrl_chips_collection_chips = SERVER_API_URL + 'api/chips-collection-chips';\n  public resourceUrl_gift_shopping_carts = SERVER_API_URL + 'api/gift-shopping-carts';\n  public resourceUrl_partners = SERVER_API_URL + 'api/partners';\n  public resourceUrl_delivery_types = SERVER_API_URL + 'api/delivery-types';\n  public resourceUrl_mp3 = SERVER_API_URL + 'api/mp-3-s';\n  public resourceUrl_music = SERVER_API_URL + 'api/music';\n  public resourceUrl_music_del = SERVER_API_URL + 'api/music_del';\n  public resourceUrl_bond = SERVER_API_URL + 'api/bonds';\n  public resourceUrl_datatrans = SERVER_API_URL + 'api/datatrans';\n  public resourceUrl_tickets = SERVER_API_URL + 'api/tickets';\n  public resourceUrl_send_ticket = SERVER_API_URL + 'api/send-ticket';\n  public resourceUrl_restaurants = SERVER_API_URL + 'api/restaurants';\n  public resourceUrl_hotels = SERVER_API_URL + 'api/hotels';\n  public resourceUrl_clubs = SERVER_API_URL + 'api/clubs';\n  public resourceUrl_buildings = SERVER_API_URL + 'api/buildings';\n  public resourceUrl_organizations = SERVER_API_URL + 'api/organizations';\n  public resourceUrl_organization_star_ratings = SERVER_API_URL + 'api/organization-star-ratings';\n  public resourceUrl_organization_comments = SERVER_API_URL + 'api/organization-comments';\n  public resourceUrl_organization_like_dislikes = SERVER_API_URL + 'api/organization-like-dislikes';\n  public resourceUrl_organization_reservations = SERVER_API_URL + 'api/organization-reservations';\n  public resourceUrl_slot_list_plum = SERVER_API_URL + 'api/slot-list-plums';\n  public resourceUrl_slot_list_clock = SERVER_API_URL + 'api/slot-list-clocks';\n  public resourceUrl_slot_list_orange = SERVER_API_URL + 'api/slot-list-oranges';\n  public resourceUrl_slot_list_cherry = SERVER_API_URL + 'api/slot-list-cherries';\n  public resourceUrl_coupons = SERVER_API_URL + 'api/coupons';\n\n  constructor(protected http: HttpClient) {}\n\n  updatePointsKeycloak(points: number, userId: string): Observable<void> {\n    return this.http.put<void>(`${this.resourceUrl_keycloak}/${userId}/${points}`, { observe: 'response' });\n  }\n\n  getPointsFromUser(userId: string): Observable<HttpResponse<number>> {\n    return this.http.get<number>(`${this.resourceUrl_keycloak}/${userId}`, { observe: 'response' });\n  }\n\n  updateBond(bond: IBond): Observable<EntityResponseType_Bond> {\n    const copy = this.convertDateFromClient_Bond(bond);\n    return this.http\n      .put<IBond>(`${this.resourceUrl_bond}/${bond.id}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType_Bond) => this.convertDateFromServer_Bond(res)));\n  }\n\n  protected convertDateFromClient_Bond(bond: IBond): IBond {\n    return Object.assign({}, bond, {\n      creationDate: dayjs(bond.creationDate)?.isValid() ? dayjs(bond.creationDate).toJSON() : undefined,\n      redemptionDate: dayjs(bond.redemptionDate)?.isValid() ? dayjs(bond.redemptionDate).toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServer_Bond(res: EntityResponseType_Bond): EntityResponseType_Bond {\n    if (res.body) {\n      res.body.creationDate = res.body.creationDate ? dayjs(res.body.creationDate) : undefined;\n      res.body.redemptionDate = res.body.redemptionDate ? dayjs(res.body.redemptionDate) : undefined;\n    }\n    return res;\n  }\n\n  updateEvent(event: IEvent): Observable<EntityResponseType_Event> {\n    const copy = this.convertDateFromClient(event);\n    return this.http\n      .put<IEvent>(`${this.resourceUrl_event}/${event.id}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType_Event) => this.convertDateFromServer(res)));\n  }\n\n  updateOrganizationReservation(organizationReservation: IOrganizationReservation): Observable<HttpResponse<IOrganizationReservation>> {\n    const copy = this.convertOrganizationReservationDateFromClient(organizationReservation);\n    return this.http\n      .put<IOrganizationReservation>(`${this.resourceUrl_organization_reservations}/${organizationReservation.id}`, copy, {\n        observe: 'response',\n      })\n      .pipe(map((res: HttpResponse<IOrganizationReservation>) => this.convertOrganizationReservationDateFromServer(res)));\n  }\n\n  protected convertOrganizationReservationDateFromClient(organizationReservation: IOrganizationReservation): IOrganizationReservation {\n    return Object.assign({}, organizationReservation, {\n      date: dayjs(organizationReservation.date)?.isValid() ? dayjs(organizationReservation.date).toJSON() : undefined,\n      dateFrom: dayjs(organizationReservation.dateFrom)?.isValid() ? dayjs(organizationReservation.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(organizationReservation.dateUntil)?.isValid() ? dayjs(organizationReservation.dateUntil).toJSON() : undefined,\n    });\n  }\n\n  protected convertOrganizationReservationDateFromServer(\n    res: HttpResponse<IOrganizationReservation>\n  ): HttpResponse<IOrganizationReservation> {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n\n  findEventWithId(id: number): Observable<HttpResponse<IEvent>> {\n    return this.http.get<IEvent>(`${this.resourceUrl_event}/findById/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(event: IEvent): IEvent {\n    const copy: IEvent = Object.assign({}, event, {\n      dateStart: event.dateStart && dayjs(event.dateStart).isValid() ? dayjs(event.dateStart).toJSON() : undefined,\n      dateEnd: event.dateEnd && dayjs(event.dateEnd).isValid() ? dayjs(event.dateEnd).toJSON() : undefined,\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType_Event): EntityResponseType_Event {\n    if (res.body) {\n      res.body.dateStart = res.body.dateStart ? dayjs(res.body.dateStart) : undefined;\n      res.body.dateEnd = res.body.dateEnd ? dayjs(res.body.dateEnd) : undefined;\n    }\n    return res;\n  }\n\n  updateEventProductOrder(eventProductOrder: IEventProductOrder): Observable<EntityResponseType_EPO> {\n    const copy = this.convertDateFromClientEPO(eventProductOrder);\n    return this.http\n      .put<IEventProductOrder>(`${this.resourceUrl_eventProductOrder}/${eventProductOrder.id}`, copy, {\n        observe: 'response',\n      })\n      .pipe(map((res: EntityResponseType_EPO) => this.convertDateFromServerEPO(res)));\n  }\n\n  protected convertDateFromClientEPO(eventProductOrder: IEventProductOrder): IEventProductOrder {\n    return Object.assign({}, eventProductOrder, {\n      date: dayjs(eventProductOrder.date).isValid() ? dayjs(eventProductOrder.date).toJSON() : undefined,\n      dateFrom: dayjs(eventProductOrder.dateFrom).isValid() ? dayjs(eventProductOrder.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(eventProductOrder.dateUntil).isValid() ? dayjs(eventProductOrder.dateUntil).toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServerEPO(res: EntityResponseType_EPO): EntityResponseType_EPO {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n\n  updateEventServiceMapOrder(eventServiceMapOrder: IEventServiceMapOrder): Observable<EntityResponseType_ESMO> {\n    const copy = this.convertDateFromClientESMO(eventServiceMapOrder);\n    return this.http\n      .put<IEventServiceMapOrder>(`${this.resourceUrl_event_service_map_orders}/${eventServiceMapOrder.id}`, copy, {\n        observe: 'response',\n      })\n      .pipe(map((res: EntityResponseType_ESMO) => this.convertDateFromServerESMO(res)));\n  }\n\n  protected convertDateFromClientESMO(eventServiceMapOrder: IEventServiceMapOrder): IEventServiceMapOrder {\n    return Object.assign({}, eventServiceMapOrder, {\n      date: dayjs(eventServiceMapOrder.date).isValid() ? dayjs(eventServiceMapOrder.date).toJSON() : undefined,\n      dateFrom: dayjs(eventServiceMapOrder.dateFrom).isValid() ? dayjs(eventServiceMapOrder.dateFrom).toJSON() : undefined,\n      dateUntil: dayjs(eventServiceMapOrder.dateUntil).isValid() ? dayjs(eventServiceMapOrder.dateUntil).toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServerESMO(res: EntityResponseType_ESMO): EntityResponseType_ESMO {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.dateFrom = res.body.dateFrom ? dayjs(res.body.dateFrom) : undefined;\n      res.body.dateUntil = res.body.dateUntil ? dayjs(res.body.dateUntil) : undefined;\n    }\n    return res;\n  }\n\n  findWidthAuthorities(): Observable<HttpResponse<IUser>> {\n    return this.http.get<IUser>(`${this.resourceUrl_cye}/loggedIn`, { observe: 'response' });\n  }\n\n  findUsersWidthAuthoritiesQuery(login: string): Observable<HttpResponse<IUser>> {\n    return this.http.get<IUser>(`${this.resourceUrl_cye}/${login}/findByLogin`, { observe: 'response' });\n  }\n\n  findAddressByLocationId(addressId: number): Observable<HttpResponse<IAddress>> {\n    return this.http.get<IAddress>(`${this.resourceUrlAddress}/${addressId}/findByLocationId`, { observe: 'response' });\n  }\n\n  findWidthAuthoritiesWidthId(id: string): Observable<EntityResponseType> {\n    return this.http.get<IUser>(`${this.resourceUrl}/${id}/byId`, { observe: 'response' });\n  }\n\n  findWorksheetsByEventId(id: number): Observable<HttpResponse<IWorksheet[]>> {\n    return this.http.get<IWorksheet[]>(`${this.resourceUrl_worksheet}/${id}/allByEventId`, { observe: 'response' });\n  }\n\n  findEventProductRatingsByEventIdAndProductId(eventId: number, productId: number): Observable<HttpResponse<IEventProductRating[]>> {\n    return this.http.get<IEventProductRating[]>(`${this.resourceUrl_eventproductrating}/${eventId}/${productId}`, { observe: 'response' });\n  }\n\n  findImagesByProductId(productId: number): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${productId}/imagesFromProductId`, { observe: 'response' });\n  }\n\n  findImagesByProductIdAndUserId(productId: number, userId: string): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${productId}/${userId}/imagesFromProductIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findImagesByShopId(shopId: number): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${shopId}/imagesFromShopId`, { observe: 'response' });\n  }\n\n  findImagesByShopIdAndUserId(shopId: number, userId: string): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${shopId}/${userId}/imagesFromShopIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findImagesByOrganizationId(organizationId: number): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${organizationId}/imagesFromOrganizationId`, { observe: 'response' });\n  }\n\n  findImagesByOrganizationIdAndUserId(organizationId: number, userId: string): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${organizationId}/${userId}/imagesFromOrganizationIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findImagesByServiceId(serviceId: number): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${serviceId}/imagesFromServiceId`, { observe: 'response' });\n  }\n\n  findImagesByServiceIdAndUserId(serviceId: number, userId: string): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${serviceId}/${userId}/imagesFromServiceIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findImagesByEventId(eventId: number): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${eventId}/imagesFromEventId`, { observe: 'response' });\n  }\n\n  findImagesByEventIdAndUserId(eventId: number, userId: string): Observable<HttpResponse<IImage[]>> {\n    return this.http.get<IImage[]>(`${this.resourceUrl_image}/${eventId}/${userId}/imagesFromEventIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findShopLikeDislikeByShopId(shopId: number): Observable<HttpResponse<IShopLikeDislike[]>> {\n    return this.http.get<IShopLikeDislike[]>(`${this.resourceUrl_shop_like_dislikes}/${shopId}/getShopLikeDislikeByShopId`, {\n      observe: 'response',\n    });\n  }\n\n  findServiceLikeDislikeByServiceId(serviceId: number): Observable<HttpResponse<IServiceLikeDislike[]>> {\n    return this.http.get<IServiceLikeDislike[]>(`${this.resourceUrl_service_like_dislikes}/${serviceId}/getServiceLikeDislikeByServiceId`, {\n      observe: 'response',\n    });\n  }\n\n  findShopLikeDislikeByShopIdAndUserId(shopId: number, userId: string): Observable<HttpResponse<IShopLikeDislike[]>> {\n    return this.http.get<IShopLikeDislike[]>(\n      `${this.resourceUrl_shop_like_dislikes}/${shopId}/${userId}/getShopLikeDislikeByShopIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findOrganizationLikeDislikeByOrganizationId(shopId: number): Observable<HttpResponse<IOrganizationLikeDislike[]>> {\n    return this.http.get<IOrganizationLikeDislike[]>(\n      `${this.resourceUrl_organization_like_dislikes}/${shopId}/getOrganizationLikeDislikeByOrganizationId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findOrganizationLikeDislikeByOrganizationIdAndUserId(\n    shopId: number,\n    userId: string\n  ): Observable<HttpResponse<IOrganizationLikeDislike[]>> {\n    return this.http.get<IOrganizationLikeDislike[]>(\n      `${this.resourceUrl_organization_like_dislikes}/${shopId}/${userId}/getOrganizationLikeDislikeByOrganizationIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findServiceLikeDislikeByServiceIdAndUserId(serviceId: number, userId: string): Observable<HttpResponse<IServiceLikeDislike[]>> {\n    return this.http.get<IServiceLikeDislike[]>(\n      `${this.resourceUrl_service_like_dislikes}/${serviceId}/${userId}/getServiceLikeDislikeByServiceIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findShopCommentByShopId(shopId: number): Observable<HttpResponse<IShopComment[]>> {\n    return this.http.get<IShopComment[]>(`${this.resourceUrl_shop_comments}/${shopId}/getShopCommentByShopId`, { observe: 'response' });\n  }\n\n  findServiceCommentByServiceId(serviceId: number): Observable<HttpResponse<IServiceComment[]>> {\n    return this.http.get<IServiceComment[]>(`${this.resourceUrl_service_comments}/${serviceId}/getServiceCommentByServiceId`, {\n      observe: 'response',\n    });\n  }\n\n  findOrganizationCommentByOrganizationId(organizationId: number): Observable<HttpResponse<IOrganizationComment[]>> {\n    return this.http.get<IOrganizationComment[]>(\n      `${this.resourceUrl_organization_comments}/${organizationId}/getOrganizationCommentByOrganizationId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findShopCommentByShopIdAndUserId(shopId: number, userId: string): Observable<HttpResponse<IShopComment[]>> {\n    return this.http.get<IShopComment[]>(`${this.resourceUrl_shop_comments}/${shopId}/${userId}/getShopCommentByShopIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findProductCommentByProductId(productId: number): Observable<HttpResponse<IProductComment[]>> {\n    return this.http.get<IProductComment[]>(`${this.resourceUrl_product_comments}/${productId}/getProductCommentByProductId`, {\n      observe: 'response',\n    });\n  }\n\n  findProductCommentByProductIdAndUserId(productId: number, userId: string): Observable<HttpResponse<IProductComment[]>> {\n    return this.http.get<IProductComment[]>(\n      `${this.resourceUrl_product_comments}/${productId}/${userId}/getProductCommentByProductIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findProductLikeDislikeByProductId(productId: number): Observable<HttpResponse<IProductLikeDislike[]>> {\n    return this.http.get<IProductLikeDislike[]>(`${this.resourceUrl_product_like_dislikes}/${productId}/getProductLikeDislikeByProductId`, {\n      observe: 'response',\n    });\n  }\n\n  findProductLikeDislikeByProductIdAndUserId(productId: number, userId: string): Observable<HttpResponse<IProductLikeDislike[]>> {\n    return this.http.get<IProductLikeDislike[]>(\n      `${this.resourceUrl_product_like_dislikes}/${productId}/${userId}/getProductLikeDislikeByProductIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findEventCommentByEventId(eventId: number): Observable<HttpResponse<IEventComment[]>> {\n    return this.http.get<IEventComment[]>(`${this.resourceUrl_event_comments}/${eventId}/getEventCommentByEventId`, {\n      observe: 'response',\n    });\n  }\n\n  findEventCommentByEventIdAndUserId(eventId: number, userId: string): Observable<HttpResponse<IEventComment[]>> {\n    return this.http.get<IEventComment[]>(`${this.resourceUrl_event_comments}/${eventId}/${userId}/getEventCommentByEventIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findEventLikeDislikeByEventId(eventId: number): Observable<HttpResponse<IEventLikeDislike[]>> {\n    return this.http.get<IEventLikeDislike[]>(`${this.resourceUrl_event_like_dislikes}/${eventId}/getEventLikeDislikeByEventId`, {\n      observe: 'response',\n    });\n  }\n\n  findEventLikeDislikeByEventIdAndUserId(eventId: number, userId: string): Observable<HttpResponse<IEventLikeDislike[]>> {\n    return this.http.get<IEventLikeDislike[]>(\n      `${this.resourceUrl_event_like_dislikes}/${eventId}/${userId}/getEventLikeDislikeByEventIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findEventsByUserId(userId: string): Observable<HttpResponse<IEvent[]>> {\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/events/user/active/${userId}`, { observe: 'response' });\n  }\n\n  findEventByIsPublicAndActive(req?: any): Observable<HttpResponse<IEvent[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/public/active`, { params: options, observe: 'response' });\n  }\n\n  findEventyByPrivateOrPublicAndActiveTrueAndDateEndAfter(dateEnd: dayjs.Dayjs): Observable<HttpResponse<IEvent[]>> {\n    const de = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(de));\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateEnd/public/active`, { params: params, observe: 'response' });\n  }\n\n  findEventyByPrivateOrPublicAndActiveTrueAndDateEndBefor(dateEnd: dayjs.Dayjs): Observable<HttpResponse<IEvent[]>> {\n    const de = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateEnd', encodeURIComponent(de));\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateEnd/befor/public/active`, { params: params, observe: 'response' });\n  }\n\n  findShopByActiveTrue(): Observable<HttpResponse<IShop[]>> {\n    return this.http.get<IShop[]>(`${this.resourceUrl_shop}/active`, { observe: 'response' });\n  }\n\n  findShopByActiveTrueAndActiveOwnerTrue(): Observable<HttpResponse<IShop[]>> {\n    return this.http.get<IShop[]>(`${this.resourceUrl_shop}/active/activeOwner`, { observe: 'response' });\n  }\n\n  findOrganisationsByActiveTrue(): Observable<HttpResponse<IOrganization[]>> {\n    return this.http.get<IOrganization[]>(`${this.resourceUrl_organizations}/active`, { observe: 'response' });\n  }\n\n  findOrganizationsByActiveTrueAndActiveOwnerTrue(): Observable<HttpResponse<IOrganization[]>> {\n    return this.http.get<IOrganization[]>(`${this.resourceUrl_organizations}/active/activeOwner`, { observe: 'response' });\n  }\n\n  findEventProductOrdersByProductId(productId: number, req?: any): Observable<HttpResponse<IEventProductOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/${productId}/getEventProductOrderByProduct`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findEventProductOrdersByEventId(eventId: number, req?: any): Observable<HttpResponse<IEventProductOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/${eventId}/getProductsByEvent`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findAllProductsByShopId(shopId: number, req?: any): Observable<HttpResponse<IProduct[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IProduct[]>(`${this.resourceUrl_product}/${shopId}/all`, { params: options, observe: 'response' });\n  }\n\n  findAllChatMessagesByMessageToAndDateSeenIsNull(userToId: string): Observable<HttpResponse<IChatMessage[]>> {\n    return this.http.get<IChatMessage[]>(`${this.resourceUrl_chat}/${userToId}/messageToAndDateSeenIsNull`, { observe: 'response' });\n  }\n\n  findAllEventProductOrdersByDateStartBetween(\n    dateStartFrom: dayjs.Dayjs,\n    dateStartUntil: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    return this.http.get<IEventProductOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/${dateStartFrom}/${dateStartUntil}/findAllByDateStartBetween`,\n      { observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrdersByProductIdAndDateStartBetween(\n    productId: number,\n    dateStartFrom: dayjs.Dayjs,\n    dateStartUntil: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/${productId}/findAllByProductIdAndDateStartBetween`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventProductOrdersByProductIdAndDateUntilBetween(\n    productId: number,\n    dateStartFrom: dayjs.Dayjs,\n    dateStartUntil: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/${productId}/findAllByProductIdAndDateUntilBetween`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventProductOrdersByShopId(shopId: number): Observable<HttpResponse<IEventProductOrder[]>> {\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/${shopId}/getEventProductOrdersByShopId`, {\n      observe: 'response',\n    });\n  }\n\n  findAllEventProductOrdersByProductIdAndDateFromGreaterThenAndDateUntilSmallerThen(\n    productId: number,\n    dateStartFrom: dayjs.Dayjs,\n    dateStartUntil: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const dSF = dateStartFrom.format();\n    const dSU = dateStartUntil.format();\n    let params = new HttpParams();\n    params = params.append('dateStartFrom', encodeURIComponent(dSF));\n    params = params.append('dateStartUntil', encodeURIComponent(dSU));\n\n    return this.http.get<IEventProductOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/${productId}/findAllWithProductIdAndDateFromGreaterThenAndDateUntilSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventsByIsPublicAndActive(req?: any): Observable<HttpResponse<IEvent[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/public/active`, { params: options, observe: 'response' });\n  }\n\n  findEventsByPrivateOrPublicAndActiveTrueAndDateEndAfter(dateEnd: dayjs.Dayjs): Observable<HttpResponse<IEvent[]>> {\n    const d = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateEnd/public/active`, { params: params, observe: 'response' });\n  }\n\n  getEventsFromUserAndActive(userId: string, req?: any): Observable<HttpResponse<IEvent[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/user/active/${userId}`, { params: options, observe: 'response' });\n  }\n\n  findEventsByPrivateOrPublicAndActiveTrueAndDateStartBetween(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEvent[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/between/public/active`, { params: params, observe: 'response' });\n  }\n\n  getServicesFromUserAndActive(userId: string, req?: any): Observable<HttpResponse<ICreateYourEventService[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<ICreateYourEventService[]>(`${this.resourceUrl_service}/user/active/${userId}`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getServiceFromServiceMapId(serviceMapId: number, req?: any): Observable<HttpResponse<ICreateYourEventService[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<ICreateYourEventService[]>(`${this.resourceUrl_service}/active/serviceMap/${serviceMapId}`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findByCreateYourEventServiceId(serviceId: number, req?: any): Observable<HttpResponse<IServiceMap[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IServiceMap[]>(`${this.resourceUrl_servicemaps}/byServiceId/${serviceId}`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getServicesWhereActive(req?: any): Observable<HttpResponse<ICreateYourEventService[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<ICreateYourEventService[]>(`${this.resourceUrl_service}/active`, { params: options, observe: 'response' });\n  }\n\n  getServicesWhereActiveAndActiveOwnerTrue(req?: any): Observable<HttpResponse<ICreateYourEventService[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<ICreateYourEventService[]>(`${this.resourceUrl_service}/active/activeOwner`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getAllServiceOffersByServiceMapId(serviceMapId: number, req?: any): Observable<HttpResponse<IServiceOffer[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IServiceOffer[]>(`${this.resourceUrl_serviceoffers}/byServiceMapId/${serviceMapId}`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getAllEventServiceMapsOrdersByServiceMapId(serviceMapId: number, req?: any): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${serviceMapId}/getAllEventServiceMapsOrdersByServiceMapId`,\n      { params: options, observe: 'response' }\n    );\n  }\n\n  getAllEventServiceMapsOrdersByServiceMapIdAndEventConfirmed(\n    serviceMapId: number,\n    req?: any\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${serviceMapId}/getAllEventServiceMapsOrdersByServiceMapIdAndEventConfirmed`,\n      { params: options, observe: 'response' }\n    );\n  }\n\n  getAllEventServiceMapsOrdersByEventId(eventId: number, req?: any): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${eventId}/getAllEventServiceMapsOrdersByEventId`,\n      { params: options, observe: 'response' }\n    );\n  }\n\n  findAllEventServiceMapOrdersWithDateRange(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRange`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventServiceMapOrdersWithDateRangeAndServiceMapId(\n    serviceMapId: number,\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRangeAndServiceMapId/${serviceMapId}`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventServiceMapOrdersWithDateRangeAndEventId(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs,\n    eventId: number\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersWithDateRangeAndEventId/${eventId}`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllOrganizationReservationsWithDateRange(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IOrganizationReservation[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IOrganizationReservation[]>(\n      `${this.resourceUrl_organization_reservations}/findAllIOrganizationReservationsWithDateRange`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrdersWithDateRange(dateStart: dayjs.Dayjs, dateEnd: dayjs.Dayjs): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromRange`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  /* --------------------------------------------------------------------------------------------------------------------------------------------------- */\n\n  findAllEventProductOrdersWithDateFromRange(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromRange`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBetween(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBetween`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrdersWithDateFromBetweenAndDateUntilBiggerThen(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromBetweenAndDateUntilBiggerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBiggerThenAndOnSameTimeRange(\n    dateStart: dayjs.Dayjs,\n    dateEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = dateStart.format();\n    const e = dateEnd.format();\n    let params = new HttpParams();\n    params = params.append('dateStart', encodeURIComponent(s));\n    params = params.append('dateEnd', encodeURIComponent(e));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/findAllEventProductOrdersWithDateFromSmallerThenAndDateUntilBiggerThenAndOnSameTimeRange`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  /* --------------------------------------------------------------------------------------------------------------------------------------------------- */\n\n  findAllEventServiceMapOrdersByDateUntilLessGreaterThanNow(now: dayjs.Dayjs): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/findAllEventServiceMapOrdersByDateUntilLessGreaterThanNow`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrderByDateGreaterThen(now: dayjs.Dayjs): Observable<HttpResponse<IEventProductOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventProductOrder[]>(`${this.resourceUrl_eventProductOrder}/findAllEventProductOrderByDateGreaterThen`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findShopsByUserAndActiveTrue(req?: any): Observable<HttpResponse<IShop[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IShop[]>(`${this.resourceUrl_shop}/user/active`, { params: options, observe: 'response' });\n  }\n\n  findShopsByUserIdAndActiveTrue(userId: string, req?: any): Observable<HttpResponse<IShop[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IShop[]>(`${this.resourceUrl_shop}/${userId}/active`, { params: options, observe: 'response' });\n  }\n\n  findByUserIdAndActiveTrueAndPrivateOrPublic(req?: any): Observable<HttpResponse<IEvent[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/public/active/user`, { params: options, observe: 'response' });\n  }\n\n  getEventStarRatingByEventAndUser(eventId: number, userId: string, req?: any): Observable<HttpResponse<IEventStarRating[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventStarRating[]>(\n      `${this.resourceUrl_event_star_ratings}/${eventId}/${userId}/getEventStarRatingByEventAndUser`,\n      { params: options, observe: 'response' }\n    );\n  }\n\n  getEventStarRatingByEvent(eventId: number, req?: any): Observable<HttpResponse<IEventStarRating[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventStarRating[]>(`${this.resourceUrl_event_star_ratings}/${eventId}/getEventStarRatingByEvent`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getEventStarRatingByUser(userId: string, req?: any): Observable<HttpResponse<IEventStarRating[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventStarRating[]>(`${this.resourceUrl_event_star_ratings}/${userId}/getEventStarRatingByUser`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findAllWhereStarsBiggerAs(stars: number, req?: any): Observable<HttpResponse<IEventStarRating[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventStarRating[]>(`${this.resourceUrl_event_star_ratings}/${stars}/findAllWhereStarsBiggerAs`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  createReservation(reservation: IReservation): Observable<HttpResponse<IReservation>> {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http\n      .post<IReservation>(`${this.resourceUrl_reservation}/ext`, copy, { observe: 'response' })\n      .pipe(map((res: HttpResponse<IReservation>) => this.convertDateFromServer_Reservations(res)));\n  }\n\n  updateReservation(reservation: IReservation): Observable<HttpResponse<IReservation>> {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http\n      .put<IReservation>(`${this.resourceUrl_reservation}/${reservation.id}/ext`, copy, { observe: 'response' })\n      .pipe(map((res: HttpResponse<IReservation>) => this.convertDateFromServer_Reservations(res)));\n  }\n\n  partialUpdateReservation(reservation: IReservation): Observable<HttpResponse<IReservation>> {\n    const copy = this.convertDateFromClient_Reservations(reservation);\n    return this.http\n      .patch<IReservation>(`${this.resourceUrl_reservation}/${reservation.id}/ext`, copy, { observe: 'response' })\n      .pipe(map((res: HttpResponse<IReservation>) => this.convertDateFromServer_Reservations(res)));\n  }\n\n  deleteReservation(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_reservation}/${id}/ext`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient_Reservations(reservation: IReservation): IReservation {\n    return Object.assign({}, reservation, {\n      date: reservation.date?.isValid() ? reservation.date.toJSON() : undefined,\n      accessDate: reservation.accessDate?.isValid() ? reservation.accessDate.toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServer_Reservations(res: HttpResponse<IReservation>): HttpResponse<IReservation> {\n    if (res.body) {\n      res.body.date = res.body.date ? dayjs(res.body.date) : undefined;\n      res.body.accessDate = res.body.accessDate ? dayjs(res.body.accessDate) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer_Reservations(res: HttpResponse<IReservation[]>): HttpResponse<IReservation[]> {\n    if (res.body) {\n      res.body.forEach((reservation: IReservation) => {\n        reservation.date = reservation.date ? dayjs(reservation.date) : undefined;\n        reservation.accessDate = reservation.accessDate ? dayjs(reservation.accessDate) : undefined;\n      });\n    }\n    return res;\n  }\n\n  getReservationsByUser(userId: string, req?: any): Observable<HttpResponse<IReservation[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IReservation[]>(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserId`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getReservationsByUserAndBilled(userId: string, req?: any): Observable<HttpResponse<IReservation[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IReservation[]>(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserIdAndBilled`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  getReservationsByUserAndNotBilled(userId: string, req?: any): Observable<HttpResponse<IReservation[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IReservation[]>(`${this.resourceUrl_reservation}/${userId}/getReservationsByUserIdAndNotBilled`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findAllEventsByActiveTrueAndBilledFalseAndDateEndBefor(date: dayjs.Dayjs): Observable<HttpResponse<IEvent[]>> {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateBefor/active/notBilled`, { params: params, observe: 'response' });\n  }\n\n  findEventById(eventId: number): Observable<HttpResponse<IEvent>> {\n    return this.http.get<IEvent>(`${this.resourceUrl_event}/findById/${eventId}`, { observe: 'response' });\n  }\n\n  findAllEventsByActiveTrueAndBilledFalseAndDateEndBeforAndUserId(date: dayjs.Dayjs, userId: string): Observable<HttpResponse<IEvent[]>> {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateBefor/active/notBilled/${userId}`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventsByActiveTrueAndBilledTrueAndDateEndBeforAndUserId(date: dayjs.Dayjs, userId: string): Observable<HttpResponse<IEvent[]>> {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateBefor/active/billed/${userId}`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventsByActiveTrueAndDateEndBeforAndUserId(date: dayjs.Dayjs, userId: string): Observable<HttpResponse<IEvent[]>> {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateBefor/active/${userId}`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventsByActiveTrueAndDateEndAfterAndUserId(date: dayjs.Dayjs, userId: string): Observable<HttpResponse<IEvent[]>> {\n    const d = date.format();\n    let params = new HttpParams();\n    params = params.append('date', encodeURIComponent(d));\n\n    return this.http.get<IEvent[]>(`${this.resourceUrl_event}/dateAfter/active/${userId}`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findAllEventProductOrderByShopIdAndBilledFalseAndDateStartSmallerThen(\n    shopId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventProductOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndBilledFalseAndDateStartSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrderByShopIdAndBilledTrueAndDateStartSmallerThen(\n    shopId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventProductOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndBilledTrueAndDateStartSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findAllEventProductOrderByShopIdAndDateStartSmallerThen(\n    shopId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventProductOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventProductOrder[]>(\n      `${this.resourceUrl_eventProductOrder}/${shopId}/findAllEventProductOrderByShopIdAndDateStartSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findEventServiceMapOrdersByServiceMapIdAndBilledFalseAndDateEndSmallerThen(\n    serviceMapId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndBilledFalseAndDateEndSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findEventServiceMapOrdersByServiceMapIdAndDateEndSmallerThen(\n    serviceMapId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndDateEndSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findEventServiceMapOrdersByServiceMapIdAndBilledTrueAndDateEndSmallerThen(\n    serviceMapId: number,\n    now: dayjs.Dayjs\n  ): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const s = now.format();\n    let params = new HttpParams();\n    params = params.append('now', encodeURIComponent(s));\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/${serviceMapId}/findEventServiceMapOrdersByServiceMapIdAndBilledTrueAndDateEndSmallerThen`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  deleteProductTag(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteProduct/${id}`, { observe: 'response' });\n  }\n\n  deleteEventTag(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteEvent/${id}`, { observe: 'response' });\n  }\n\n  deleteShopTag(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteShop/${id}`, { observe: 'response' });\n  }\n\n  deleteServiceTag(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteService/${id}`, { observe: 'response' });\n  }\n\n  deleteOrganization(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_tags}/deleteOrganization/${id}`, { observe: 'response' });\n  }\n\n  findProductTags(id: number): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/findProduct/${id}`, { observe: 'response' });\n  }\n\n  findEventTags(id: number): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/findEvent/${id}`, { observe: 'response' });\n  }\n\n  findShopTags(id: number): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/findShop/${id}`, { observe: 'response' });\n  }\n\n  findServiceTags(id: number): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/findService/${id}`, { observe: 'response' });\n  }\n\n  findOrganizations(id: number): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/findOrganization/${id}`, { observe: 'response' });\n  }\n\n  findAllTags(): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/all`, { observe: 'response' });\n  }\n\n  find50TagsRandomly(): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/50`, { observe: 'response' });\n  }\n\n  find50EventTagsRandomly(): Observable<HttpResponse<ITags[]>> {\n    const t = this.http.get<ITags[]>(`${this.resourceUrl_tags}/50event`, { observe: 'response' });\n    return t;\n  }\n\n  findAllTagsWithActiveTrue(): Observable<HttpResponse<ITags[]>> {\n    return this.http.get<ITags[]>(`${this.resourceUrl_tags}/active/all`, { observe: 'response' });\n  }\n\n  findPointsByKey(key: String): Observable<HttpResponse<IPoint>> {\n    return this.http.get<IPoint>(`${this.resourceUrl_points}/key/${key}`, { observe: 'response' });\n  }\n\n  updateUserLoggedIn(id: string, loggedIn: boolean): Observable<void> {\n    return this.http.put<void>(`${this.resourceUrl}/${id}/${loggedIn}`, { observe: 'response' });\n  }\n\n  updateUserLoggedInAndPoints(userId: string, loggedIn: boolean, points: number): Observable<void> {\n    return this.http.put<void>(`${this.resourceUrl}/${userId}/${loggedIn}/${points}`, { observe: 'response' });\n  }\n\n  updateAddressAndPhoneFromUser(userId: string, address: string, phone: string): Observable<void> {\n    return this.http.put<void>(`${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}`, {\n      observe: 'response',\n    });\n  }\n\n  updateAGBTrue(userId: string): Observable<void> {\n    return this.http.put<void>(`${this.resourceUrl}/updateAGBTrue/${userId}`, { observe: 'response' });\n  }\n\n  updateAddressAndPhoneAndIBanFromUser(userId: string, address: string, phone: string, iban: string): Observable<void> {\n    return this.http.put<void>(\n      `${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}/${encodeURIComponent(iban)}`,\n      { observe: 'response' }\n    );\n  }\n\n  updateAddressAndPhoneAndIBanAndBanknameAndBankaddressFromUser(\n    userId: string,\n    address: string,\n    phone: string,\n    iban: string,\n    bankname: string,\n    bankaddress: string\n  ): Observable<void> {\n    //let params = new HttpParams().set('address',address).set('phone', phone);\n    return this.http.put<void>(\n      `${this.resourceUrl}/${userId}/update/${encodeURIComponent(address)}/${encodeURIComponent(phone)}/${encodeURIComponent(\n        iban\n      )}/${encodeURIComponent(bankname)}/${encodeURIComponent(bankaddress)}`,\n      { observe: 'response' }\n    );\n  }\n\n  getAllPointsFromUser(userId: string): Observable<HttpResponse<IUserPointAssociation[]>> {\n    return this.http.get<IUserPointAssociation[]>(`${this.resourceUrl_pointsUsers}/${userId}/getAllPointsFromUser`, {\n      observe: 'response',\n    });\n  }\n\n  findUserPointAssociationByUsersIdAndDateBetween(\n    userId: string,\n    betweenStart: dayjs.Dayjs,\n    betweenEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IUserPointAssociation[]>> {\n    const s = betweenStart.format();\n    const e = betweenEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IUserPointAssociation[]>(`${this.resourceUrl_pointsUsers}/${userId}/findByUsersIdAndDateBetween`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findUserPointAssociationByUsersIdAndPointkeyAndDateBetween(\n    userId: string,\n    key: string,\n    betweenStart: dayjs.Dayjs,\n    betweenEnd: dayjs.Dayjs\n  ): Observable<HttpResponse<IUserPointAssociation[]>> {\n    const s = betweenStart.format();\n    const e = betweenEnd.format();\n    let params = new HttpParams();\n    params = params.append('betweenStart', encodeURIComponent(s));\n    params = params.append('betweenEnd', encodeURIComponent(e));\n    return this.http.get<IUserPointAssociation[]>(\n      `${this.resourceUrl_pointsUsers}/${userId}/${key}/findByUsersIdAndPointkeyAndDateBetween`,\n      { params: params, observe: 'response' }\n    );\n  }\n\n  findUserPointAssociationByUsersIdAndPointkey(userId: string, key: string): Observable<HttpResponse<IUserPointAssociation[]>> {\n    return this.http.get<IUserPointAssociation[]>(`${this.resourceUrl_pointsUsers}/${userId}/${key}/findByUsersIdAndPointkey`, {\n      observe: 'response',\n    });\n  }\n\n  findShopStarRatingsByShopId(shopId: number): Observable<HttpResponse<IShopStarRating[]>> {\n    return this.http.get<IShopStarRating[]>(`${this.resourceUrl_shop_star_rating}/${shopId}/findShopStarRatingsByShopId`, {\n      observe: 'response',\n    });\n  }\n\n  findShopStarRatingsByShopIdAndUserId(shopId: number, userId: string): Observable<HttpResponse<IShopStarRating>> {\n    return this.http.get<IShopStarRating>(`${this.resourceUrl_shop_star_rating}/${shopId}/${userId}/findShopStarRatingsByShopIdAndUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findOrganizationStarRatingsByOrganizationId(organizationId: number): Observable<HttpResponse<IOrganizationStarRating[]>> {\n    return this.http.get<IOrganizationStarRating[]>(\n      `${this.resourceUrl_organization_star_ratings}/${organizationId}/findOrganizationStarRatingsByOrganizationId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findOrganizationStarRatingsByOrganizationIdAndUserId(\n    organizationId: number,\n    userId: string\n  ): Observable<HttpResponse<IOrganizationStarRating>> {\n    return this.http.get<IOrganizationStarRating>(\n      `${this.resourceUrl_organization_star_ratings}/${organizationId}/${userId}/findOrganizationStarRatingsByOrganizationIdAndUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findServiceStarRatingsByServiceId(serviceId: number): Observable<HttpResponse<IServiceStarRating[]>> {\n    return this.http.get<IServiceStarRating[]>(`${this.resourceUrl_service_star_rating}/${serviceId}/findServiceStarRatingsByServiceId`, {\n      observe: 'response',\n    });\n  }\n\n  findServiceStarRatingsByServiceIdAndUserId(serviceId: number, userId: string): Observable<HttpResponse<IServiceStarRating>> {\n    return this.http.get<IServiceStarRating>(\n      `${this.resourceUrl_service_star_rating}/${serviceId}/${userId}/findServiceStarRatingsByServiceIdAndUserId`,\n      { observe: 'response' }\n    );\n  }\n\n  findGiftsByActiveTrue(): Observable<HttpResponse<IGift[]>> {\n    return this.http.get<IGift[]>(`${this.resourceUrl_gifts}/active`, { observe: 'response' });\n  }\n\n  findBondsByCode(code: string): Observable<HttpResponse<IBond[]>> {\n    return this.http.get<IBond[]>(`${this.resourceUrl_bond}/findByCode/${code}`, { observe: 'response' });\n  }\n\n  findPropertyByKey(key: string): Observable<HttpResponse<IProperty>> {\n    return this.http.get<IProperty>(`${this.resourceUrl_properties}/key/${key}`, { observe: 'response' });\n  }\n\n  findProductStarRatingsByProductId(productId: number): Observable<HttpResponse<IProductStarRating[]>> {\n    return this.http.get<IProductStarRating[]>(`${this.resourceUrl_product_star_rating}/${productId}/findProductStarRatingsByProductId`, {\n      observe: 'response',\n    });\n  }\n\n  findProductStarRatingsByProductIdAndUserId(productId: number, userId: string): Observable<HttpResponse<IProductStarRating>> {\n    return this.http.get<IProductStarRating>(\n      `${this.resourceUrl_product_star_rating}/${productId}/${userId}/findProductStarRatingsByProductIdAndUserId`,\n      { observe: 'response' }\n    );\n  }\n\n  findChipsCollectionByUserId(userId: string): Observable<HttpResponse<IChipsCollection>> {\n    return this.http.get<IChipsCollection>(`${this.resourceUrl_chips_collections}/${userId}/findChipsCollectionByUserId`, {\n      observe: 'response',\n    });\n  }\n\n  findAllChipsCollectionChipsByChipsCollectionId(id: number): Observable<HttpResponse<IChipsCollectionChips[]>> {\n    return this.http.get<IChipsCollectionChips[]>(\n      `${this.resourceUrl_chips_collection_chips}/${id}/findAllChipsCollectionChipsByChipsCollectionId`,\n      { observe: 'response' }\n    );\n  }\n\n  findOndChipsCollectionChipsByChipsCollectionIdAndChipsId(\n    collectionId: number,\n    chipsId: number\n  ): Observable<HttpResponse<IChipsCollectionChips>> {\n    return this.http.get<IChipsCollectionChips>(\n      `${this.resourceUrl_chips_collection_chips}/${collectionId}/${chipsId}/findOneChipsCollectionChipsByChipsCollectionIdAndChipsId`,\n      { observe: 'response' }\n    );\n  }\n\n  deleteAllChipsCollectionChips(): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_chips_collection_chips}/deleteAllChipsCollectionChips`, { observe: 'response' });\n  }\n\n  findAllProductsWhereShopActiveAndProductActive(req?: any): Observable<HttpResponse<IProduct[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IProduct[]>(`${this.resourceUrl_product}/shop/product/active`, { params: options, observe: 'response' });\n  }\n\n  findAllIGiftShoppingCartsByUserId(userId: string, req?: any): Observable<HttpResponse<IGiftShoppingCart[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IGiftShoppingCart[]>(`${this.resourceUrl_gift_shopping_carts}/${userId}/findByUserId`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  findAllPartnersWhereActiveTrue(req?: any): Observable<HttpResponse<IPartner[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IPartner[]>(`${this.resourceUrl_partners}/active`, { params: options, observe: 'response' });\n  }\n\n  findDeliveryTypeByProductId(id: number, req?: any): Observable<HttpResponse<IDeliveryType[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IDeliveryType[]>(`${this.resourceUrl_delivery_types}/${id}/findDeliveryTypeByProductId`, {\n      params: options,\n      observe: 'response',\n    });\n  }\n\n  deleteDeliveryTypesByProductId(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl_delivery_types}/${id}/deleteByProductId`, { observe: 'response' });\n  }\n\n  findMp3ByServiceIdAndUserId(serviceId: number, userId: string): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${userId}/${serviceId}/service`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByServiceId(serviceId: number): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${serviceId}/service`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByProductIdAndUserId(productId: number, userId: string): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${userId}/${productId}/product`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByProductId(productId: number): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${productId}/product`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByEventIdAndUserId(eventId: number, userId: string): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${userId}/${eventId}/event`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByEventId(eventId: number): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${eventId}/event`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByShopIdAndUserId(shopId: number, userId: string): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${userId}/${shopId}/shop`, {\n      observe: 'response',\n    });\n  }\n\n  findMp3ByShopId(shopId: number): Observable<HttpResponse<IMp3[]>> {\n    return this.http.get<IMp3[]>(`${this.resourceUrl_mp3}/${shopId}/shop`, {\n      observe: 'response',\n    });\n  }\n\n  deleteMP3(mp3Id: number): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_music_del}/${mp3Id}/delete`, {\n      observe: 'response',\n    });\n  }\n\n  findShopCommentsByEager(): Observable<HttpResponse<IShopComment[]>> {\n    return this.http.get<IShopComment[]>(`${this.resourceUrl_shop_comments}/findAllByEager`, { observe: 'response' });\n  }\n\n  getTransactionIdFromDatatrans(amount: number, type: string, id: number): Observable<HttpResponse<any>> {\n    return this.http.get<any>(`${this.resourceUrl_datatrans}/${amount}/${type}/${id}`, { observe: 'response' });\n  }\n\n  getStatusFromTransactionIdFromDatatrans(id: string): Observable<HttpResponse<any>> {\n    return this.http.get<any>(`${this.resourceUrl_datatrans}/txId/${id}`, { observe: 'response' });\n  }\n\n  findTicketsByEventId(eventId: number): Observable<HttpResponse<ITicket[]>> {\n    return this.http.get<ITicket[]>(`${this.resourceUrl_tickets}/${eventId}/getAllTicketsByEventId`, {\n      observe: 'response',\n    });\n  }\n\n  uploadPdf(data: FormData, reservationId: number, mail: string, lang: string): Observable<HttpResponse<void>> {\n    let params = new HttpParams();\n    params = params.append('mail', mail);\n\n    return this.http.post<void>(`${this.resourceUrl_send_ticket}/${reservationId}/${lang}/uploadPdf`, data, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  findRestaurantsByUserAndActive(): Observable<HttpResponse<IRestaurant[]>> {\n    return this.http.get<IRestaurant[]>(`${this.resourceUrl_restaurants}/byUser/active`, {\n      observe: 'response',\n    });\n  }\n\n  findHotelsByUserAndActive(): Observable<HttpResponse<IHotel[]>> {\n    return this.http.get<IHotel[]>(`${this.resourceUrl_hotels}/byUser/active`, {\n      observe: 'response',\n    });\n  }\n\n  findClubsByUserAndActive(): Observable<HttpResponse<IClub[]>> {\n    return this.http.get<IClub[]>(`${this.resourceUrl_clubs}/byUser/active`, {\n      observe: 'response',\n    });\n  }\n\n  findBuildingsByUserAndActive(): Observable<HttpResponse<IBuilding[]>> {\n    return this.http.get<IBuilding[]>(`${this.resourceUrl_buildings}/byUser/active`, {\n      observe: 'response',\n    });\n  }\n\n  findOrganizationsByActiveAndActiveOwner(): Observable<HttpResponse<IOrganization[]>> {\n    return this.http.get<IOrganization[]>(`${this.resourceUrl_organizations}/active/activeOwner`, {\n      observe: 'response',\n    });\n  }\n\n  findOrganizationReservationsByEventId(eventId: number): Observable<HttpResponse<IOrganizationReservation[]>> {\n    return this.http.get<IOrganizationReservation[]>(\n      `${this.resourceUrl_organization_reservations}/${eventId}/findOrganizationReservationsByEventId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findOrganizationReservationsByOrganizationId(eventId: number): Observable<HttpResponse<IOrganizationReservation[]>> {\n    return this.http.get<IOrganizationReservation[]>(\n      `${this.resourceUrl_organization_reservations}/${eventId}/findOrganizationReservationsByOrganizationId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findClubByOrganizationId(id: number): Observable<HttpResponse<IClub>> {\n    return this.http.get<IClub>(`${this.resourceUrl_clubs}/${id}/clubByOrganizationId`, {\n      observe: 'response',\n    });\n  }\n\n  findHotelByOrganizationId(id: number): Observable<HttpResponse<IHotel>> {\n    return this.http.get<IHotel>(`${this.resourceUrl_hotels}/${id}/hotelByOrganizationId`, {\n      observe: 'response',\n    });\n  }\n\n  findRestaurantByOrganizationId(id: number): Observable<HttpResponse<IRestaurant>> {\n    return this.http.get<IRestaurant>(`${this.resourceUrl_restaurants}/${id}/restaurantByOrganizationId`, {\n      observe: 'response',\n    });\n  }\n\n  byActiveTrueAndUserIdAndDateUntilSmallerThanNow(userId: string): Observable<HttpResponse<IOrganizationReservation[]>> {\n    return this.http.get<IOrganizationReservation[]>(\n      `${this.resourceUrl_organization_reservations}/${userId}/byActiveTrueAndUserIdAndDateUntilSmallerThanNow`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findOrganizationReservationsByOrganizationWithUserId(userId: string): Observable<HttpResponse<IOrganizationReservation[]>> {\n    return this.http.get<IOrganizationReservation[]>(\n      `${this.resourceUrl_organization_reservations}/${userId}/findOrganizationReservationsByOrganizationWithUserId`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  findEventServiceMapOrdersByEventDateEndSmallerThenNow(req?: any): Observable<HttpResponse<IEventServiceMapOrder[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventServiceMapOrder[]>(\n      `${this.resourceUrl_event_service_map_orders}/findEventServiceMapOrdersByEventDateEndSmallerThenNow`,\n      { params: options, observe: 'response' }\n    );\n  }\n\n  deleteAllSlotListPlum(): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_slot_list_plum}/deleteAll`, {\n      observe: 'response',\n    });\n  }\n\n  deleteAllSlotListOrange(): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_slot_list_orange}/deleteAll`, {\n      observe: 'response',\n    });\n  }\n\n  deleteAllSlotListCherry(): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_slot_list_cherry}/deleteAll`, {\n      observe: 'response',\n    });\n  }\n\n  deleteAllSlotListClock(): Observable<HttpResponse<void>> {\n    return this.http.delete<void>(`${this.resourceUrl_slot_list_clock}/deleteAll`, {\n      observe: 'response',\n    });\n  }\n\n  findCouponsByActiveUser(): Observable<HttpResponse<ICoupon[]>> {\n    return this.http.get<ICoupon[]>(`${this.resourceUrl_coupons}/byUser`, {\n      observe: 'response',\n    });\n  }\n\n  findCouponsByUser(userId: string): Observable<HttpResponse<ICoupon[]>> {\n    return this.http.get<ICoupon[]>(`${this.resourceUrl_coupons}/${userId}/byUser`, {\n      observe: 'response',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}