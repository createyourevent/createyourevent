{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { _isTestEnvironment, Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n  }\n}\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('12.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('12.2.13');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  constructor(highContrastModeDetector, sanityChecks, document) {\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    this._document = document;\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n    this._sanityChecks = sanityChecks;\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._checkCdkVersionMatch();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n  _checkIsEnabled(name) {\n    // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n    // it. Since these checks can have performance implications and they aren't tree shakeable\n    // in their current form, we can leave the `isDevMode` check in for now.\n    // tslint:disable-next-line:ban\n    if (!isDevMode() || _isTestEnvironment()) {\n      return false;\n    }\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n    return !!this._sanityChecks[name];\n  }\n  _checkDoctypeIsDefined() {\n    if (this._checkIsEnabled('doctype') && !this._document.doctype) {\n      console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n    }\n  }\n  _checkThemeIsPresent() {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._checkIsEnabled('theme') || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n    const testElement = this._document.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    this._document.body.removeChild(testElement);\n  }\n  /** Checks whether the material version matches the cdk version */\n  _checkCdkVersionMatch() {\n    if (this._checkIsEnabled('version') && VERSION.full !== VERSION$2.full) {\n      console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$2.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n    }\n  }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT));\n};\nMatCommonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\nMatCommonModule.ctorParameters = () => [{\n  type: HighContrastModeDetector\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MATERIAL_SANITY_CHECKS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function () {\n      return [BidiModule];\n    },\n    exports: function () {\n      return [BidiModule];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      // This class member exists as an interop with `MatFormFieldControl` which expects\n      // a public `stateChanges` observable to emit whenever the form field should be updated.\n      // The description is not specifically mentioning the error state, as classes using this\n      // mixin can/should emit an event in other cases too.\n      /** Emits whenever the component state changes. */\n      this.stateChanges = new Subject();\n      /** Whether the component is in an error state. */\n      this.errorState = false;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0$1 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0$1);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale, platform) {\n    super();\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n    this.useUtcForDisplay = true;\n    super.setLocale(matDateLocale);\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n  getDateNames() {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n  getDayOfWeekNames(style) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n  getYearName(date) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n      displayFormat = Object.assign(Object.assign({}, displayFormat), {\n        timeZone: 'utc'\n      });\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  _stripDirectionalityCharacters(str) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform));\n};\nNativeDateAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\nNativeDateAdapter.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_LOCALE]\n  }]\n}, {\n  type: Platform\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\nNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [PlatformModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function () {\n      return [PlatformModule];\n    }\n  });\n})();\nconst ɵ0 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\nMatNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0\n  }],\n  imports: [NativeDateModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0\n      }]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\nErrorStateMatcher.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {}\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\nMatLine.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\nclass MatLineModule {}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\nMatLineModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n    this.state = 3 /* HIDDEN */;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  constructor(_target, _ngZone, elementOrElementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${duration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)';\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = 0 /* FADING_IN */;\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = 1 /* VISIBLE */;\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2 /* FADING_OUT */;\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = 3 /* HIDDEN */;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    this._registerEvents(pointerDownEvents);\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1 /* VISIBLE */ || ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  _runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n  /** Registers event listeners for a given list of events. */\n  _registerEvents(eventTypes) {\n    this._ngZone.runOutsideAngular(() => {\n      eventTypes.forEach(type => {\n        this._triggerElement.addEventListener(type, this, passiveEventOptions);\n      });\n    });\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach(type => {\n        this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n      });\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /** Fades out all currently showing non-persistent ripple elements. */\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : {}), this.animation),\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n    }\n  }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatRipple.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\nMatRipple.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\nMatRippleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, PlatformModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function () {\n      return [MatRipple];\n    },\n    imports: function () {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    this.disabled = false;\n  }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatPseudoCheckbox.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    imports: [MatCommonModule],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    var _a;\n    super();\n    /** Unique id for the underlying label. */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n  }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n_MatOptgroupBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n_MatOptgroupBase.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }, {\n    type: Optional\n  }]\n}];\n_MatOptgroupBase.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {}\nMatOptgroup.ɵfac = /*@__PURE__*/function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\nMatOptgroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-optgroup\"],\n  hostVars: 5,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(3, \"\\n\");\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtext(5, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n        '[class.mat-optgroup-disabled]': 'disabled'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\nclass _MatOptionBase {\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return this._parent && this._parent.disableRipple;\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /** Selects the option. */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Deselects the option. */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase));\n};\n_MatOptionBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n_MatOptionBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined\n}, {\n  type: _MatOptgroupBase\n}];\n_MatOptionBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n}\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\nMatOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 11,\n  vars: 4,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵtext(1, \"\\n\\n\");\n      ɵngcc0.ɵɵelementStart(2, \"span\", 1);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(4, \"\\n\\n\");\n      ɵngcc0.ɵɵtext(5, \"\\n\");\n      ɵngcc0.ɵɵtemplate(6, MatOption_span_6_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵtext(7, \"\\n\\n\");\n      ɵngcc0.ɵɵelementStart(8, \"div\", 3);\n      ɵngcc0.ɵɵtext(9, \"\\n\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(10, \"\\n\");\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(6);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, ɵngcc3.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }]\n}, {\n  type: MatOptgroup,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTGROUP]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\nMatOptionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function () {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function () {\n      return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function () {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION$1 as VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };","map":{"version":3,"names":["i0","Version","InjectionToken","isDevMode","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","Directive","ElementRef","NgZone","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","ChangeDetectorRef","Output","HighContrastModeDetector","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$2","DOCUMENT","CommonModule","_isTestEnvironment","Platform","PlatformModule","normalizePassiveListenerOptions","coerceBooleanProperty","coerceNumberProperty","coerceElement","Subject","Observable","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","MatOption_span_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵadvance","ɵɵtextInterpolate1","group","label","_c2","VERSION$1","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_document","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_checkIsEnabled","name","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","full","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","exports","ngJitMode","ɵɵsetNgModuleScope","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","stateChanges","errorState","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0$1","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","Math","Object","assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setHours","n","slice","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","provide","useClass","ɵ0","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","fn","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","window","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","features","ɵɵInheritDefinitionFeature","MAT_OPTGROUP","MatOptgroup","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","useExisting","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","_MatOptionBase_Factory","outputs","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","MatOption_Template","ɵɵtemplate","dependencies","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","ɵangular_material_src_material_core_core_a"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { _isTestEnvironment, Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nfunction MatOption_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n} }\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('12.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('12.2.13');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        if (!isDevMode() || _isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n    _checkDoctypeIsDefined() {\n        if (this._checkIsEnabled('doctype') && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._checkIsEnabled('theme') || !this._document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        if (this._checkIsEnabled('version') && VERSION.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT)); };\nMatCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BidiModule, BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0$1 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0$1);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [PlatformModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\nconst ɵ0 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }], imports: [NativeDateModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8)); };\n_MatOptgroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }, { type: Optional }] }\n];\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }, {\n                type: Optional\n            }] }]; }, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = /*@__PURE__*/ function () { let ɵMatOptgroup_BaseFactory; return function MatOptgroup_Factory(t) { return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup); }; }();\nMatOptgroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [1, \"mat-optgroup\"], hostVars: 5, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 2, consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(3, \"\\n\");\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtext(5, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                    'class': 'mat-optgroup',\n                    '[attr.role]': '_inert ? null : \"group\"',\n                    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                    '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    '[class.mat-optgroup-disabled]': 'disabled'\n                }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 11, vars: 4, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n\\n\");\n        ɵngcc0.ɵɵelementStart(2, \"span\", 1);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(4, \"\\n\\n\");\n        ɵngcc0.ɵɵtext(5, \"\\n\");\n        ɵngcc0.ɵɵtemplate(6, MatOption_span_6_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵtext(7, \"\\n\\n\");\n        ɵngcc0.ɵɵelementStart(8, \"div\", 3);\n        ɵngcc0.ɵɵtext(9, \"\\n\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(10, \"\\n\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, dependencies: [MatRipple, ɵngcc3.NgIf, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                }, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION$1 as VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}