{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/entities/tags/service/tags.service\";\nimport * as i2 from \"./tag-cloud.service\";\nimport * as i3 from \"angular-tag-cloud-module\";\nexport class TagCloudComponent {\n  constructor(tagsService, provider) {\n    this.tagsService = tagsService;\n    this.provider = provider;\n    this.options = {\n      // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n      width: 0.98,\n      // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n      height: 500,\n      overflow: false\n    };\n    this.data = [];\n  }\n  ngOnInit() {\n    this.newData();\n  }\n  ngOnDestroy() {}\n  newData() {\n    this.data = this.provider.getTags();\n  }\n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  getRandomColor() {\n    const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n    return c;\n  }\n}\nTagCloudComponent.ɵfac = function TagCloudComponent_Factory(t) {\n  return new (t || TagCloudComponent)(i0.ɵɵdirectiveInject(i1.TagsService), i0.ɵɵdirectiveInject(i2.TagCloudService));\n};\nTagCloudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TagCloudComponent,\n  selectors: [[\"jhi-tag-cloud\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"bg\"], [1, \"tag-cloud\", 3, \"data\", \"width\", \"height\", \"overflow\"]],\n  template: function TagCloudComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"    \");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵtext(2, \"\\n      \");\n      i0.ɵɵelementStart(3, \"angular-tag-cloud\", 1);\n      i0.ɵɵtext(4, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"data\", ctx.data)(\"width\", ctx.options.width)(\"height\", ctx.options.height)(\"overflow\", ctx.options.overflow);\n    }\n  },\n  dependencies: [i3.TagCloudComponent],\n  styles: [\".bg[_ngcontent-%COMP%] {\\n  \\n  background: rgb(228, 245, 252);   \\n  background: linear-gradient(to bottom, rgb(228, 245, 252) 0%, rgb(191, 232, 249) 50%, rgb(159, 216, 239) 51%, rgb(42, 176, 237) 100%); \\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\\\"#e4f5fc\\\", endColorstr=\\\"#2ab0ed\\\",GradientType=0 ); \\n  margin: 30px;\\n  border-radius: 15px;\\n  box-shadow: 4px 5px 7px 5px rgba(255, 255, 255, 0.64);\\n}\\n\\n.tag-cloud[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  font-family: \\\"Do Hyeon\\\", sans-serif;\\n  text-shadow: 2px 2px 2px #250233;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvdmlld3MvdGFnLWNsb3VkL3RhZy1jbG91ZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFKQUFBO0VBQ0EsOEJBQUEsRUFBQSxpQkFBQSxFQU9HLGFBQUEsRUFPQSw0QkFBQTtFQUNILHFJQUFBLEVBTUcscURBQUE7RUFDSCxtSEFBQSxFQUFBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFFQSxxREFBQTtBQWpCRjs7QUFvQkE7RUFDRSxtQkFBQTtFQUNBLG1DQUFBO0VBQ0EsZ0NBQUE7QUFqQkYiLCJzb3VyY2VzQ29udGVudCI6WyIuYmcge1xuICAvKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cHM6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvI2U0ZjVmYyswLGJmZThmOSs1MCw5ZmQ4ZWYrNTEsMmFiMGVkKzEwMDtCbHVlK0dsb3NzKyUyMzUgKi9cbiAgYmFja2dyb3VuZDogcmdiKDIyOCwgMjQ1LCAyNTIpOyAvKiBPbGQgYnJvd3NlcnMgKi9cbiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoXG4gICAgdG9wLFxuICAgIHJnYmEoMjI4LCAyNDUsIDI1MiwgMSkgMCUsXG4gICAgcmdiYSgxOTEsIDIzMiwgMjQ5LCAxKSA1MCUsXG4gICAgcmdiYSgxNTksIDIxNiwgMjM5LCAxKSA1MSUsXG4gICAgcmdiYSg0MiwgMTc2LCAyMzcsIDEpIDEwMCVcbiAgKTsgLyogRkYzLjYtMTUgKi9cbiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoXG4gICAgdG9wLFxuICAgIHJnYmEoMjI4LCAyNDUsIDI1MiwgMSkgMCUsXG4gICAgcmdiYSgxOTEsIDIzMiwgMjQ5LCAxKSA1MCUsXG4gICAgcmdiYSgxNTksIDIxNiwgMjM5LCAxKSA1MSUsXG4gICAgcmdiYSg0MiwgMTc2LCAyMzcsIDEpIDEwMCVcbiAgKTsgLyogQ2hyb21lMTAtMjUsU2FmYXJpNS4xLTYgKi9cbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHRvIGJvdHRvbSxcbiAgICByZ2JhKDIyOCwgMjQ1LCAyNTIsIDEpIDAlLFxuICAgIHJnYmEoMTkxLCAyMzIsIDI0OSwgMSkgNTAlLFxuICAgIHJnYmEoMTU5LCAyMTYsIDIzOSwgMSkgNTElLFxuICAgIHJnYmEoNDIsIDE3NiwgMjM3LCAxKSAxMDAlXG4gICk7IC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqL1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nI2U0ZjVmYycsIGVuZENvbG9yc3RyPScjMmFiMGVkJyxHcmFkaWVudFR5cGU9MCApOyAvKiBJRTYtOSAqL1xuICBtYXJnaW46IDMwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogNHB4IDVweCA3cHggNXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42NCk7XG4gIGJveC1zaGFkb3c6IDRweCA1cHggN3B4IDVweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNjQpO1xufVxuXG4udGFnLWNsb3VkIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1mYW1pbHk6ICdEbyBIeWVvbicsIHNhbnMtc2VyaWY7XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDJweCAjMjUwMjMzO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAYA,OAAM,MAAOA,iBAAiB;EAa5BC,YAAoBC,WAAwB,EAAUC,QAAyB;IAA3D,gBAAW,GAAXD,WAAW;IAAuB,aAAQ,GAARC,QAAQ;IAV9D,YAAO,GAAiB;MACtB;MACAC,KAAK,EAAE,IAAI;MACX;MACAC,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE;KACX;IAED,SAAI,GAAgB,EAAE;EAE4D;EAElFC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAC,WAAW,IAAU;EAErBD,OAAO;IACL,IAAI,CAACE,IAAI,GAAG,IAAI,CAACP,QAAQ,CAACQ,OAAO,EAAE;EACrC;EAEAC,YAAY,CAACC,GAAW,EAAEC,GAAW;IACnCD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;IACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC1D;EAEAM,cAAc;IACZ,MAAMC,CAAC,GAAG,GAAG,GAAG,CAAC,SAAS,GAAGL,IAAI,CAACG,MAAM,EAAE,GAAG,QAAQ,EAAEG,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAChF,OAAOF,CAAC;EACV;;;mBAlCWpB,iBAAiB;AAAA;;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ1BC;MAAAA,8BAAgB;MACdA;MAAAA,4CAKgC;MAChCA;MAAAA,iBAAoB;MACtBA;MAAAA,iBAAM;MACVA;;;MANQA,eAAa;MAAbA,+BAAa","names":["TagCloudComponent","constructor","tagsService","provider","width","height","overflow","ngOnInit","newData","ngOnDestroy","data","getTags","getRandomInt","min","max","Math","ceil","floor","random","getRandomColor","c","toString","substr","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/tag-cloud/tag-cloud.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/tag-cloud/tag-cloud.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { CloudOptions, CloudData } from \"angular-tag-cloud-module\";\nimport { TagsService } from \"app/entities/tags/service/tags.service\";\nimport { ITags } from \"app/entities/tags/tags.model\";\nimport { TagCloudService } from \"./tag-cloud.service\";\n\n\n@Component({\n  selector: 'jhi-tag-cloud',\n  templateUrl: './tag-cloud.component.html',\n  styleUrls: ['tag-cloud.component.scss']\n})\nexport class TagCloudComponent implements OnInit, OnDestroy {\n  tags!: ITags[];\n\n  options: CloudOptions = {\n    // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n    width: 0.98,\n    // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n    height: 500,\n    overflow: false\n  };\n\n  data: CloudData[] = [];\n\n  constructor(private tagsService: TagsService, private provider: TagCloudService) {}\n\n  ngOnInit(): void {\n    this.newData();\n  }\n\n  ngOnDestroy(): void {}\n\n  newData(): void {\n    this.data = this.provider.getTags();\n  }\n\n  getRandomInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  getRandomColor(): string {\n    const c = '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n    return c;\n  }\n}\n","    <div class=\"bg\">\n      <angular-tag-cloud\n        class=\"tag-cloud\"\n        [data]=\"data\"\n        [width]=\"options.width\"\n        [height]=\"options.height\"\n        [overflow]=\"options.overflow\">\n      </angular-tag-cloud>\n    </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}