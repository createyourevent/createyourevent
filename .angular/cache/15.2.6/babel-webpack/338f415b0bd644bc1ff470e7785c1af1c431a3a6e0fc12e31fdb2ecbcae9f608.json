{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { StripeIbanComponent, StripeCardComponent } from 'ngx-stripe';\nimport { switchMap } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"ngx-stripe\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"app/general.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"../../shared/language/translate.directive\";\nimport * as i11 from \"@angular/material/toolbar\";\nimport * as i12 from \"../datatrans_react/Datatrans.component\";\nimport * as i13 from \"app/pipes/transactionId.pipe\";\nfunction PaymentComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵelementStart(4, \"span\", 2);\n    i0.ɵɵtext(5, \"Everything is paid for. Thank you very much for that.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PaymentComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"mat-toolbar\", 4);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Datatrans Terminal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementStart(11, \"datatrans-component\", 5);\n    i0.ɵɵlistener(\"onLoaded\", function PaymentComponent_ng_container_4_Template_datatrans_component_onLoaded_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLoaded($event));\n    })(\"onOpened\", function PaymentComponent_ng_container_4_Template_datatrans_component_onOpened_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onOpened($event));\n    })(\"onCancelled\", function PaymentComponent_ng_container_4_Template_datatrans_component_onCancelled_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onCancelled($event));\n    })(\"onError\", function PaymentComponent_ng_container_4_Template_datatrans_component_onError_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onError($event));\n    });\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵpipe(13, \"transactionId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelement(15, \"hr\");\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementStart(17, \"div\", 6);\n    i0.ɵɵtext(18, \"\\n        \");\n    i0.ɵɵelementStart(19, \"div\", 7);\n    i0.ɵɵtext(20, \"\\n          \");\n    i0.ɵɵelementStart(21, \"div\", 8);\n    i0.ɵɵtext(22, \"\\n            \");\n    i0.ɵɵelement(23, \"img\", 9);\n    i0.ɵɵtext(24, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n          \");\n    i0.ɵɵelementStart(26, \"div\", 10);\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelement(28, \"img\", 11);\n    i0.ɵɵtext(29, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n          \");\n    i0.ɵɵelementStart(31, \"div\", 10);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelement(33, \"img\", 12);\n    i0.ɵɵtext(34, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"production\", ctx_r1.production)(\"transactionId\", i0.ɵɵpipeBind1(12, 2, i0.ɵɵpipeBind3(13, 4, ctx_r1.value, ctx_r1.type, ctx_r1.id)));\n  }\n}\nexport class PaymentComponent {\n  constructor(fb, messageService, stripeService, http, translate, generalService, route) {\n    this.fb = fb;\n    this.messageService = messageService;\n    this.stripeService = stripeService;\n    this.http = http;\n    this.translate = translate;\n    this.generalService = generalService;\n    this.route = route;\n    this.value = 0;\n    this.successEvent = new EventEmitter();\n    this.type = '';\n    this.id = -1;\n    this.ibanOptions = {\n      style: {\n        base: {\n          iconColor: '#666EE8',\n          color: '#31325F',\n          fontWeight: '300',\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSize: '18px',\n          '::placeholder': {\n            color: '#CFD7E0'\n          }\n        }\n      }\n    };\n    this.cardOptions = {\n      style: {\n        base: {\n          iconColor: '#8118de',\n          color: '#000',\n          fontWeight: '300',\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSize: '18px'\n        }\n      }\n    };\n    this.elementsOptions = {\n      locale: 'auto'\n    };\n  }\n  ngOnChanges(changes) {\n    if (changes['value'] !== undefined && changes['value'].currentValue !== undefined) {\n      this.value = changes['value'].currentValue;\n      this.initConfig();\n    }\n  }\n  ngOnInit() {\n    const host = window.location.host;\n    if (host.startsWith('dev.')) {\n      this.production = false;\n    } else {\n      this.production = true;\n    }\n    this.ccGroup = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.route.queryParams.subscribe(params => {\n      this.datatransTrxId = params['datatransTrxId'];\n      if (this.datatransTrxId) {\n        this.generalService.getStatusFromTransactionIdFromDatatrans(this.datatransTrxId).subscribe(res => {\n          const z = res.body;\n          if (z.status === 'authorized' || z.status === 'settled') {\n            this.successEvent.emit(z);\n          }\n        });\n      }\n    });\n  }\n  onLoaded(e) {\n    console.log('OnLoaded');\n  }\n  onOpened(e) {\n    console.log('OnOpened');\n  }\n  onCancelled(e) {\n    console.log('OnCancelled');\n  }\n  onError(e) {\n    console.log('OnError');\n  }\n  pay() {\n    if (this.ccGroup.valid) {\n      this.createPaymentIntent(this.value * 100).pipe(switchMap(pi => this.stripeService.confirmCardPayment(pi.client_secret, {\n        payment_method: {\n          card: this.card.element,\n          billing_details: {\n            name: this.ccGroup.get('name').value\n          }\n        }\n      }))).subscribe(result => {\n        if (result.error) {\n          this.messageService.add({\n            severity: 'error',\n            summary: result.error.message,\n            detail: result.error.message\n          });\n        } else {\n          // The payment has been processed!\n          if (result.paymentIntent.status === 'succeeded') {\n            this.messageService.add({\n              severity: 'success',\n              summary: this.translate.instant('cashbox.payment-successfull'),\n              detail: this.translate.instant('cashbox.cc-form.successful.info')\n            });\n            this.ccGroup.reset();\n            this.card.element.clear();\n            this.successEvent.emit(result);\n          }\n        }\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: this.translate.instant('cashbox.cc-form.error'),\n        detail: this.translate.instant('cashbox.cc-form.error.info')\n      });\n    }\n  }\n  createPaymentIntent(amount) {\n    return this.http.post(`https://stripe.createyourevent.org/api/create-payment-intent`, {\n      amount: amount\n    });\n  }\n  initConfig() {\n    this.payPalConfig = {\n      currency: 'CHF',\n      clientId: 'AcFPWJ-j150ofAt93PIKeb5oCzEBv7dO1NKeaaX9oKsJJNLCcmuVEPIvn_UOf9HAiBPX2Xz1npanBgU7',\n      createOrderOnClient: data => ({\n        intent: 'CAPTURE',\n        purchase_units: [{\n          amount: {\n            currency_code: 'CHF',\n            value: '' + this.value,\n            breakdown: {\n              item_total: {\n                currency_code: 'CHF',\n                value: '' + this.value\n              }\n            }\n          }\n        }]\n      }),\n      advanced: {\n        commit: 'true'\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical'\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        actions.order.get().then(details => {\n          console.log('onApprove - you can get full order details inside onApprove: ', details);\n        });\n      },\n      onClientAuthorization: data => {\n        console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n        this.successEvent.emit({\n          data: data\n        });\n        this.messageService.add({\n          severity: 'success',\n          summary: this.translate.instant('cashbox.payment-successfull'),\n          detail: this.translate.instant('cashbox.cc-form.successful.info')\n        });\n      },\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n      },\n      onError: err => {\n        console.log('OnError', err);\n      },\n      onClick: (data, actions) => {\n        console.log('onClick', data, actions);\n      }\n    };\n  }\n}\nPaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.StripeService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.TranslateService), i0.ɵɵdirectiveInject(i6.GeneralService), i0.ɵɵdirectiveInject(i7.ActivatedRoute));\n};\nPaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentComponent,\n  selectors: [[\"jhi-payment\"]],\n  viewQuery: function PaymentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(StripeIbanComponent, 5);\n      i0.ɵɵviewQuery(StripeCardComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iban = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.card = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    type: \"type\",\n    id: \"id\"\n  },\n  outputs: {\n    successEvent: \"successEvent\"\n  },\n  features: [i0.ɵɵProvidersFeature([MessageService]), i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"jhiTranslate\", \"payment.all-paid\"], [1, \"box_white\"], [\"color\", \"secondary\", \"section-content-header\", \"\", 1, \"card-toolbar\"], [3, \"production\", \"transactionId\", \"onLoaded\", \"onOpened\", \"onCancelled\", \"onError\"], [1, \"container-fluid\"], [1, \"row\", \"logo_payment\"], [1, \"col-md-3\"], [\"src\", \"../../../content/images/payment_logo/ssl.png\"], [1, \"col-md-4\"], [\"src\", \"../../../content/images/payment_logo/postfinance.jpg\"], [\"src\", \"../../../content/images/payment_logo/visamaster.png\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵtext(1, \"\\n\");\n      i0.ɵɵtemplate(2, PaymentComponent_ng_container_2_Template, 8, 0, \"ng-container\", 0);\n      i0.ɵɵtext(3, \"\\n\");\n      i0.ɵɵtemplate(4, PaymentComponent_ng_container_4_Template, 39, 8, \"ng-container\", 0);\n      i0.ɵɵtext(5, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.value <= 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.value > 0);\n    }\n  },\n  dependencies: [i8.NgIf, i9.Toast, i10.TranslateDirective, i11.MatToolbar, i12.ReactFeelingFormComponent, i8.AsyncPipe, i13.TransactionIdPipe],\n  styles: [\".border[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  width: 280px;\\n  float: left;\\n  margin: 10px;\\n}\\n\\n.clear[_ngcontent-%COMP%] {\\n  clear: both;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: blue;\\n  color: white;\\n  font-weight: bold;\\n}\\n\\n.big[_ngcontent-%COMP%] {\\n  font-size: larger;\\n}\\n\\n.padding[_ngcontent-%COMP%] {\\n  padding: 4px;\\n}\\n\\n.card-toolbar[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  margin-top: 10px;\\n}\\n\\n.card-form[_ngcontent-%COMP%] {\\n  margin: 15px;\\n  float: left;\\n}\\n\\n.card-frame[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  padding: 5px;\\n  border: 1px solid black;\\n  width: 400px;\\n}\\n\\n.pay-button[_ngcontent-%COMP%] {\\n  width: 100px;\\n}\\n\\n.paypal-buttons[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  position: relative;\\n  z-index: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvdmlld3MvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtBQUNKOztBQUVFO0VBQ0Usc0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFRTtFQUNFLGlCQUFBO0FBQ0o7O0FBRUU7RUFDRSxZQUFBO0FBQ0o7O0FBRUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUU7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUVFO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5ib3JkZXIge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICB9XG4gIFxuICAuY2FyZCB7XG4gICAgd2lkdGg6IDI4MHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbjogMTBweDtcbiAgfVxuICBcbiAgLmNsZWFye1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG4gIFxuICAuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAuYmlnIHtcbiAgICBmb250LXNpemU6IGxhcmdlcjtcbiAgfVxuICBcbiAgLnBhZGRpbmcge1xuICAgIHBhZGRpbmc6IDRweDtcbiAgfVxuICBcbiAgLmNhcmQtdG9vbGJhciB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4OyBcbiAgfVxuICBcbiAgLmNhcmQtZm9ybSB7XG4gICAgbWFyZ2luOiAxNXB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gIFxuICAuY2FyZC1mcmFtZSB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICB3aWR0aDogNDAwcHg7IFxuICB9XG4gIFxuICAucGF5LWJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMHB4O1xuICB9XG4gIFxuICAucGF5cGFsLWJ1dHRvbnMge1xuICAgIG1hcmdpbjogMTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMDtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","StripeIbanComponent","StripeCardComponent","switchMap","MessageService","Validators","i0","PaymentComponent","constructor","fb","messageService","stripeService","http","translate","generalService","route","style","base","iconColor","color","fontWeight","fontFamily","fontSize","locale","ngOnChanges","changes","undefined","currentValue","value","initConfig","ngOnInit","host","window","location","startsWith","production","ccGroup","group","name","required","queryParams","subscribe","params","datatransTrxId","getStatusFromTransactionIdFromDatatrans","res","z","body","status","successEvent","emit","onLoaded","e","console","log","onOpened","onCancelled","onError","pay","valid","createPaymentIntent","pipe","pi","confirmCardPayment","client_secret","payment_method","card","element","billing_details","get","result","error","add","severity","summary","message","detail","paymentIntent","instant","reset","clear","amount","post","payPalConfig","currency","clientId","createOrderOnClient","data","intent","purchase_units","currency_code","breakdown","item_total","advanced","commit","label","layout","onApprove","actions","order","then","details","onClientAuthorization","onCancel","err","onClick","selectors","viewQuery","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/payment/payment.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/payment/payment.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { StripeIbanComponent, StripeCardComponent, StripeService } from 'ngx-stripe';\nimport { StripeElementsOptions, StripeIbanElementOptions, PaymentIntent, StripeCardElementOptions } from '@stripe/stripe-js';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { IPayPalConfig, ICreateOrderRequest } from 'ngx-paypal';\nimport { GeneralService } from 'app/general.service';\nimport { ActivatedRoute } from '@angular/router';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'jhi-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss'],\n  providers: [MessageService],\n})\nexport class PaymentComponent implements OnInit, OnChanges {\n  @ViewChild(StripeIbanComponent) iban!: StripeIbanComponent;\n  @ViewChild(StripeCardComponent, { static: false }) card!: StripeCardComponent;\n\n  @Input() value = 0;\n  @Output() successEvent = new EventEmitter<any>();\n  @Input() type = '';\n  @Input() id = -1;\n\n  transactionId: string;\n  production: boolean;\n\n  public payPalConfig?: IPayPalConfig;\n\n  ibanOptions: StripeIbanElementOptions = {\n    style: {\n      base: {\n        iconColor: '#666EE8',\n        color: '#31325F',\n        fontWeight: '300',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSize: '18px',\n        '::placeholder': {\n          color: '#CFD7E0',\n        },\n      },\n    },\n  };\n\n  cardOptions: StripeCardElementOptions = {\n    style: {\n      base: {\n        iconColor: '#8118de',\n        color: '#000',\n        fontWeight: '300',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSize: '18px',\n      },\n    },\n  };\n\n  elementsOptions: StripeElementsOptions = {\n    locale: 'auto',\n  };\n\n  ccGroup!: UntypedFormGroup;\n\n  datatransTrxId: string;\n\n  constructor(\n    private fb: UntypedFormBuilder,\n    private messageService: MessageService,\n    private stripeService: StripeService,\n    private http: HttpClient,\n    private translate: TranslateService,\n    private generalService: GeneralService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['value'] !== undefined && changes['value'].currentValue !== undefined) {\n      this.value = changes['value'].currentValue;\n      this.initConfig();\n    }\n  }\n\n  ngOnInit(): void {\n    const host = window.location.host;\n    if (host.startsWith('dev.')) {\n      this.production = false;\n    } else {\n      this.production = true;\n    }\n\n    this.ccGroup = this.fb.group({\n      name: ['', [Validators.required]],\n    });\n    this.route.queryParams.subscribe(params => {\n      this.datatransTrxId = params['datatransTrxId'];\n      if (this.datatransTrxId) {\n        this.generalService.getStatusFromTransactionIdFromDatatrans(this.datatransTrxId).subscribe(res => {\n          const z = res.body;\n          if (z.status === 'authorized' || z.status === 'settled') {\n            this.successEvent.emit(z);\n          }\n        });\n      }\n    });\n  }\n\n  onLoaded(e: any): void {\n    console.log('OnLoaded');\n  }\n  onOpened(e: any): void {\n    console.log('OnOpened');\n  }\n  onCancelled(e: any): void {\n    console.log('OnCancelled');\n  }\n  onError(e: any): void {\n    console.log('OnError');\n  }\n\n  pay(): void {\n    if (this.ccGroup.valid) {\n      this.createPaymentIntent(this.value * 100)\n        .pipe(\n          switchMap(pi =>\n            this.stripeService.confirmCardPayment(pi.client_secret!, {\n              payment_method: {\n                card: this.card.element,\n                billing_details: {\n                  name: this.ccGroup.get('name')!.value,\n                },\n              },\n            })\n          )\n        )\n        .subscribe(result => {\n          if (result.error) {\n            this.messageService.add({ severity: 'error', summary: result.error.message, detail: result.error.message });\n          } else {\n            // The payment has been processed!\n            if (result.paymentIntent!.status === 'succeeded') {\n              this.messageService.add({\n                severity: 'success',\n                summary: this.translate.instant('cashbox.payment-successfull'),\n                detail: this.translate.instant('cashbox.cc-form.successful.info'),\n              });\n              this.ccGroup.reset();\n              this.card.element.clear();\n              this.successEvent.emit(result);\n            }\n          }\n        });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: this.translate.instant('cashbox.cc-form.error'),\n        detail: this.translate.instant('cashbox.cc-form.error.info'),\n      });\n    }\n  }\n\n  createPaymentIntent(amount: number): Observable<PaymentIntent> {\n    return this.http.post<PaymentIntent>(`https://stripe.createyourevent.org/api/create-payment-intent`, { amount: amount });\n  }\n\n  private initConfig(): void {\n    this.payPalConfig = {\n      currency: 'CHF',\n      clientId: 'AcFPWJ-j150ofAt93PIKeb5oCzEBv7dO1NKeaaX9oKsJJNLCcmuVEPIvn_UOf9HAiBPX2Xz1npanBgU7',\n      createOrderOnClient: data =>\n        <ICreateOrderRequest>{\n          intent: 'CAPTURE',\n          purchase_units: [\n            {\n              amount: {\n                currency_code: 'CHF',\n                value: '' + this.value,\n                breakdown: {\n                  item_total: {\n                    currency_code: 'CHF',\n                    value: '' + this.value,\n                  },\n                },\n              },\n            },\n          ],\n        },\n      advanced: {\n        commit: 'true',\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical',\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        actions.order.get().then((details: any) => {\n          console.log('onApprove - you can get full order details inside onApprove: ', details);\n        });\n      },\n      onClientAuthorization: data => {\n        console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n        this.successEvent.emit({ data: data });\n        this.messageService.add({\n          severity: 'success',\n          summary: this.translate.instant('cashbox.payment-successfull'),\n          detail: this.translate.instant('cashbox.cc-form.successful.info'),\n        });\n      },\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n      },\n      onError: err => {\n        console.log('OnError', err);\n      },\n      onClick: (data, actions) => {\n        console.log('onClick', data, actions);\n      },\n    };\n  }\n}\n","<p-toast></p-toast>\n<ng-container *ngIf=\"value <= 0\">\n    <div class=\"alert alert-warning\" role=\"alert\">\n        <span jhiTranslate=\"payment.all-paid\">Everything is paid for. Thank you very much for that.</span>\n      </div>\n</ng-container>\n<ng-container *ngIf=\"value > 0\">\n    <div class=\"box_white\">\n    <!--\n    <mat-toolbar color=\"secondary\" section-content-header class=\"card-toolbar\">\n        <span>Credit card terminal</span>\n    </mat-toolbar>\n    <form novalidate [formGroup]=\"ccGroup\" class=\"card-form\">\n        <div class=\"p-field p-grid\">\n            <label for=\"card\" jhiTranslate=\"billing.cc-owner\">Credit card owner</label>\n            <div class=\"p-col\">\n                <input id=\"card\" type=\"text\" formControlName=\"name\" placeholder=\"Jane Doe\">\n            </div>\n        </div>\n        <div class=\"card-frame\">\n            <div>\n                <ngx-stripe-card style=\"width: 300px\" [options]=\"cardOptions\" [elementsOptions]=\"elementsOptions\"></ngx-stripe-card>\n            </div>\n        </div>\n        <button pButton pRipple type=\"button\" label=\"{{ 'billing.pay' | translate }}\" class=\"p-button-rounded\" (click)=\"pay()\"></button>\n    </form>\n    <hr/>\n        <mat-toolbar color=\"secondary\" section-content-header class=\"card-toolbar\">\n            <span>Paypal terminal</span>\n        </mat-toolbar>\n        <div class=\"paypal-buttons\">\n            <ngx-paypal [config]=\"payPalConfig\"></ngx-paypal>\n        </div>\n        <hr/>\n      -->\n        <mat-toolbar color=\"secondary\" section-content-header class=\"card-toolbar\">\n          <span>Datatrans Terminal</span>\n        </mat-toolbar>\n        <datatrans-component [production]=\"production\" [transactionId]=\"value | transactionId: type : id | async\" (onLoaded)=\"onLoaded($event)\" (onOpened)=\"onOpened($event)\" (onCancelled)=\"onCancelled($event)\" (onError)=\"onError($event)\"></datatrans-component>\n      <hr/>\n      <div class=\"container-fluid\">\n        <div class=\"row logo_payment\">\n          <div class=\"col-md-3\">\n            <img src=\"../../../content/images/payment_logo/ssl.png\"/>\n          </div>\n          <div class=\"col-md-4\">\n            <img src=\"../../../content/images/payment_logo/postfinance.jpg\"/>\n          </div>\n          <div class=\"col-md-4\">\n            <img src=\"../../../content/images/payment_logo/visamaster.png\"/>\n          </div>\n        </div>\n      </div>\n      </div>\n</ng-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}