{"ast":null,"code":"export var HttpMethod;\n(function (HttpMethod) {\n  HttpMethod[\"Post\"] = \"POST\";\n  HttpMethod[\"Get\"] = \"GET\";\n  HttpMethod[\"Put\"] = \"PUT\";\n  HttpMethod[\"Patch\"] = \"PATCH\";\n  HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\nexport var ThreadState;\n(function (ThreadState) {\n  ThreadState[\"Runnable\"] = \"RUNNABLE\";\n  ThreadState[\"TimedWaiting\"] = \"TIMED_WAITING\";\n  ThreadState[\"Waiting\"] = \"WAITING\";\n  ThreadState[\"Blocked\"] = \"BLOCKED\";\n  ThreadState[\"New\"] = \"NEW\";\n  ThreadState[\"Terminated\"] = \"TERMINATED\";\n})(ThreadState || (ThreadState = {}));","map":{"version":3,"mappings":"AAkFA,WAAYA,UAMX;AAND,WAAYA,UAAU;EACpBA,2BAAa;EACbA,yBAAW;EACXA,yBAAW;EACXA,6BAAe;EACfA,+BAAiB;AACnB,CAAC,EANWA,UAAU,KAAVA,UAAU;AAqEtB,WAAYC,WAOX;AAPD,WAAYA,WAAW;EACrBA,oCAAqB;EACrBA,6CAA8B;EAC9BA,kCAAmB;EACnBA,kCAAmB;EACnBA,0BAAW;EACXA,wCAAyB;AAC3B,CAAC,EAPWA,WAAW,KAAXA,WAAW","names":["HttpMethod","ThreadState"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/metrics/metrics.model.ts"],"sourcesContent":["export interface Metrics {\n  jvm: { [key: string]: JvmMetrics };\n  databases: Databases;\n  'http.server.requests': HttpServerRequests;\n  cache: { [key: string]: CacheMetrics };\n  garbageCollector: GarbageCollector;\n  services: Services;\n  processMetrics: ProcessMetrics;\n}\n\nexport interface JvmMetrics {\n  committed: number;\n  max: number;\n  used: number;\n}\n\nexport interface Databases {\n  min: Value;\n  idle: Value;\n  max: Value;\n  usage: MetricsWithPercentile;\n  pending: Value;\n  active: Value;\n  acquire: MetricsWithPercentile;\n  creation: MetricsWithPercentile;\n  connections: Value;\n}\n\nexport interface Value {\n  value: number;\n}\n\nexport interface MetricsWithPercentile {\n  '0.0': number;\n  '1.0': number;\n  max: number;\n  totalTime: number;\n  mean: number;\n  '0.5': number;\n  count: number;\n  '0.99': number;\n  '0.75': number;\n  '0.95': number;\n}\n\nexport interface HttpServerRequests {\n  all: {\n    count: number;\n  };\n  percode: { [key: string]: MaxMeanCount };\n}\n\nexport interface MaxMeanCount {\n  max: number;\n  mean: number;\n  count: number;\n}\n\nexport interface CacheMetrics {\n  'cache.gets.miss': number;\n  'cache.puts': number;\n  'cache.gets.hit': number;\n  'cache.removals': number;\n  'cache.evictions': number;\n}\n\nexport interface GarbageCollector {\n  'jvm.gc.max.data.size': number;\n  'jvm.gc.pause': MetricsWithPercentile;\n  'jvm.gc.memory.promoted': number;\n  'jvm.gc.memory.allocated': number;\n  classesLoaded: number;\n  'jvm.gc.live.data.size': number;\n  classesUnloaded: number;\n}\n\nexport interface Services {\n  [key: string]: {\n    [key in HttpMethod]?: MaxMeanCount;\n  };\n}\n\nexport enum HttpMethod {\n  Post = 'POST',\n  Get = 'GET',\n  Put = 'PUT',\n  Patch = 'PATCH',\n  Delete = 'DELETE',\n}\n\nexport interface ProcessMetrics {\n  'system.cpu.usage': number;\n  'system.cpu.count': number;\n  'system.load.average.1m'?: number;\n  'process.cpu.usage': number;\n  'process.files.max'?: number;\n  'process.files.open'?: number;\n  'process.start.time': number;\n  'process.uptime': number;\n}\n\nexport interface ThreadDump {\n  threads: Thread[];\n}\n\nexport interface Thread {\n  threadName: string;\n  threadId: number;\n  blockedTime: number;\n  blockedCount: number;\n  waitedTime: number;\n  waitedCount: number;\n  lockName: string | null;\n  lockOwnerId: number;\n  lockOwnerName: string | null;\n  daemon: boolean;\n  inNative: boolean;\n  suspended: boolean;\n  threadState: ThreadState;\n  priority: number;\n  stackTrace: StackTrace[];\n  lockedMonitors: LockedMonitor[];\n  lockedSynchronizers: string[];\n  lockInfo: LockInfo | null;\n  // custom field for showing-hiding thread dump\n  showThreadDump?: boolean;\n}\n\nexport interface LockInfo {\n  className: string;\n  identityHashCode: number;\n}\n\nexport interface LockedMonitor {\n  className: string;\n  identityHashCode: number;\n  lockedStackDepth: number;\n  lockedStackFrame: StackTrace;\n}\n\nexport interface StackTrace {\n  classLoaderName: string | null;\n  moduleName: string | null;\n  moduleVersion: string | null;\n  methodName: string;\n  fileName: string;\n  lineNumber: number;\n  className: string;\n  nativeMethod: boolean;\n}\n\nexport enum ThreadState {\n  Runnable = 'RUNNABLE',\n  TimedWaiting = 'TIMED_WAITING',\n  Waiting = 'WAITING',\n  Blocked = 'BLOCKED',\n  New = 'NEW',\n  Terminated = 'TERMINATED',\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}