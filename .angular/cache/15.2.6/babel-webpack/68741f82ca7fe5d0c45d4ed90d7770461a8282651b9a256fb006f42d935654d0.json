{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ValidatorSmallerThen {\n  constructor() {}\n  checkMaximumPlaces() {\n    return control => {\n      const min = Number(control.parent.get('minPlacenumber').value);\n      const max = Number(control.parent.get('placenumber').value);\n      if (min && max) {\n        if (min <= max) {\n          return null;\n        } else {\n          return {\n            'biggerThen': true\n          };\n        }\n      }\n    };\n  }\n}\nValidatorSmallerThen.ɵfac = function ValidatorSmallerThen_Factory(t) {\n  return new (t || ValidatorSmallerThen)();\n};\nValidatorSmallerThen.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ValidatorSmallerThen,\n  factory: ValidatorSmallerThen.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,oBAAoB;EAEjCC,eAAgB;EAGhBC,kBAAkB;IAEd,OAAQC,OAAwB,IAA6B;MAC3D,MAAMC,GAAG,GAAYC,MAAM,CAACF,OAAO,CAACG,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC;MACvE,MAAMC,GAAG,GAAYJ,MAAM,CAACF,OAAO,CAACG,MAAM,CAACC,GAAG,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC;MACpE,IAAGJ,GAAG,IAAIK,GAAG,EAAC;QACZ,IAAGL,GAAG,IAAIK,GAAG,EAAG;UACR,OAAO,IAAI;SAClB,MAAM;UACH,OAAO;YAAE,YAAY,EAAE;UAAI,CAAE;;;IAGnC,CAAC;EACH;;;mBAlBST,oBAAoB;AAAA;;SAApBA,oBAAoB;EAAAU,SAApBV,oBAAoB;EAAAW,YAFnB;AAAM","names":["ValidatorSmallerThen","constructor","checkMaximumPlaces","control","min","Number","parent","get","value","max","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/validators/ValidatorSmallerThen.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl,  ValidationErrors, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorSmallerThen{\n\nconstructor() { }\n\n\ncheckMaximumPlaces(): ValidatorFn {\n\n    return (control: AbstractControl): ValidationErrors | null => {\n      const min : number = Number(control.parent.get('minPlacenumber').value);\n      const max : number = Number(control.parent.get('placenumber').value);\n      if(min && max){\n        if(min <= max ) {\n                return null;\n        } else {\n            return { 'biggerThen': true };\n        }\n      }\n      }\n    }\n  }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}