{"ast":null,"code":"import { isPresent } from 'app/core/util/operators';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { getEventDetailsIdentifier } from '../event-details.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class EventDetailsService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/event-details');\n  }\n  create(eventDetails) {\n    return this.http.post(this.resourceUrl, eventDetails, {\n      observe: 'response'\n    });\n  }\n  update(eventDetails) {\n    return this.http.put(`${this.resourceUrl}/${getEventDetailsIdentifier(eventDetails)}`, eventDetails, {\n      observe: 'response'\n    });\n  }\n  partialUpdate(eventDetails) {\n    return this.http.patch(`${this.resourceUrl}/${getEventDetailsIdentifier(eventDetails)}`, eventDetails, {\n      observe: 'response'\n    });\n  }\n  find(id) {\n    return this.http.get(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  query(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl, {\n      params: options,\n      observe: 'response'\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.resourceUrl}/${id}`, {\n      observe: 'response'\n    });\n  }\n  addEventDetailsToCollectionIfMissing(eventDetailsCollection, ...eventDetailsToCheck) {\n    const eventDetails = eventDetailsToCheck.filter(isPresent);\n    if (eventDetails.length > 0) {\n      const eventDetailsCollectionIdentifiers = eventDetailsCollection.map(eventDetailsItem => getEventDetailsIdentifier(eventDetailsItem));\n      const eventDetailsToAdd = eventDetails.filter(eventDetailsItem => {\n        const eventDetailsIdentifier = getEventDetailsIdentifier(eventDetailsItem);\n        if (eventDetailsIdentifier == null || eventDetailsCollectionIdentifiers.includes(eventDetailsIdentifier)) {\n          return false;\n        }\n        eventDetailsCollectionIdentifiers.push(eventDetailsIdentifier);\n        return true;\n      });\n      return [...eventDetailsToAdd, ...eventDetailsCollection];\n    }\n    return eventDetailsCollection;\n  }\n}\nEventDetailsService.ɵfac = function EventDetailsService_Factory(t) {\n  return new (t || EventDetailsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nEventDetailsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventDetailsService,\n  factory: EventDetailsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAwBC,yBAAyB,QAAQ,wBAAwB;;;;AAMjF,OAAM,MAAOC,mBAAmB;EAG9BC,YAAsBC,IAAgB,EAAYC,wBAAkD;IAA9E,SAAI,GAAJD,IAAI;IAAwB,6BAAwB,GAAxBC,wBAAwB;IAFhE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,mBAAmB,CAAC;EAEc;EAEvGC,MAAM,CAACC,YAA2B;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,IAAI,CAACC,WAAW,EAAEF,YAAY,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/F;EAEAC,MAAM,CAACJ,YAA2B;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAgB,GAAG,IAAI,CAACH,WAAW,IAAIT,yBAAyB,CAACO,YAAY,CAAW,EAAE,EAAEA,YAAY,EAAE;MAC5HG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAG,aAAa,CAACN,YAA2B;IACvC,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAAgB,GAAG,IAAI,CAACL,WAAW,IAAIT,yBAAyB,CAACO,YAAY,CAAW,EAAE,EAAEA,YAAY,EAAE;MAC9HG,OAAO,EAAE;KACV,CAAC;EACJ;EAEAK,IAAI,CAACC,EAAU;IACb,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAgB,GAAG,IAAI,CAACR,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC3F;EAEAQ,KAAK,CAACC,GAAS;IACb,MAAMC,OAAO,GAAGrB,mBAAmB,CAACoB,GAAG,CAAC;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAkB,IAAI,CAACR,WAAW,EAAE;MAAEY,MAAM,EAAED,OAAO;MAAEV,OAAO,EAAE;IAAU,CAAE,CAAC;EACnG;EAEAY,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAACb,WAAW,IAAIO,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/E;EAEAa,oCAAoC,CAClCC,sBAAuC,EACvC,GAAGC,mBAAyD;IAE5D,MAAMlB,YAAY,GAAoBkB,mBAAmB,CAACC,MAAM,CAAC5B,SAAS,CAAC;IAC3E,IAAIS,YAAY,CAACoB,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,iCAAiC,GAAGJ,sBAAsB,CAACK,GAAG,CAClEC,gBAAgB,IAAI9B,yBAAyB,CAAC8B,gBAAgB,CAAE,CACjE;MACD,MAAMC,iBAAiB,GAAGxB,YAAY,CAACmB,MAAM,CAACI,gBAAgB,IAAG;QAC/D,MAAME,sBAAsB,GAAGhC,yBAAyB,CAAC8B,gBAAgB,CAAC;QAC1E,IAAIE,sBAAsB,IAAI,IAAI,IAAIJ,iCAAiC,CAACK,QAAQ,CAACD,sBAAsB,CAAC,EAAE;UACxG,OAAO,KAAK;;QAEdJ,iCAAiC,CAACM,IAAI,CAACF,sBAAsB,CAAC;QAC9D,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,CAAC,GAAGD,iBAAiB,EAAE,GAAGP,sBAAsB,CAAC;;IAE1D,OAAOA,sBAAsB;EAC/B;;;mBAtDWvB,mBAAmB;AAAA;;SAAnBA,mBAAmB;EAAAkC,SAAnBlC,mBAAmB;EAAAmC,YADN;AAAM","names":["isPresent","createRequestOption","getEventDetailsIdentifier","EventDetailsService","constructor","http","applicationConfigService","getEndpointFor","create","eventDetails","post","resourceUrl","observe","update","put","partialUpdate","patch","find","id","get","query","req","options","params","delete","addEventDetailsToCollectionIfMissing","eventDetailsCollection","eventDetailsToCheck","filter","length","eventDetailsCollectionIdentifiers","map","eventDetailsItem","eventDetailsToAdd","eventDetailsIdentifier","includes","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/entities/event-details/service/event-details.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IEventDetails, getEventDetailsIdentifier } from '../event-details.model';\n\nexport type EntityResponseType = HttpResponse<IEventDetails>;\nexport type EntityArrayResponseType = HttpResponse<IEventDetails[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class EventDetailsService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/event-details');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(eventDetails: IEventDetails): Observable<EntityResponseType> {\n    return this.http.post<IEventDetails>(this.resourceUrl, eventDetails, { observe: 'response' });\n  }\n\n  update(eventDetails: IEventDetails): Observable<EntityResponseType> {\n    return this.http.put<IEventDetails>(`${this.resourceUrl}/${getEventDetailsIdentifier(eventDetails) as number}`, eventDetails, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(eventDetails: IEventDetails): Observable<EntityResponseType> {\n    return this.http.patch<IEventDetails>(`${this.resourceUrl}/${getEventDetailsIdentifier(eventDetails) as number}`, eventDetails, {\n      observe: 'response',\n    });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IEventDetails>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IEventDetails[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addEventDetailsToCollectionIfMissing(\n    eventDetailsCollection: IEventDetails[],\n    ...eventDetailsToCheck: (IEventDetails | null | undefined)[]\n  ): IEventDetails[] {\n    const eventDetails: IEventDetails[] = eventDetailsToCheck.filter(isPresent);\n    if (eventDetails.length > 0) {\n      const eventDetailsCollectionIdentifiers = eventDetailsCollection.map(\n        eventDetailsItem => getEventDetailsIdentifier(eventDetailsItem)!\n      );\n      const eventDetailsToAdd = eventDetails.filter(eventDetailsItem => {\n        const eventDetailsIdentifier = getEventDetailsIdentifier(eventDetailsItem);\n        if (eventDetailsIdentifier == null || eventDetailsCollectionIdentifiers.includes(eventDetailsIdentifier)) {\n          return false;\n        }\n        eventDetailsCollectionIdentifiers.push(eventDetailsIdentifier);\n        return true;\n      });\n      return [...eventDetailsToAdd, ...eventDetailsCollection];\n    }\n    return eventDetailsCollection;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}