{"ast":null,"code":"import { Subject, Observable, merge, ReplaySubject, combineLatest, fromEvent } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport autoScroll from '@mattlewis92/dom-autoscroller';\nimport { Injectable, Directive, ElementRef, Input, Renderer2, Output, EventEmitter, NgZone, Inject, ViewContainerRef, Optional, NgModule, defineInjectable } from '@angular/core';\nimport { map, mergeMap, takeUntil, take, takeLast, pairwise, share, filter, count, startWith, distinctUntilChanged } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DraggableHelper {\n  constructor() {\n    this.currentDrag = new Subject();\n  }\n}\nDraggableHelper.ɵfac = function DraggableHelper_Factory(t) {\n  return new (t || DraggableHelper)();\n};\nDraggableHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DraggableHelper,\n  factory: DraggableHelper.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\nDraggableHelper.ngInjectableDef = defineInjectable({\n  factory: function DraggableHelper_Factory() {\n    return new DraggableHelper();\n  },\n  token: DraggableHelper,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\n * ```html\n * <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\n * <div mwlDraggable>Drag me!</div>\n * </div>\n * ```\n */\nclass DraggableScrollContainerDirective {\n  /**\n   * @hidden\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    /**\n     * Trigger the DragStart after a long touch in scrollable container when true\n     * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n     */\n    this.activeLongPressDrag = false;\n    /**\n     * Configuration of a long touch\n     * Duration in ms of a long touch before activating DragStart\n     * Delta of the\n     * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n     */\n    this.longPressConfig = {\n      duration: 300,\n      delta: 30\n    };\n  }\n}\nDraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) {\n  return new (t || DraggableScrollContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nDraggableScrollContainerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableScrollContainerDirective,\n  selectors: [[\"\", \"mwlDraggableScrollContainer\", \"\"]],\n  inputs: {\n    activeLongPressDrag: \"activeLongPressDrag\",\n    longPressConfig: \"longPressConfig\"\n  }\n});\n/** @nocollapse */\nDraggableScrollContainerDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\nDraggableScrollContainerDirective.propDecorators = {\n  activeLongPressDrag: [{\n    type: Input\n  }],\n  longPressConfig: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggableScrollContainer]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    activeLongPressDrag: [{\n      type: Input\n    }],\n    longPressConfig: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToAdd\n * @return {?}\n */\nfunction addClass(renderer, element, classToAdd) {\n  if (classToAdd) {\n    classToAdd.split(' ').forEach(\n    /**\n    * @param {?} className\n    * @return {?}\n    */\n    className => renderer.addClass(element.nativeElement, className));\n  }\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToRemove\n * @return {?}\n */\nfunction removeClass(renderer, element, classToRemove) {\n  if (classToRemove) {\n    classToRemove.split(' ').forEach(\n    /**\n    * @param {?} className\n    * @return {?}\n    */\n    className => renderer.removeClass(element.nativeElement, className));\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DraggableDirective {\n  /**\n   * @hidden\n   * @param {?} element\n   * @param {?} renderer\n   * @param {?} draggableHelper\n   * @param {?} zone\n   * @param {?} vcr\n   * @param {?} scrollContainer\n   * @param {?} document\n   */\n  constructor(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {\n    this.element = element;\n    this.renderer = renderer;\n    this.draggableHelper = draggableHelper;\n    this.zone = zone;\n    this.vcr = vcr;\n    this.scrollContainer = scrollContainer;\n    this.document = document;\n    /**\n     * The axis along which the element is draggable\n     */\n    this.dragAxis = {\n      x: true,\n      y: true\n    };\n    /**\n     * Snap all drags to an x / y grid\n     */\n    this.dragSnapGrid = {};\n    /**\n     * Show a ghost element that shows the drag when dragging\n     */\n    this.ghostDragEnabled = true;\n    /**\n     * Show the original element when ghostDragEnabled is true\n     */\n    this.showOriginalElementWhileDragging = false;\n    /**\n     * The cursor to use when hovering over a draggable element\n     */\n    this.dragCursor = '';\n    /*\n       * Options used to control the behaviour of auto scrolling: https://www.npmjs.com/package/dom-autoscroller\n       */\n    this.autoScroll = {\n      margin: 20\n    };\n    /**\n     * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n     */\n    this.dragPointerDown = new EventEmitter();\n    /**\n     * Called when the element has started to be dragged.\n     * Only called after at least one mouse or touch move event.\n     * If you call $event.cancelDrag$.emit() it will cancel the current drag\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * Called after the ghost element has been created\n     */\n    this.ghostElementCreated = new EventEmitter();\n    /**\n     * Called when the element is being dragged\n     */\n    this.dragging = new EventEmitter();\n    /**\n     * Called after the element is dragged\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.pointerDown$ = new Subject();\n    /**\n     * @hidden\n     */\n    this.pointerMove$ = new Subject();\n    /**\n     * @hidden\n     */\n    this.pointerUp$ = new Subject();\n    this.eventListenerSubscriptions = {};\n    this.destroy$ = new Subject();\n    this.timeLongPress = {\n      timerBegin: 0,\n      timerEnd: 0\n    };\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.checkEventListeners();\n    /** @type {?} */\n    const pointerDragged$ = this.pointerDown$.pipe(filter(\n    /**\n    * @return {?}\n    */\n    () => this.canDrag()), mergeMap(\n    /**\n    * @param {?} pointerDownEvent\n    * @return {?}\n    */\n    pointerDownEvent => {\n      // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n      // stop mouse events propagating up the chain\n      if (pointerDownEvent.event.stopPropagation && !this.scrollContainer) {\n        pointerDownEvent.event.stopPropagation();\n      }\n      // hack to prevent text getting selected in safari while dragging\n      /** @type {?} */\n      const globalDragStyle = this.renderer.createElement('style');\n      this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n      this.renderer.appendChild(globalDragStyle, this.renderer.createText(`\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        `));\n      requestAnimationFrame(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.document.head.appendChild(globalDragStyle);\n      });\n      /** @type {?} */\n      const startScrollPosition = this.getScrollPosition();\n      /** @type {?} */\n      const scrollContainerScroll$ = new Observable(\n      /**\n      * @param {?} observer\n      * @return {?}\n      */\n      observer => {\n        /** @type {?} */\n        const scrollContainer = this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : 'window';\n        return this.renderer.listen(scrollContainer, 'scroll',\n        /**\n        * @param {?} e\n        * @return {?}\n        */\n        e => observer.next(e));\n      }).pipe(startWith(startScrollPosition), map(\n      /**\n      * @return {?}\n      */\n      () => this.getScrollPosition()));\n      /** @type {?} */\n      const currentDrag$ = new Subject();\n      /** @type {?} */\n      const cancelDrag$ = new ReplaySubject();\n      this.zone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.dragPointerDown.next({\n          x: 0,\n          y: 0\n        });\n      });\n      /** @type {?} */\n      const dragComplete$ = merge(this.pointerUp$, this.pointerDown$, cancelDrag$, this.destroy$).pipe(share());\n      /** @type {?} */\n      const pointerMove = combineLatest([this.pointerMove$, scrollContainerScroll$]).pipe(map(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ([pointerMoveEvent, scroll]) => {\n        return {\n          currentDrag$,\n          transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n          transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n          clientX: pointerMoveEvent.clientX,\n          clientY: pointerMoveEvent.clientY,\n          scrollLeft: scroll.left,\n          scrollTop: scroll.top,\n          target: pointerMoveEvent.event.target\n        };\n      }), map(\n      /**\n      * @param {?} moveData\n      * @return {?}\n      */\n      moveData => {\n        if (this.dragSnapGrid.x) {\n          moveData.transformX = Math.round(moveData.transformX / this.dragSnapGrid.x) * this.dragSnapGrid.x;\n        }\n        if (this.dragSnapGrid.y) {\n          moveData.transformY = Math.round(moveData.transformY / this.dragSnapGrid.y) * this.dragSnapGrid.y;\n        }\n        return moveData;\n      }), map(\n      /**\n      * @param {?} moveData\n      * @return {?}\n      */\n      moveData => {\n        if (!this.dragAxis.x) {\n          moveData.transformX = 0;\n        }\n        if (!this.dragAxis.y) {\n          moveData.transformY = 0;\n        }\n        return moveData;\n      }), map(\n      /**\n      * @param {?} moveData\n      * @return {?}\n      */\n      moveData => {\n        /** @type {?} */\n        const scrollX = moveData.scrollLeft - startScrollPosition.left;\n        /** @type {?} */\n        const scrollY = moveData.scrollTop - startScrollPosition.top;\n        return Object.assign({}, moveData, {\n          x: moveData.transformX + scrollX,\n          y: moveData.transformY + scrollY\n        });\n      }), filter(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ({\n        x,\n        y,\n        transformX,\n        transformY\n      }) => !this.validateDrag || this.validateDrag({\n        x,\n        y,\n        transform: {\n          x: transformX,\n          y: transformY\n        }\n      })), takeUntil(dragComplete$), share());\n      /** @type {?} */\n      const dragStarted$ = pointerMove.pipe(take(1), share());\n      /** @type {?} */\n      const dragEnded$ = pointerMove.pipe(takeLast(1), share());\n      dragStarted$.subscribe(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ({\n        clientX,\n        clientY,\n        x,\n        y\n      }) => {\n        this.zone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dragStart.next({\n            cancelDrag$\n          });\n        });\n        this.scroller = autoScroll([this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : this.document.defaultView], Object.assign({}, this.autoScroll, {\n          /**\n          * @return {?}\n          */\n          autoScroll() {\n            return true;\n          }\n        }));\n        addClass(this.renderer, this.element, this.dragActiveClass);\n        if (this.ghostDragEnabled) {\n          /** @type {?} */\n          const rect = this.element.nativeElement.getBoundingClientRect();\n          /** @type {?} */\n          const clone = /** @type {?} */this.element.nativeElement.cloneNode(true);\n          if (!this.showOriginalElementWhileDragging) {\n            this.renderer.setStyle(this.element.nativeElement, 'visibility', 'hidden');\n          }\n          if (this.ghostElementAppendTo) {\n            this.ghostElementAppendTo.appendChild(clone);\n          } else {\n            /** @type {?} */this.element.nativeElement.parentNode.insertBefore(clone, this.element.nativeElement.nextSibling);\n          }\n          this.ghostElement = clone;\n          this.document.body.style.cursor = this.dragCursor;\n          this.setElementStyles(clone, {\n            position: 'fixed',\n            top: `${rect.top}px`,\n            left: `${rect.left}px`,\n            width: `${rect.width}px`,\n            height: `${rect.height}px`,\n            cursor: this.dragCursor,\n            margin: '0',\n            willChange: 'transform',\n            pointerEvents: 'none'\n          });\n          if (this.ghostElementTemplate) {\n            /** @type {?} */\n            const viewRef = this.vcr.createEmbeddedView(this.ghostElementTemplate);\n            clone.innerHTML = '';\n            viewRef.rootNodes.filter(\n            /**\n            * @param {?} node\n            * @return {?}\n            */\n            node => node instanceof Node).forEach(\n            /**\n            * @param {?} node\n            * @return {?}\n            */\n            node => {\n              clone.appendChild(node);\n            });\n            dragEnded$.subscribe(\n            /**\n            * @return {?}\n            */\n            () => {\n              this.vcr.remove(this.vcr.indexOf(viewRef));\n            });\n          }\n          this.zone.run(\n          /**\n          * @return {?}\n          */\n          () => {\n            this.ghostElementCreated.emit({\n              clientX: clientX - x,\n              clientY: clientY - y,\n              element: clone\n            });\n          });\n          dragEnded$.subscribe(\n          /**\n          * @return {?}\n          */\n          () => {\n            /** @type {?} */clone.parentElement.removeChild(clone);\n            this.ghostElement = null;\n            this.renderer.setStyle(this.element.nativeElement, 'visibility', '');\n          });\n        }\n        this.draggableHelper.currentDrag.next(currentDrag$);\n      });\n      dragEnded$.pipe(mergeMap(\n      /**\n      * @param {?} dragEndData\n      * @return {?}\n      */\n      dragEndData => {\n        /** @type {?} */\n        const dragEndData$ = cancelDrag$.pipe(count(), take(1), map(\n        /**\n        * @param {?} calledCount\n        * @return {?}\n        */\n        calledCount => Object.assign({}, dragEndData, {\n          dragCancelled: calledCount > 0\n        })));\n        cancelDrag$.complete();\n        return dragEndData$;\n      })).subscribe(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ({\n        x,\n        y,\n        dragCancelled\n      }) => {\n        this.scroller.destroy();\n        this.zone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dragEnd.next({\n            x,\n            y,\n            dragCancelled\n          });\n        });\n        removeClass(this.renderer, this.element, this.dragActiveClass);\n        currentDrag$.complete();\n      });\n      merge(dragComplete$, dragEnded$).pipe(take(1)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        requestAnimationFrame(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.document.head.removeChild(globalDragStyle);\n        });\n      });\n      return pointerMove;\n    }), share());\n    merge(pointerDragged$.pipe(take(1), map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    value => [, value])), pointerDragged$.pipe(pairwise())).pipe(filter(\n    /**\n    * @param {?} __0\n    * @return {?}\n    */\n    ([previous, next]) => {\n      if (!previous) {\n        return true;\n      }\n      return previous.x !== next.x || previous.y !== next.y;\n    }), map(\n    /**\n    * @param {?} __0\n    * @return {?}\n    */\n    ([previous, next]) => next)).subscribe(\n    /**\n    * @param {?} __0\n    * @return {?}\n    */\n    ({\n      x,\n      y,\n      currentDrag$,\n      clientX,\n      clientY,\n      transformX,\n      transformY,\n      target\n    }) => {\n      this.zone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.dragging.next({\n          x,\n          y\n        });\n      });\n      requestAnimationFrame(\n      /**\n      * @return {?}\n      */\n      () => {\n        if (this.ghostElement) {\n          /** @type {?} */\n          const transform = `translate3d(${transformX}px, ${transformY}px, 0px)`;\n          this.setElementStyles(this.ghostElement, {\n            transform,\n            '-webkit-transform': transform,\n            '-ms-transform': transform,\n            '-moz-transform': transform,\n            '-o-transform': transform\n          });\n        }\n      });\n      currentDrag$.next({\n        clientX,\n        clientY,\n        dropData: this.dropData,\n        target\n      });\n    });\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    if (changes.dragAxis) {\n      this.checkEventListeners();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.unsubscribeEventListeners();\n    this.pointerDown$.complete();\n    this.pointerMove$.complete();\n    this.pointerUp$.complete();\n    this.destroy$.next();\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  checkEventListeners() {\n    /** @type {?} */\n    const canDrag = this.canDrag();\n    /** @type {?} */\n    const hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(this.element.nativeElement, 'mousedown',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => {\n          this.onMouseDown(event);\n        });\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen('document', 'mouseup',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => {\n          this.onMouseUp(event);\n        });\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(this.element.nativeElement, 'touchstart',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => {\n          this.onTouchStart(event);\n        });\n        this.eventListenerSubscriptions.touchend = this.renderer.listen('document', 'touchend',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => {\n          this.onTouchEnd(event);\n        });\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen('document', 'touchcancel',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => {\n          this.onTouchEnd(event);\n        });\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(this.element.nativeElement, 'mouseenter',\n        /**\n        * @return {?}\n        */\n        () => {\n          this.onMouseEnter();\n        });\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(this.element.nativeElement, 'mouseleave',\n        /**\n        * @return {?}\n        */\n        () => {\n          this.onMouseLeave();\n        });\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @return {?}\n   */\n  onMouseDown(event) {\n    if (event.button === 0) {\n      if (!this.eventListenerSubscriptions.mousemove) {\n        this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove',\n        /**\n        * @param {?} mouseMoveEvent\n        * @return {?}\n        */\n        mouseMoveEvent => {\n          this.pointerMove$.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        });\n      }\n      this.pointerDown$.next({\n        event,\n        clientX: event.clientX,\n        clientY: event.clientY\n      });\n    }\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @return {?}\n   */\n  onMouseUp(event) {\n    if (event.button === 0) {\n      if (this.eventListenerSubscriptions.mousemove) {\n        this.eventListenerSubscriptions.mousemove();\n        delete this.eventListenerSubscriptions.mousemove;\n      }\n      this.pointerUp$.next({\n        event,\n        clientX: event.clientX,\n        clientY: event.clientY\n      });\n    }\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @return {?}\n   */\n  onTouchStart(event) {\n    /** @type {?} */\n    let startScrollPosition;\n    /** @type {?} */\n    let isDragActivated;\n    /** @type {?} */\n    let hasContainerScrollbar;\n    if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {\n      this.timeLongPress.timerBegin = Date.now();\n      isDragActivated = false;\n      hasContainerScrollbar = this.hasScrollbar();\n      startScrollPosition = this.getScrollPosition();\n    }\n    if (!this.eventListenerSubscriptions.touchmove) {\n      /** @type {?} */\n      const contextMenuListener = fromEvent(this.document, 'contextmenu').subscribe(\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      e => {\n        e.preventDefault();\n      });\n      /** @type {?} */\n      const touchMoveListener = fromEvent(this.document, 'touchmove', {\n        passive: false\n      }).subscribe(\n      /**\n      * @param {?} touchMoveEvent\n      * @return {?}\n      */\n      touchMoveEvent => {\n        if ((this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) && !isDragActivated && hasContainerScrollbar) {\n          isDragActivated = this.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);\n        }\n        if ((!this.scrollContainer || !this.scrollContainer.activeLongPressDrag) && !this.touchStartLongPress || !hasContainerScrollbar || isDragActivated) {\n          touchMoveEvent.preventDefault();\n          this.pointerMove$.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      });\n      this.eventListenerSubscriptions.touchmove =\n      /**\n      * @return {?}\n      */\n      () => {\n        contextMenuListener.unsubscribe();\n        touchMoveListener.unsubscribe();\n      };\n    }\n    this.pointerDown$.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @return {?}\n   */\n  onTouchEnd(event) {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n      if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {\n        this.enableScroll();\n      }\n    }\n    this.pointerUp$.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  onMouseEnter() {\n    this.setCursor(this.dragCursor);\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  onMouseLeave() {\n    this.setCursor('');\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  canDrag() {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n  /**\n   * @private\n   * @param {?} value\n   * @return {?}\n   */\n  setCursor(value) {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  unsubscribeEventListeners() {\n    Object.keys(this.eventListenerSubscriptions).forEach(\n    /**\n    * @param {?} type\n    * @return {?}\n    */\n    type => {\n      /** @type {?} */this.eventListenerSubscriptions[type]();\n      delete /** @type {?} */this.eventListenerSubscriptions[type];\n    });\n  }\n  /**\n   * @private\n   * @param {?} element\n   * @param {?} styles\n   * @return {?}\n   */\n  setElementStyles(element, styles) {\n    Object.keys(styles).forEach(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    key => {\n      this.renderer.setStyle(element, key, styles[key]);\n    });\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  getScrollElement() {\n    if (this.scrollContainer) {\n      return this.scrollContainer.elementRef.nativeElement;\n    } else {\n      return this.document.body;\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  getScrollPosition() {\n    if (this.scrollContainer) {\n      return {\n        top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n        left: this.scrollContainer.elementRef.nativeElement.scrollLeft\n      };\n    } else {\n      return {\n        top: window.pageYOffset || this.document.documentElement.scrollTop,\n        left: window.pageXOffset || this.document.documentElement.scrollLeft\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @param {?} touchMoveEvent\n   * @param {?} startScrollPosition\n   * @return {?}\n   */\n  shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {\n    /** @type {?} */\n    const moveScrollPosition = this.getScrollPosition();\n    /** @type {?} */\n    const deltaScroll = {\n      top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n      left: Math.abs(moveScrollPosition.left - startScrollPosition.left)\n    };\n    /** @type {?} */\n    const deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;\n    /** @type {?} */\n    const deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;\n    /** @type {?} */\n    const deltaTotal = deltaX + deltaY;\n    /** @type {?} */\n    const longPressConfig = this.touchStartLongPress ? this.touchStartLongPress : /* istanbul ignore next */\n    {\n      delta: this.scrollContainer.longPressConfig.delta,\n      delay: this.scrollContainer.longPressConfig.duration\n    };\n    if (deltaTotal > longPressConfig.delta || deltaScroll.top > 0 || deltaScroll.left > 0) {\n      this.timeLongPress.timerBegin = Date.now();\n    }\n    this.timeLongPress.timerEnd = Date.now();\n    /** @type {?} */\n    const duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n    if (duration >= longPressConfig.delay) {\n      this.disableScroll();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  enableScroll() {\n    if (this.scrollContainer) {\n      this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');\n    }\n    this.renderer.setStyle(this.document.body, 'overflow', '');\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  disableScroll() {\n    /* istanbul ignore next */\n    if (this.scrollContainer) {\n      this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');\n    }\n    this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  hasScrollbar() {\n    /** @type {?} */\n    const scrollContainer = this.getScrollElement();\n    /** @type {?} */\n    const containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;\n    /** @type {?} */\n    const containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n    return containerHasHorizontalScroll || containerHasVerticalScroll;\n  }\n}\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) {\n  return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\nDraggableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableDirective,\n  selectors: [[\"\", \"mwlDraggable\", \"\"]],\n  inputs: {\n    dragAxis: \"dragAxis\",\n    dragSnapGrid: \"dragSnapGrid\",\n    ghostDragEnabled: \"ghostDragEnabled\",\n    showOriginalElementWhileDragging: \"showOriginalElementWhileDragging\",\n    dragCursor: \"dragCursor\",\n    autoScroll: \"autoScroll\",\n    dropData: \"dropData\",\n    validateDrag: \"validateDrag\",\n    dragActiveClass: \"dragActiveClass\",\n    ghostElementAppendTo: \"ghostElementAppendTo\",\n    ghostElementTemplate: \"ghostElementTemplate\",\n    touchStartLongPress: \"touchStartLongPress\"\n  },\n  outputs: {\n    dragPointerDown: \"dragPointerDown\",\n    dragStart: \"dragStart\",\n    ghostElementCreated: \"ghostElementCreated\",\n    dragging: \"dragging\",\n    dragEnd: \"dragEnd\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: DraggableHelper\n}, {\n  type: NgZone\n}, {\n  type: ViewContainerRef\n}, {\n  type: DraggableScrollContainerDirective,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\nDraggableDirective.propDecorators = {\n  dropData: [{\n    type: Input\n  }],\n  dragAxis: [{\n    type: Input\n  }],\n  dragSnapGrid: [{\n    type: Input\n  }],\n  ghostDragEnabled: [{\n    type: Input\n  }],\n  showOriginalElementWhileDragging: [{\n    type: Input\n  }],\n  validateDrag: [{\n    type: Input\n  }],\n  dragCursor: [{\n    type: Input\n  }],\n  dragActiveClass: [{\n    type: Input\n  }],\n  ghostElementAppendTo: [{\n    type: Input\n  }],\n  ghostElementTemplate: [{\n    type: Input\n  }],\n  touchStartLongPress: [{\n    type: Input\n  }],\n  autoScroll: [{\n    type: Input\n  }],\n  dragPointerDown: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  ghostElementCreated: [{\n    type: Output\n  }],\n  dragging: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: DraggableHelper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: DraggableScrollContainerDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    dragAxis: [{\n      type: Input\n    }],\n    dragSnapGrid: [{\n      type: Input\n    }],\n    ghostDragEnabled: [{\n      type: Input\n    }],\n    showOriginalElementWhileDragging: [{\n      type: Input\n    }],\n    dragCursor: [{\n      type: Input\n    }],\n    autoScroll: [{\n      type: Input\n    }],\n    dragPointerDown: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    ghostElementCreated: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dropData: [{\n      type: Input\n    }],\n    validateDrag: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    ghostElementAppendTo: [{\n      type: Input\n    }],\n    ghostElementTemplate: [{\n      type: Input\n    }],\n    touchStartLongPress: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n  return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;\n}\nclass DroppableDirective {\n  /**\n   * @param {?} element\n   * @param {?} draggableHelper\n   * @param {?} zone\n   * @param {?} renderer\n   * @param {?} scrollContainer\n   */\n  constructor(element, draggableHelper, zone, renderer, scrollContainer) {\n    this.element = element;\n    this.draggableHelper = draggableHelper;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.scrollContainer = scrollContainer;\n    /**\n     * Called when a draggable element starts overlapping the element\n     */\n    this.dragEnter = new EventEmitter();\n    /**\n     * Called when a draggable element stops overlapping the element\n     */\n    this.dragLeave = new EventEmitter();\n    /**\n     * Called when a draggable element is moved over the element\n     */\n    this.dragOver = new EventEmitter();\n    /**\n     * Called when a draggable element is dropped on this element\n     */\n    this.drop = new EventEmitter(); // tslint:disable-line no-output-named-after-standard-event\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n    /**\n    * @param {?} drag$\n    * @return {?}\n    */\n    drag$ => {\n      addClass(this.renderer, this.element, this.dragActiveClass);\n      /** @type {?} */\n      const droppableElement = {\n        updateCache: true\n      };\n      /** @type {?} */\n      const deregisterScrollListener = this.renderer.listen(this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : 'window', 'scroll',\n      /**\n      * @return {?}\n      */\n      () => {\n        droppableElement.updateCache = true;\n      });\n      /** @type {?} */\n      let currentDragDropData;\n      /** @type {?} */\n      const overlaps$ = drag$.pipe(map(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ({\n        clientX,\n        clientY,\n        dropData,\n        target\n      }) => {\n        currentDragDropData = dropData;\n        if (droppableElement.updateCache) {\n          droppableElement.rect = this.element.nativeElement.getBoundingClientRect();\n          if (this.scrollContainer) {\n            droppableElement.scrollContainerRect = this.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n          }\n          droppableElement.updateCache = false;\n        }\n        /** @type {?} */\n        const isWithinElement = isCoordinateWithinRectangle(clientX, clientY, /** @type {?} */droppableElement.rect);\n        /** @type {?} */\n        const isDropAllowed = !this.validateDrop || this.validateDrop({\n          clientX,\n          clientY,\n          target\n        });\n        if (droppableElement.scrollContainerRect) {\n          return isWithinElement && isDropAllowed && isCoordinateWithinRectangle(clientX, clientY, /** @type {?} */droppableElement.scrollContainerRect);\n        } else {\n          return isWithinElement && isDropAllowed;\n        }\n      }));\n      /** @type {?} */\n      const overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n      /** @type {?} */\n      let dragOverActive;\n      overlapsChanged$.pipe(filter(\n      /**\n      * @param {?} overlapsNow\n      * @return {?}\n      */\n      overlapsNow => overlapsNow)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        dragOverActive = true;\n        addClass(this.renderer, this.element, this.dragOverClass);\n        this.zone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dragEnter.next({\n            dropData: currentDragDropData\n          });\n        });\n      });\n      overlaps$.pipe(filter(\n      /**\n      * @param {?} overlapsNow\n      * @return {?}\n      */\n      overlapsNow => overlapsNow)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.zone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dragOver.next({\n            dropData: currentDragDropData\n          });\n        });\n      });\n      overlapsChanged$.pipe(pairwise(), filter(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      ([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        dragOverActive = false;\n        removeClass(this.renderer, this.element, this.dragOverClass);\n        this.zone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dragLeave.next({\n            dropData: currentDragDropData\n          });\n        });\n      });\n      drag$.subscribe({\n        complete:\n        /**\n        * @return {?}\n        */\n        () => {\n          deregisterScrollListener();\n          removeClass(this.renderer, this.element, this.dragActiveClass);\n          if (dragOverActive) {\n            removeClass(this.renderer, this.element, this.dragOverClass);\n            this.zone.run(\n            /**\n            * @return {?}\n            */\n            () => {\n              this.drop.next({\n                dropData: currentDragDropData\n              });\n            });\n          }\n        }\n      });\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this.currentDragSubscription) {\n      this.currentDragSubscription.unsubscribe();\n    }\n  }\n}\nDroppableDirective.ɵfac = function DroppableDirective_Factory(t) {\n  return new (t || DroppableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8));\n};\nDroppableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DroppableDirective,\n  selectors: [[\"\", \"mwlDroppable\", \"\"]],\n  inputs: {\n    dragOverClass: \"dragOverClass\",\n    dragActiveClass: \"dragActiveClass\",\n    validateDrop: \"validateDrop\"\n  },\n  outputs: {\n    dragEnter: \"dragEnter\",\n    dragLeave: \"dragLeave\",\n    dragOver: \"dragOver\",\n    drop: \"drop\"\n  }\n});\n/** @nocollapse */\nDroppableDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: DraggableHelper\n}, {\n  type: NgZone\n}, {\n  type: Renderer2\n}, {\n  type: DraggableScrollContainerDirective,\n  decorators: [{\n    type: Optional\n  }]\n}];\nDroppableDirective.propDecorators = {\n  dragOverClass: [{\n    type: Input\n  }],\n  dragActiveClass: [{\n    type: Input\n  }],\n  validateDrop: [{\n    type: Input\n  }],\n  dragEnter: [{\n    type: Output\n  }],\n  dragLeave: [{\n    type: Output\n  }],\n  dragOver: [{\n    type: Output\n  }],\n  drop: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDroppable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DraggableHelper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: DraggableScrollContainerDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    dragEnter: [{\n      type: Output\n    }],\n    dragLeave: [{\n      type: Output\n    }],\n    dragOver: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    dragOverClass: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    validateDrop: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragAndDropModule {}\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) {\n  return new (t || DragAndDropModule)();\n};\nDragAndDropModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: DragAndDropModule\n});\nDragAndDropModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n      exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, {\n    declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n    exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragAndDropModule, DraggableHelper as ɵc, DraggableScrollContainerDirective as ɵd, DraggableDirective as ɵb, DroppableDirective as ɵa };","map":{"version":3,"names":["Subject","Observable","merge","ReplaySubject","combineLatest","fromEvent","DOCUMENT","autoScroll","Injectable","Directive","ElementRef","Input","Renderer2","Output","EventEmitter","NgZone","Inject","ViewContainerRef","Optional","NgModule","defineInjectable","map","mergeMap","takeUntil","take","takeLast","pairwise","share","filter","count","startWith","distinctUntilChanged","ɵngcc0","DraggableHelper","constructor","currentDrag","ɵfac","DraggableHelper_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngInjectableDef","ngDevMode","ɵsetClassMetadata","type","args","DraggableScrollContainerDirective","elementRef","activeLongPressDrag","longPressConfig","duration","delta","DraggableScrollContainerDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","ctorParameters","propDecorators","selector","addClass","renderer","element","classToAdd","split","forEach","className","nativeElement","removeClass","classToRemove","DraggableDirective","draggableHelper","zone","vcr","scrollContainer","document","dragAxis","x","y","dragSnapGrid","ghostDragEnabled","showOriginalElementWhileDragging","dragCursor","margin","dragPointerDown","dragStart","ghostElementCreated","dragging","dragEnd","pointerDown$","pointerMove$","pointerUp$","eventListenerSubscriptions","destroy$","timeLongPress","timerBegin","timerEnd","ngOnInit","checkEventListeners","pointerDragged$","pipe","canDrag","pointerDownEvent","event","stopPropagation","globalDragStyle","createElement","setAttribute","appendChild","createText","requestAnimationFrame","head","startScrollPosition","getScrollPosition","scrollContainerScroll$","observer","listen","e","next","currentDrag$","cancelDrag$","run","dragComplete$","pointerMove","pointerMoveEvent","scroll","transformX","clientX","transformY","clientY","scrollLeft","left","scrollTop","top","target","moveData","Math","round","scrollX","scrollY","Object","assign","validateDrag","transform","dragStarted$","dragEnded$","subscribe","scroller","defaultView","dragActiveClass","rect","getBoundingClientRect","clone","cloneNode","setStyle","ghostElementAppendTo","parentNode","insertBefore","nextSibling","ghostElement","body","style","cursor","setElementStyles","position","width","height","willChange","pointerEvents","ghostElementTemplate","viewRef","createEmbeddedView","innerHTML","rootNodes","node","Node","remove","indexOf","emit","parentElement","removeChild","dragEndData","dragEndData$","calledCount","dragCancelled","complete","destroy","value","previous","dropData","ngOnChanges","changes","ngOnDestroy","unsubscribeEventListeners","hasEventListeners","keys","length","runOutsideAngular","mousedown","onMouseDown","mouseup","onMouseUp","touchstart","onTouchStart","touchend","onTouchEnd","touchcancel","mouseenter","onMouseEnter","mouseleave","onMouseLeave","button","mousemove","mouseMoveEvent","isDragActivated","hasContainerScrollbar","touchStartLongPress","Date","now","hasScrollbar","touchmove","contextMenuListener","preventDefault","touchMoveListener","passive","touchMoveEvent","shouldBeginDrag","targetTouches","unsubscribe","touches","enableScroll","changedTouches","setCursor","styles","key","getScrollElement","window","pageYOffset","documentElement","pageXOffset","moveScrollPosition","deltaScroll","abs","deltaX","deltaY","deltaTotal","delay","disableScroll","containerHasHorizontalScroll","scrollWidth","clientWidth","containerHasVerticalScroll","scrollHeight","clientHeight","DraggableDirective_Factory","outputs","features","ɵɵNgOnChangesFeature","decorators","undefined","isCoordinateWithinRectangle","right","bottom","DroppableDirective","dragEnter","dragLeave","dragOver","drop","currentDragSubscription","drag$","droppableElement","updateCache","deregisterScrollListener","currentDragDropData","overlaps$","scrollContainerRect","isWithinElement","isDropAllowed","validateDrop","overlapsChanged$","dragOverActive","overlapsNow","dragOverClass","didOverlap","DroppableDirective_Factory","DragAndDropModule","DragAndDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵc","ɵd","ɵb","ɵa"],"sources":["/home/ceo/mmmm/createyourevent/node_modules/angular-draggable-droppable/__ivy_ngcc__/fesm2015/angular-draggable-droppable.js"],"sourcesContent":["import { Subject, Observable, merge, ReplaySubject, combineLatest, fromEvent } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport autoScroll from '@mattlewis92/dom-autoscroller';\nimport { Injectable, Directive, ElementRef, Input, Renderer2, Output, EventEmitter, NgZone, Inject, ViewContainerRef, Optional, NgModule, defineInjectable } from '@angular/core';\nimport { map, mergeMap, takeUntil, take, takeLast, pairwise, share, filter, count, startWith, distinctUntilChanged } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DraggableHelper {\n    constructor() {\n        this.currentDrag = new Subject();\n    }\n}\nDraggableHelper.ɵfac = function DraggableHelper_Factory(t) { return new (t || DraggableHelper)(); };\nDraggableHelper.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DraggableHelper, factory: DraggableHelper.ɵfac, providedIn: 'root' });\n/** @nocollapse */ DraggableHelper.ngInjectableDef = defineInjectable({ factory: function DraggableHelper_Factory() { return new DraggableHelper(); }, token: DraggableHelper, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\n * ```html\n * <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\n * <div mwlDraggable>Drag me!</div>\n * </div>\n * ```\n */\nclass DraggableScrollContainerDirective {\n    /**\n     * @hidden\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Trigger the DragStart after a long touch in scrollable container when true\n         * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n         */\n        this.activeLongPressDrag = false;\n        /**\n         * Configuration of a long touch\n         * Duration in ms of a long touch before activating DragStart\n         * Delta of the\n         * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n         */\n        this.longPressConfig = { duration: 300, delta: 30 };\n    }\n}\nDraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) { return new (t || DraggableScrollContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDraggableScrollContainerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableScrollContainerDirective, selectors: [[\"\", \"mwlDraggableScrollContainer\", \"\"]], inputs: { activeLongPressDrag: \"activeLongPressDrag\", longPressConfig: \"longPressConfig\" } });\n/** @nocollapse */\nDraggableScrollContainerDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nDraggableScrollContainerDirective.propDecorators = {\n    activeLongPressDrag: [{ type: Input }],\n    longPressConfig: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDraggableScrollContainer]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { activeLongPressDrag: [{\n            type: Input\n        }], longPressConfig: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToAdd\n * @return {?}\n */\nfunction addClass(renderer, element, classToAdd) {\n    if (classToAdd) {\n        classToAdd\n            .split(' ')\n            .forEach((/**\n         * @param {?} className\n         * @return {?}\n         */\n        (className) => renderer.addClass(element.nativeElement, className)));\n    }\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToRemove\n * @return {?}\n */\nfunction removeClass(renderer, element, classToRemove) {\n    if (classToRemove) {\n        classToRemove\n            .split(' ')\n            .forEach((/**\n         * @param {?} className\n         * @return {?}\n         */\n        (className) => renderer.removeClass(element.nativeElement, className)));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DraggableDirective {\n    /**\n     * @hidden\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} draggableHelper\n     * @param {?} zone\n     * @param {?} vcr\n     * @param {?} scrollContainer\n     * @param {?} document\n     */\n    constructor(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {\n        this.element = element;\n        this.renderer = renderer;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        this.vcr = vcr;\n        this.scrollContainer = scrollContainer;\n        this.document = document;\n        /**\n         * The axis along which the element is draggable\n         */\n        this.dragAxis = { x: true, y: true };\n        /**\n         * Snap all drags to an x / y grid\n         */\n        this.dragSnapGrid = {};\n        /**\n         * Show a ghost element that shows the drag when dragging\n         */\n        this.ghostDragEnabled = true;\n        /**\n         * Show the original element when ghostDragEnabled is true\n         */\n        this.showOriginalElementWhileDragging = false;\n        /**\n         * The cursor to use when hovering over a draggable element\n         */\n        this.dragCursor = '';\n        /*\n           * Options used to control the behaviour of auto scrolling: https://www.npmjs.com/package/dom-autoscroller\n           */\n        this.autoScroll = {\n            margin: 20,\n        };\n        /**\n         * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n         */\n        this.dragPointerDown = new EventEmitter();\n        /**\n         * Called when the element has started to be dragged.\n         * Only called after at least one mouse or touch move event.\n         * If you call $event.cancelDrag$.emit() it will cancel the current drag\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Called after the ghost element has been created\n         */\n        this.ghostElementCreated = new EventEmitter();\n        /**\n         * Called when the element is being dragged\n         */\n        this.dragging = new EventEmitter();\n        /**\n         * Called after the element is dragged\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.pointerDown$ = new Subject();\n        /**\n         * @hidden\n         */\n        this.pointerMove$ = new Subject();\n        /**\n         * @hidden\n         */\n        this.pointerUp$ = new Subject();\n        this.eventListenerSubscriptions = {};\n        this.destroy$ = new Subject();\n        this.timeLongPress = { timerBegin: 0, timerEnd: 0 };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.checkEventListeners();\n        /** @type {?} */\n        const pointerDragged$ = this.pointerDown$.pipe(filter((/**\n         * @return {?}\n         */\n        () => this.canDrag())), mergeMap((/**\n         * @param {?} pointerDownEvent\n         * @return {?}\n         */\n        (pointerDownEvent) => {\n            // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n            // stop mouse events propagating up the chain\n            if (pointerDownEvent.event.stopPropagation && !this.scrollContainer) {\n                pointerDownEvent.event.stopPropagation();\n            }\n            // hack to prevent text getting selected in safari while dragging\n            /** @type {?} */\n            const globalDragStyle = this.renderer.createElement('style');\n            this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n            this.renderer.appendChild(globalDragStyle, this.renderer.createText(`\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        `));\n            requestAnimationFrame((/**\n             * @return {?}\n             */\n            () => {\n                this.document.head.appendChild(globalDragStyle);\n            }));\n            /** @type {?} */\n            const startScrollPosition = this.getScrollPosition();\n            /** @type {?} */\n            const scrollContainerScroll$ = new Observable((/**\n             * @param {?} observer\n             * @return {?}\n             */\n            (observer) => {\n                /** @type {?} */\n                const scrollContainer = this.scrollContainer\n                    ? this.scrollContainer.elementRef.nativeElement\n                    : 'window';\n                return this.renderer.listen(scrollContainer, 'scroll', (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => observer.next(e)));\n            })).pipe(startWith(startScrollPosition), map((/**\n             * @return {?}\n             */\n            () => this.getScrollPosition())));\n            /** @type {?} */\n            const currentDrag$ = new Subject();\n            /** @type {?} */\n            const cancelDrag$ = new ReplaySubject();\n            this.zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.dragPointerDown.next({ x: 0, y: 0 });\n            }));\n            /** @type {?} */\n            const dragComplete$ = merge(this.pointerUp$, this.pointerDown$, cancelDrag$, this.destroy$).pipe(share());\n            /** @type {?} */\n            const pointerMove = combineLatest([\n                this.pointerMove$,\n                scrollContainerScroll$,\n            ]).pipe(map((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ([pointerMoveEvent, scroll]) => {\n                return {\n                    currentDrag$,\n                    transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                    transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                    clientX: pointerMoveEvent.clientX,\n                    clientY: pointerMoveEvent.clientY,\n                    scrollLeft: scroll.left,\n                    scrollTop: scroll.top,\n                    target: pointerMoveEvent.event.target,\n                };\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                if (this.dragSnapGrid.x) {\n                    moveData.transformX =\n                        Math.round(moveData.transformX / this.dragSnapGrid.x) *\n                            this.dragSnapGrid.x;\n                }\n                if (this.dragSnapGrid.y) {\n                    moveData.transformY =\n                        Math.round(moveData.transformY / this.dragSnapGrid.y) *\n                            this.dragSnapGrid.y;\n                }\n                return moveData;\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                if (!this.dragAxis.x) {\n                    moveData.transformX = 0;\n                }\n                if (!this.dragAxis.y) {\n                    moveData.transformY = 0;\n                }\n                return moveData;\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                /** @type {?} */\n                const scrollX = moveData.scrollLeft - startScrollPosition.left;\n                /** @type {?} */\n                const scrollY = moveData.scrollTop - startScrollPosition.top;\n                return Object.assign({}, moveData, { x: moveData.transformX + scrollX, y: moveData.transformY + scrollY });\n            })), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ x, y, transformX, transformY }) => !this.validateDrag ||\n                this.validateDrag({\n                    x,\n                    y,\n                    transform: { x: transformX, y: transformY },\n                }))), takeUntil(dragComplete$), share());\n            /** @type {?} */\n            const dragStarted$ = pointerMove.pipe(take(1), share());\n            /** @type {?} */\n            const dragEnded$ = pointerMove.pipe(takeLast(1), share());\n            dragStarted$.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ clientX, clientY, x, y }) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragStart.next({ cancelDrag$ });\n                }));\n                this.scroller = autoScroll([\n                    this.scrollContainer\n                        ? this.scrollContainer.elementRef.nativeElement\n                        : this.document.defaultView,\n                ], Object.assign({}, this.autoScroll, { /**\n                     * @return {?}\n                     */\n                    autoScroll() {\n                        return true;\n                    } }));\n                addClass(this.renderer, this.element, this.dragActiveClass);\n                if (this.ghostDragEnabled) {\n                    /** @type {?} */\n                    const rect = this.element.nativeElement.getBoundingClientRect();\n                    /** @type {?} */\n                    const clone = (/** @type {?} */ (this.element.nativeElement.cloneNode(true)));\n                    if (!this.showOriginalElementWhileDragging) {\n                        this.renderer.setStyle(this.element.nativeElement, 'visibility', 'hidden');\n                    }\n                    if (this.ghostElementAppendTo) {\n                        this.ghostElementAppendTo.appendChild(clone);\n                    }\n                    else {\n                        (/** @type {?} */ (this.element.nativeElement.parentNode)).insertBefore(clone, this.element.nativeElement.nextSibling);\n                    }\n                    this.ghostElement = clone;\n                    this.document.body.style.cursor = this.dragCursor;\n                    this.setElementStyles(clone, {\n                        position: 'fixed',\n                        top: `${rect.top}px`,\n                        left: `${rect.left}px`,\n                        width: `${rect.width}px`,\n                        height: `${rect.height}px`,\n                        cursor: this.dragCursor,\n                        margin: '0',\n                        willChange: 'transform',\n                        pointerEvents: 'none',\n                    });\n                    if (this.ghostElementTemplate) {\n                        /** @type {?} */\n                        const viewRef = this.vcr.createEmbeddedView(this.ghostElementTemplate);\n                        clone.innerHTML = '';\n                        viewRef.rootNodes\n                            .filter((/**\n                         * @param {?} node\n                         * @return {?}\n                         */\n                        (node) => node instanceof Node))\n                            .forEach((/**\n                         * @param {?} node\n                         * @return {?}\n                         */\n                        (node) => {\n                            clone.appendChild(node);\n                        }));\n                        dragEnded$.subscribe((/**\n                         * @return {?}\n                         */\n                        () => {\n                            this.vcr.remove(this.vcr.indexOf(viewRef));\n                        }));\n                    }\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.ghostElementCreated.emit({\n                            clientX: clientX - x,\n                            clientY: clientY - y,\n                            element: clone,\n                        });\n                    }));\n                    dragEnded$.subscribe((/**\n                     * @return {?}\n                     */\n                    () => {\n                        (/** @type {?} */ (clone.parentElement)).removeChild(clone);\n                        this.ghostElement = null;\n                        this.renderer.setStyle(this.element.nativeElement, 'visibility', '');\n                    }));\n                }\n                this.draggableHelper.currentDrag.next(currentDrag$);\n            }));\n            dragEnded$\n                .pipe(mergeMap((/**\n             * @param {?} dragEndData\n             * @return {?}\n             */\n            (dragEndData) => {\n                /** @type {?} */\n                const dragEndData$ = cancelDrag$.pipe(count(), take(1), map((/**\n                 * @param {?} calledCount\n                 * @return {?}\n                 */\n                (calledCount) => (Object.assign({}, dragEndData, { dragCancelled: calledCount > 0 })))));\n                cancelDrag$.complete();\n                return dragEndData$;\n            })))\n                .subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ x, y, dragCancelled }) => {\n                this.scroller.destroy();\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragEnd.next({ x, y, dragCancelled });\n                }));\n                removeClass(this.renderer, this.element, this.dragActiveClass);\n                currentDrag$.complete();\n            }));\n            merge(dragComplete$, dragEnded$)\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.document.head.removeChild(globalDragStyle);\n                }));\n            }));\n            return pointerMove;\n        })), share());\n        merge(pointerDragged$.pipe(take(1), map((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => [, value]))), pointerDragged$.pipe(pairwise()))\n            .pipe(filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([previous, next]) => {\n            if (!previous) {\n                return true;\n            }\n            return previous.x !== next.x || previous.y !== next.y;\n        })), map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([previous, next]) => next)))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ x, y, currentDrag$, clientX, clientY, transformX, transformY, target, }) => {\n            this.zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.dragging.next({ x, y });\n            }));\n            requestAnimationFrame((/**\n             * @return {?}\n             */\n            () => {\n                if (this.ghostElement) {\n                    /** @type {?} */\n                    const transform = `translate3d(${transformX}px, ${transformY}px, 0px)`;\n                    this.setElementStyles(this.ghostElement, {\n                        transform,\n                        '-webkit-transform': transform,\n                        '-ms-transform': transform,\n                        '-moz-transform': transform,\n                        '-o-transform': transform,\n                    });\n                }\n            }));\n            currentDrag$.next({\n                clientX,\n                clientY,\n                dropData: this.dropData,\n                target,\n            });\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.dragAxis) {\n            this.checkEventListeners();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unsubscribeEventListeners();\n        this.pointerDown$.complete();\n        this.pointerMove$.complete();\n        this.pointerUp$.complete();\n        this.destroy$.next();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    checkEventListeners() {\n        /** @type {?} */\n        const canDrag = this.canDrag();\n        /** @type {?} */\n        const hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n        if (canDrag && !hasEventListeners) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.eventListenerSubscriptions.mousedown = this.renderer.listen(this.element.nativeElement, 'mousedown', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onMouseDown(event);\n                }));\n                this.eventListenerSubscriptions.mouseup = this.renderer.listen('document', 'mouseup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onMouseUp(event);\n                }));\n                this.eventListenerSubscriptions.touchstart = this.renderer.listen(this.element.nativeElement, 'touchstart', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchStart(event);\n                }));\n                this.eventListenerSubscriptions.touchend = this.renderer.listen('document', 'touchend', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchEnd(event);\n                }));\n                this.eventListenerSubscriptions.touchcancel = this.renderer.listen('document', 'touchcancel', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchEnd(event);\n                }));\n                this.eventListenerSubscriptions.mouseenter = this.renderer.listen(this.element.nativeElement, 'mouseenter', (/**\n                 * @return {?}\n                 */\n                () => {\n                    this.onMouseEnter();\n                }));\n                this.eventListenerSubscriptions.mouseleave = this.renderer.listen(this.element.nativeElement, 'mouseleave', (/**\n                 * @return {?}\n                 */\n                () => {\n                    this.onMouseLeave();\n                }));\n            }));\n        }\n        else if (!canDrag && hasEventListeners) {\n            this.unsubscribeEventListeners();\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        if (event.button === 0) {\n            if (!this.eventListenerSubscriptions.mousemove) {\n                this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove', (/**\n                 * @param {?} mouseMoveEvent\n                 * @return {?}\n                 */\n                (mouseMoveEvent) => {\n                    this.pointerMove$.next({\n                        event: mouseMoveEvent,\n                        clientX: mouseMoveEvent.clientX,\n                        clientY: mouseMoveEvent.clientY,\n                    });\n                }));\n            }\n            this.pointerDown$.next({\n                event,\n                clientX: event.clientX,\n                clientY: event.clientY,\n            });\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseUp(event) {\n        if (event.button === 0) {\n            if (this.eventListenerSubscriptions.mousemove) {\n                this.eventListenerSubscriptions.mousemove();\n                delete this.eventListenerSubscriptions.mousemove;\n            }\n            this.pointerUp$.next({\n                event,\n                clientX: event.clientX,\n                clientY: event.clientY,\n            });\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onTouchStart(event) {\n        /** @type {?} */\n        let startScrollPosition;\n        /** @type {?} */\n        let isDragActivated;\n        /** @type {?} */\n        let hasContainerScrollbar;\n        if ((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n            this.touchStartLongPress) {\n            this.timeLongPress.timerBegin = Date.now();\n            isDragActivated = false;\n            hasContainerScrollbar = this.hasScrollbar();\n            startScrollPosition = this.getScrollPosition();\n        }\n        if (!this.eventListenerSubscriptions.touchmove) {\n            /** @type {?} */\n            const contextMenuListener = fromEvent(this.document, 'contextmenu').subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                e.preventDefault();\n            }));\n            /** @type {?} */\n            const touchMoveListener = fromEvent(this.document, 'touchmove', {\n                passive: false,\n            }).subscribe((/**\n             * @param {?} touchMoveEvent\n             * @return {?}\n             */\n            (touchMoveEvent) => {\n                if (((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n                    this.touchStartLongPress) &&\n                    !isDragActivated &&\n                    hasContainerScrollbar) {\n                    isDragActivated = this.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);\n                }\n                if (((!this.scrollContainer ||\n                    !this.scrollContainer.activeLongPressDrag) &&\n                    !this.touchStartLongPress) ||\n                    !hasContainerScrollbar ||\n                    isDragActivated) {\n                    touchMoveEvent.preventDefault();\n                    this.pointerMove$.next({\n                        event: touchMoveEvent,\n                        clientX: touchMoveEvent.targetTouches[0].clientX,\n                        clientY: touchMoveEvent.targetTouches[0].clientY,\n                    });\n                }\n            }));\n            this.eventListenerSubscriptions.touchmove = (/**\n             * @return {?}\n             */\n            () => {\n                contextMenuListener.unsubscribe();\n                touchMoveListener.unsubscribe();\n            });\n        }\n        this.pointerDown$.next({\n            event,\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY,\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onTouchEnd(event) {\n        if (this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove();\n            delete this.eventListenerSubscriptions.touchmove;\n            if ((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n                this.touchStartLongPress) {\n                this.enableScroll();\n            }\n        }\n        this.pointerUp$.next({\n            event,\n            clientX: event.changedTouches[0].clientX,\n            clientY: event.changedTouches[0].clientY,\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    onMouseEnter() {\n        this.setCursor(this.dragCursor);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    onMouseLeave() {\n        this.setCursor('');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    canDrag() {\n        return this.dragAxis.x || this.dragAxis.y;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    setCursor(value) {\n        if (!this.eventListenerSubscriptions.mousemove) {\n            this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListenerSubscriptions).forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            ((/** @type {?} */ (this))).eventListenerSubscriptions[type]();\n            delete ((/** @type {?} */ (this))).eventListenerSubscriptions[type];\n        }));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styles\n     * @return {?}\n     */\n    setElementStyles(element, styles) {\n        Object.keys(styles).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            this.renderer.setStyle(element, key, styles[key]);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollElement() {\n        if (this.scrollContainer) {\n            return this.scrollContainer.elementRef.nativeElement;\n        }\n        else {\n            return this.document.body;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollPosition() {\n        if (this.scrollContainer) {\n            return {\n                top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n                left: this.scrollContainer.elementRef.nativeElement.scrollLeft,\n            };\n        }\n        else {\n            return {\n                top: window.pageYOffset || this.document.documentElement.scrollTop,\n                left: window.pageXOffset || this.document.documentElement.scrollLeft,\n            };\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} touchMoveEvent\n     * @param {?} startScrollPosition\n     * @return {?}\n     */\n    shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {\n        /** @type {?} */\n        const moveScrollPosition = this.getScrollPosition();\n        /** @type {?} */\n        const deltaScroll = {\n            top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n            left: Math.abs(moveScrollPosition.left - startScrollPosition.left),\n        };\n        /** @type {?} */\n        const deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;\n        /** @type {?} */\n        const deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;\n        /** @type {?} */\n        const deltaTotal = deltaX + deltaY;\n        /** @type {?} */\n        const longPressConfig = this.touchStartLongPress\n            ? this.touchStartLongPress\n            : /* istanbul ignore next */\n                {\n                    delta: this.scrollContainer.longPressConfig.delta,\n                    delay: this.scrollContainer.longPressConfig.duration,\n                };\n        if (deltaTotal > longPressConfig.delta ||\n            deltaScroll.top > 0 ||\n            deltaScroll.left > 0) {\n            this.timeLongPress.timerBegin = Date.now();\n        }\n        this.timeLongPress.timerEnd = Date.now();\n        /** @type {?} */\n        const duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n        if (duration >= longPressConfig.delay) {\n            this.disableScroll();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    enableScroll() {\n        if (this.scrollContainer) {\n            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');\n        }\n        this.renderer.setStyle(this.document.body, 'overflow', '');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    disableScroll() {\n        /* istanbul ignore next */\n        if (this.scrollContainer) {\n            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');\n        }\n        this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hasScrollbar() {\n        /** @type {?} */\n        const scrollContainer = this.getScrollElement();\n        /** @type {?} */\n        const containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;\n        /** @type {?} */\n        const containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n        return containerHasHorizontalScroll || containerHasVerticalScroll;\n    }\n}\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) { return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nDraggableDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableDirective, selectors: [[\"\", \"mwlDraggable\", \"\"]], inputs: { dragAxis: \"dragAxis\", dragSnapGrid: \"dragSnapGrid\", ghostDragEnabled: \"ghostDragEnabled\", showOriginalElementWhileDragging: \"showOriginalElementWhileDragging\", dragCursor: \"dragCursor\", autoScroll: \"autoScroll\", dropData: \"dropData\", validateDrag: \"validateDrag\", dragActiveClass: \"dragActiveClass\", ghostElementAppendTo: \"ghostElementAppendTo\", ghostElementTemplate: \"ghostElementTemplate\", touchStartLongPress: \"touchStartLongPress\" }, outputs: { dragPointerDown: \"dragPointerDown\", dragStart: \"dragStart\", ghostElementCreated: \"ghostElementCreated\", dragging: \"dragging\", dragEnd: \"dragEnd\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: DraggableHelper },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: DraggableScrollContainerDirective, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nDraggableDirective.propDecorators = {\n    dropData: [{ type: Input }],\n    dragAxis: [{ type: Input }],\n    dragSnapGrid: [{ type: Input }],\n    ghostDragEnabled: [{ type: Input }],\n    showOriginalElementWhileDragging: [{ type: Input }],\n    validateDrag: [{ type: Input }],\n    dragCursor: [{ type: Input }],\n    dragActiveClass: [{ type: Input }],\n    ghostElementAppendTo: [{ type: Input }],\n    ghostElementTemplate: [{ type: Input }],\n    touchStartLongPress: [{ type: Input }],\n    autoScroll: [{ type: Input }],\n    dragPointerDown: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    ghostElementCreated: [{ type: Output }],\n    dragging: [{ type: Output }],\n    dragEnd: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDraggable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: DraggableHelper }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: DraggableScrollContainerDirective, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { dragAxis: [{\n            type: Input\n        }], dragSnapGrid: [{\n            type: Input\n        }], ghostDragEnabled: [{\n            type: Input\n        }], showOriginalElementWhileDragging: [{\n            type: Input\n        }], dragCursor: [{\n            type: Input\n        }], autoScroll: [{\n            type: Input\n        }], dragPointerDown: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], ghostElementCreated: [{\n            type: Output\n        }], dragging: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dropData: [{\n            type: Input\n        }], validateDrag: [{\n            type: Input\n        }], dragActiveClass: [{\n            type: Input\n        }], ghostElementAppendTo: [{\n            type: Input\n        }], ghostElementTemplate: [{\n            type: Input\n        }], touchStartLongPress: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n    return (clientX >= rect.left &&\n        clientX <= rect.right &&\n        clientY >= rect.top &&\n        clientY <= rect.bottom);\n}\nclass DroppableDirective {\n    /**\n     * @param {?} element\n     * @param {?} draggableHelper\n     * @param {?} zone\n     * @param {?} renderer\n     * @param {?} scrollContainer\n     */\n    constructor(element, draggableHelper, zone, renderer, scrollContainer) {\n        this.element = element;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.scrollContainer = scrollContainer;\n        /**\n         * Called when a draggable element starts overlapping the element\n         */\n        this.dragEnter = new EventEmitter();\n        /**\n         * Called when a draggable element stops overlapping the element\n         */\n        this.dragLeave = new EventEmitter();\n        /**\n         * Called when a draggable element is moved over the element\n         */\n        this.dragOver = new EventEmitter();\n        /**\n         * Called when a draggable element is dropped on this element\n         */\n        this.drop = new EventEmitter(); // tslint:disable-line no-output-named-after-standard-event\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe((/**\n         * @param {?} drag$\n         * @return {?}\n         */\n        (drag$) => {\n            addClass(this.renderer, this.element, this.dragActiveClass);\n            /** @type {?} */\n            const droppableElement = {\n                updateCache: true,\n            };\n            /** @type {?} */\n            const deregisterScrollListener = this.renderer.listen(this.scrollContainer\n                ? this.scrollContainer.elementRef.nativeElement\n                : 'window', 'scroll', (/**\n             * @return {?}\n             */\n            () => {\n                droppableElement.updateCache = true;\n            }));\n            /** @type {?} */\n            let currentDragDropData;\n            /** @type {?} */\n            const overlaps$ = drag$.pipe(map((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ clientX, clientY, dropData, target }) => {\n                currentDragDropData = dropData;\n                if (droppableElement.updateCache) {\n                    droppableElement.rect = this.element.nativeElement.getBoundingClientRect();\n                    if (this.scrollContainer) {\n                        droppableElement.scrollContainerRect = this.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n                    }\n                    droppableElement.updateCache = false;\n                }\n                /** @type {?} */\n                const isWithinElement = isCoordinateWithinRectangle(clientX, clientY, (/** @type {?} */ (droppableElement.rect)));\n                /** @type {?} */\n                const isDropAllowed = !this.validateDrop ||\n                    this.validateDrop({ clientX, clientY, target });\n                if (droppableElement.scrollContainerRect) {\n                    return (isWithinElement &&\n                        isDropAllowed &&\n                        isCoordinateWithinRectangle(clientX, clientY, (/** @type {?} */ (droppableElement.scrollContainerRect))));\n                }\n                else {\n                    return isWithinElement && isDropAllowed;\n                }\n            })));\n            /** @type {?} */\n            const overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n            /** @type {?} */\n            let dragOverActive;\n            overlapsChanged$\n                .pipe(filter((/**\n             * @param {?} overlapsNow\n             * @return {?}\n             */\n            (overlapsNow) => overlapsNow)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                dragOverActive = true;\n                addClass(this.renderer, this.element, this.dragOverClass);\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragEnter.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            overlaps$.pipe(filter((/**\n             * @param {?} overlapsNow\n             * @return {?}\n             */\n            (overlapsNow) => overlapsNow))).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragOver.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            overlapsChanged$\n                .pipe(pairwise(), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                dragOverActive = false;\n                removeClass(this.renderer, this.element, this.dragOverClass);\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragLeave.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            drag$.subscribe({\n                complete: (/**\n                 * @return {?}\n                 */\n                () => {\n                    deregisterScrollListener();\n                    removeClass(this.renderer, this.element, this.dragActiveClass);\n                    if (dragOverActive) {\n                        removeClass(this.renderer, this.element, this.dragOverClass);\n                        this.zone.run((/**\n                         * @return {?}\n                         */\n                        () => {\n                            this.drop.next({\n                                dropData: currentDragDropData,\n                            });\n                        }));\n                    }\n                }),\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.currentDragSubscription) {\n            this.currentDragSubscription.unsubscribe();\n        }\n    }\n}\nDroppableDirective.ɵfac = function DroppableDirective_Factory(t) { return new (t || DroppableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8)); };\nDroppableDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DroppableDirective, selectors: [[\"\", \"mwlDroppable\", \"\"]], inputs: { dragOverClass: \"dragOverClass\", dragActiveClass: \"dragActiveClass\", validateDrop: \"validateDrop\" }, outputs: { dragEnter: \"dragEnter\", dragLeave: \"dragLeave\", dragOver: \"dragOver\", drop: \"drop\" } });\n/** @nocollapse */\nDroppableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DraggableHelper },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: DraggableScrollContainerDirective, decorators: [{ type: Optional }] }\n];\nDroppableDirective.propDecorators = {\n    dragOverClass: [{ type: Input }],\n    dragActiveClass: [{ type: Input }],\n    validateDrop: [{ type: Input }],\n    dragEnter: [{ type: Output }],\n    dragLeave: [{ type: Output }],\n    dragOver: [{ type: Output }],\n    drop: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDroppable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DraggableHelper }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: DraggableScrollContainerDirective, decorators: [{\n                type: Optional\n            }] }]; }, { dragEnter: [{\n            type: Output\n        }], dragLeave: [{\n            type: Output\n        }], dragOver: [{\n            type: Output\n        }], drop: [{\n            type: Output\n        }], dragOverClass: [{\n            type: Input\n        }], dragActiveClass: [{\n            type: Input\n        }], validateDrop: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragAndDropModule {\n}\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) { return new (t || DragAndDropModule)(); };\nDragAndDropModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DragAndDropModule });\nDragAndDropModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragAndDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    DraggableDirective,\n                    DroppableDirective,\n                    DraggableScrollContainerDirective,\n                ],\n                exports: [\n                    DraggableDirective,\n                    DroppableDirective,\n                    DraggableScrollContainerDirective,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, { declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective], exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragAndDropModule, DraggableHelper as ɵc, DraggableScrollContainerDirective as ɵd, DraggableDirective as ɵb, DroppableDirective as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}