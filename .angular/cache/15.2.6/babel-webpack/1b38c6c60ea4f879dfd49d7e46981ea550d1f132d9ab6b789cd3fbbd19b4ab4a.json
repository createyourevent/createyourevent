{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafeHtmlPipe {\n  constructor(sanitized) {\n    this.sanitized = sanitized;\n  }\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\nSafeHtmlPipe.ɵfac = function SafeHtmlPipe_Factory(t) {\n  return new (t || SafeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nSafeHtmlPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"safeHtml\",\n  type: SafeHtmlPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;EAAiB;EAC9CC,SAAS,CAACC,KAAU;IAClB,OAAO,IAAI,CAACF,SAAS,CAACG,uBAAuB,CAACD,KAAK,CAAC;EACtD;;;mBAJWJ,YAAY;AAAA;;;QAAZA,YAAY;EAAAM;AAAA","names":["SafeHtmlPipe","constructor","sanitized","transform","value","bypassSecurityTrustHtml","pure"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/pipes/safeHtml.pipe.ts"],"sourcesContent":["import { DomSanitizer } from '@angular/platform-browser';\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: any): any {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}