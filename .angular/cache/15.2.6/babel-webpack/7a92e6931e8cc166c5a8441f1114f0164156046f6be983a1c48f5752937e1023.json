{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ValidateImageWidthHeightService {\n  constructor() {}\n  validateProductImageWidthHeight(w, h) {\n    return formGroup => {\n      const imageByte = formGroup.controls.photo.value;\n      const imageContentType = formGroup.controls.photoContentType.value;\n      const imageByte2 = formGroup.controls.photo2.value;\n      const imageContentType2 = formGroup.controls.photo2ContentType.value;\n      const imageByte3 = formGroup.controls.photo3.value;\n      const imageContentType3 = formGroup.controls.photo3ContentType.value;\n      if (!imageByte || !imageContentType) {\n        return null;\n      }\n      const img = new Image();\n      img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n      const width = img.naturalWidth;\n      const height = img.naturalHeight;\n      const img2 = new Image();\n      img2.src = 'data:' + imageContentType2 + ';base64,' + imageByte2;\n      const width2 = img2.naturalWidth;\n      const height2 = img2.naturalHeight;\n      const img3 = new Image();\n      img3.src = 'data:' + imageContentType3 + ';base64,' + imageByte3;\n      const width3 = img3.naturalWidth;\n      const height3 = img3.naturalHeight;\n      if (imageByte && !imageByte2 && !imageByte3) {\n        return width <= w && height <= h ? null : {\n          maxFileDimension: true\n        };\n      } else if (imageByte && imageByte2 && !imageByte3) {\n        return width <= w && height <= h && width2 <= w && height2 <= h ? null : {\n          maxFileDimension: true\n        };\n      } else if (imageByte && imageByte2 && imageByte3) {\n        return width <= w && height <= h && width2 <= w && height2 <= h && width3 <= w && height3 <= h ? null : {\n          maxFileDimension: true\n        };\n      }\n    };\n  }\n  validateProductImageWidthHeightPartner(w, h) {\n    return formGroup => {\n      const imageByte = formGroup.controls.logo.value;\n      const imageContentType = formGroup.controls.logoContentType.value;\n      if (!imageByte || !imageContentType) {\n        return null;\n      }\n      const img = new Image();\n      img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n      const width = img.naturalWidth;\n      const height = img.naturalHeight;\n      if (imageByte) {\n        return width <= w && height <= h ? null : {\n          maxFileDimension: true\n        };\n      }\n    };\n  }\n}\nValidateImageWidthHeightService.ɵfac = function ValidateImageWidthHeightService_Factory(t) {\n  return new (t || ValidateImageWidthHeightService)();\n};\nValidateImageWidthHeightService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ValidateImageWidthHeightService,\n  factory: ValidateImageWidthHeightService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["ValidateImageWidthHeightService","constructor","validateProductImageWidthHeight","w","h","formGroup","imageByte","controls","photo","value","imageContentType","photoContentType","imageByte2","photo2","imageContentType2","photo2ContentType","imageByte3","photo3","imageContentType3","photo3ContentType","img","Image","src","width","naturalWidth","height","naturalHeight","img2","width2","height2","img3","width3","height3","maxFileDimension","validateProductImageWidthHeightPartner","logo","logoContentType","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/validators/ValidateImageWidthHeight.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UntypedFormGroup, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateImageWidthHeightService {\n  constructor() {}\n\n  validateProductImageWidthHeight(w: number, h: number): any {\n    return (formGroup: UntypedFormGroup) => {\n      const imageByte = formGroup.controls.photo.value;\n      const imageContentType = formGroup.controls.photoContentType.value;\n\n      const imageByte2 = formGroup.controls.photo2.value;\n      const imageContentType2 = formGroup.controls.photo2ContentType.value;\n\n      const imageByte3 = formGroup.controls.photo3.value;\n      const imageContentType3 = formGroup.controls.photo3ContentType.value;\n\n      if (!imageByte || !imageContentType) {\n        return null;\n      }\n\n      const img = new Image();\n      img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n      const width = img.naturalWidth;\n      const height = img.naturalHeight;\n\n      const img2 = new Image();\n      img2.src = 'data:' + imageContentType2 + ';base64,' + imageByte2;\n      const width2 = img2.naturalWidth;\n      const height2 = img2.naturalHeight;\n\n      const img3 = new Image();\n      img3.src = 'data:' + imageContentType3 + ';base64,' + imageByte3;\n      const width3 = img3.naturalWidth;\n      const height3 = img3.naturalHeight;\n\n      if (imageByte && !imageByte2 && !imageByte3) {\n        return width <= w && height <= h ? null : { maxFileDimension: true };\n      } else if (imageByte && imageByte2 && !imageByte3) {\n        return width <= w && height <= h && width2 <= w && height2 <= h ? null : { maxFileDimension: true };\n      } else if (imageByte && imageByte2 && imageByte3) {\n        return width <= w && height <= h && width2 <= w && height2 <= h && width3 <= w && height3 <= h ? null : { maxFileDimension: true };\n      }\n    };\n  }\n\n  validateProductImageWidthHeightPartner(w: number, h: number): any {\n    return (formGroup: UntypedFormGroup) => {\n      const imageByte = formGroup.controls.logo.value;\n      const imageContentType = formGroup.controls.logoContentType.value;\n\n      if (!imageByte || !imageContentType) {\n        return null;\n      }\n\n      const img = new Image();\n      img.src = 'data:' + imageContentType + ';base64,' + imageByte;\n      const width = img.naturalWidth;\n      const height = img.naturalHeight;\n\n      if (imageByte) {\n        return width <= w && height <= h ? null : { maxFileDimension: true };\n      }\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}