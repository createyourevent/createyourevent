{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GradientDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    renderer.addClass(this.element.nativeElement, 'gradient_' + this.getRandomInt(1, 30));\n  }\n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\nGradientDirective.ɵfac = function GradientDirective_Factory(t) {\n  return new (t || GradientDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nGradientDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: GradientDirective,\n  selectors: [[\"\", \"gradient\", \"\"]]\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,iBAAiB;EAE1BC,YAAoBC,OAAmB,EACnBC,QAAmB;IADnB,YAAO,GAAPD,OAAO;IACP,aAAQ,GAARC,QAAQ;IACZA,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAACF,OAAO,CAACG,aAAa,EAAE,WAAW,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACrG;EAEAA,YAAY,CAACC,GAAG,EAAEC,GAAG;IACnBD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;IACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC1D;;;mBAXSP,iBAAiB;AAAA;;QAAjBA,iBAAiB;EAAAa;AAAA","names":["GradientDirective","constructor","element","renderer","addClass","nativeElement","getRandomInt","min","max","Math","ceil","floor","random","selectors"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/gradient-directive/gradient.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[gradient]'\n})\nexport class GradientDirective {\n\n    constructor(private element: ElementRef,\n                private renderer: Renderer2) {\n                    renderer.addClass(this.element.nativeElement, 'gradient_' + this.getRandomInt(1, 30));\n    }\n\n    getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}