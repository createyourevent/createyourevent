{"ast":null,"code":"import { PriceType } from \"app/entities/enumerations/price-type.model\";\nimport dayjs from \"dayjs\";\nimport deLocale from '@fullcalendar/core/locales/de';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/general.service\";\nimport * as i2 from \"primeng/dynamicdialog\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@fullcalendar/angular\";\nimport * as i5 from \"primeng/toast\";\nexport class RentCalendarComponent {\n  constructor(generalService, ref, config, messageService) {\n    this.generalService = generalService;\n    this.ref = ref;\n    this.config = config;\n    this.messageService = messageService;\n    this.eventProductOrders = [];\n  }\n  handleEventClick(arg) {\n    let evs = 'Event start: ' + arg.event.start + '\\n';\n    let eve = 'Event end: ' + arg.event.end + '\\n';\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Event date',\n      detail: evs + eve\n    });\n  }\n  ngOnInit() {\n    this.options = {\n      editable: true,\n      theme: 'standart',\n      headerToolbar: {\n        start: 'today prev,next',\n        center: 'title',\n        end: 'dayGridMonth,timeGridWeek,timeGridDay' // will normally be on the right. if RTL, will be on the left\n      },\n\n      locales: [deLocale],\n      locale: 'de',\n      // add other plugins\n      eventClick: this.handleEventClick.bind(this),\n      events: []\n    };\n    this.generalService.findEventProductOrdersByProductId(this.config.data.id).subscribe(res => {\n      let events = [];\n      res.body.forEach(order => {\n        if (order.product.priceType === PriceType.RENT) this.eventProductOrders.push(order);\n        events.push({\n          title: order.product.title,\n          start: dayjs(order.dateFrom).toISOString(),\n          end: dayjs(order.dateUntil).toISOString()\n        });\n      });\n      this.options.events = events;\n    });\n  }\n}\nRentCalendarComponent.ɵfac = function RentCalendarComponent_Factory(t) {\n  return new (t || RentCalendarComponent)(i0.ɵɵdirectiveInject(i1.GeneralService), i0.ɵɵdirectiveInject(i2.DynamicDialogRef), i0.ɵɵdirectiveInject(i2.DynamicDialogConfig), i0.ɵɵdirectiveInject(i3.MessageService));\n};\nRentCalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RentCalendarComponent,\n  selectors: [[\"jhi-rent-calendar\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[3, \"options\"]],\n  template: function RentCalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵtext(1, \"\\n\");\n      i0.ɵɵelement(2, \"full-calendar\", 0);\n      i0.ɵɵtext(3, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"options\", ctx.options);\n    }\n  },\n  dependencies: [i4.FullCalendarComponent, i5.Toast],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,QAAQ,4CAA4C;AAGtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,+BAA+B;;;;;;;AASpD,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,cAA8B,EAASC,GAAqB,EAASC,MAA2B,EAAUC,cAA8B;IAAxI,mBAAc,GAAdH,cAAc;IAAyB,QAAG,GAAHC,GAAG;IAA2B,WAAM,GAANC,MAAM;IAA+B,mBAAc,GAAdC,cAAc;IAD5I,uBAAkB,GAAyB,EAAE;EACkH;EAE/JC,gBAAgB,CAACC,GAAG;IAClB,IAAIC,GAAG,GAAG,eAAe,GAAGD,GAAG,CAACE,KAAK,CAACC,KAAK,GAAG,IAAI;IAClD,IAAIC,GAAG,GAAG,aAAa,GAAGJ,GAAG,CAACE,KAAK,CAACG,GAAG,GAAG,IAAI;IAC9C,IAAI,CAACP,cAAc,CAACQ,GAAG,CAAC;MAACC,QAAQ,EAAC,SAAS;MAAEC,OAAO,EAAC,YAAY;MAAEC,MAAM,EAAER,GAAG,GAAGG;IAAG,CAAC,CAAC;EACxF;EAGAM,QAAQ;IAEN,IAAI,CAACC,OAAO,GAAG;MACbC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,UAAU;MACjBC,aAAa,EAAE;QACbX,KAAK,EAAE,iBAAiB;QACxBY,MAAM,EAAE,OAAO;QACfV,GAAG,EAAE,uCAAuC,CAAC;OAC9C;;MACDW,OAAO,EAAE,CAAExB,QAAQ,CAAE;MACrByB,MAAM,EAAE,IAAI;MACZ;MACAC,UAAU,EAAE,IAAI,CAACnB,gBAAgB,CAACoB,IAAI,CAAC,IAAI,CAAC;MAC5CC,MAAM,EAAE;KAET;IAED,IAAI,CAACzB,cAAc,CAAC0B,iCAAiC,CAAC,IAAI,CAACxB,MAAM,CAACyB,IAAI,CAACC,EAAE,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MACzF,IAAIL,MAAM,GAAG,EAAE;MACfK,GAAG,CAACC,IAAI,CAACC,OAAO,CAACC,KAAK,IAAG;QACvB,IAAGA,KAAK,CAACC,OAAO,CAACC,SAAS,KAAKxC,SAAS,CAACyC,IAAI,EAC7C,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAACL,KAAK,CAAC;QACnCR,MAAM,CAACa,IAAI,CAAC;UAAEC,KAAK,EAAEN,KAAK,CAACC,OAAO,CAACK,KAAK;UAAE/B,KAAK,EAAEZ,KAAK,CAACqC,KAAK,CAACO,QAAQ,CAAC,CAACC,WAAW,EAAE;UAAE/B,GAAG,EAAEd,KAAK,CAACqC,KAAK,CAACS,SAAS,CAAC,CAACD,WAAW;QAAE,CAAC,CAAC;MACnI,CAAC,CAAC;MACF,IAAI,CAACzB,OAAO,CAACS,MAAM,GAAGA,MAAM;IAC9B,CAAC,CAAC;EAGJ;;;mBA1CW3B,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAA6C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBlCC,0BAAmB;MACnBA;MAAAA,mCAAmD;MACnDA;;;MADeA,eAAmB;MAAnBA,qCAAmB","names":["PriceType","dayjs","deLocale","RentCalendarComponent","constructor","generalService","ref","config","messageService","handleEventClick","arg","evs","event","start","eve","end","add","severity","summary","detail","ngOnInit","options","editable","theme","headerToolbar","center","locales","locale","eventClick","bind","events","findEventProductOrdersByProductId","data","id","subscribe","res","body","forEach","order","product","priceType","RENT","eventProductOrders","push","title","dateFrom","toISOString","dateUntil","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/create-event/rent-calendar.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/create-event/rent-calendar.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { OnInit, OnDestroy } from \"@angular/core\";\nimport { PriceType } from \"app/entities/enumerations/price-type.model\";\nimport { IEventProductOrder } from \"app/entities/event-product-order/event-product-order.model\";\nimport { GeneralService } from \"app/general.service\";\nimport dayjs from \"dayjs\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport deLocale from '@fullcalendar/core/locales/de';\nimport { MessageService } from \"primeng/api\";\n\n\n@Component({\n  selector: 'jhi-rent-calendar',\n  templateUrl: './rent-calendar.component.html',\n\n})\nexport class RentCalendarComponent implements OnInit{\n\n  options: any;\n  eventProductOrders: IEventProductOrder[] = [];\n  constructor(private generalService: GeneralService, public ref: DynamicDialogRef, public config: DynamicDialogConfig, private messageService: MessageService) {}\n\n  handleEventClick(arg) {\n    let evs = 'Event start: ' + arg.event.start + '\\n';\n    let eve = 'Event end: ' + arg.event.end + '\\n';\n    this.messageService.add({severity:'success', summary:'Event date', detail: evs + eve});\n  }\n\n\n  ngOnInit(): void {\n\n    this.options = {\n      editable: true,\n      theme: 'standart', // default view, may be bootstrap\n      headerToolbar: {\n        start: 'today prev,next', // will normally be on the left. if RTL, will be on the right\n        center: 'title',\n        end: 'dayGridMonth,timeGridWeek,timeGridDay' // will normally be on the right. if RTL, will be on the left\n      },\n      locales: [ deLocale ],\n      locale: 'de',\n      // add other plugins\n      eventClick: this.handleEventClick.bind(this),\n      events: [],\n\n    };\n\n    this.generalService.findEventProductOrdersByProductId(this.config.data.id).subscribe(res => {\n      let events = [];\n      res.body.forEach(order => {\n        if(order.product.priceType === PriceType.RENT)\n        this.eventProductOrders.push(order);\n        events.push({ title: order.product.title, start: dayjs(order.dateFrom).toISOString(), end: dayjs(order.dateUntil).toISOString()});\n      });\n      this.options.events = events;\n    });\n\n\n  }\n}\n","<p-toast></p-toast>\n<full-calendar [options]=\"options\"></full-calendar>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}