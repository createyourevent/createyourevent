{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ng-jhipster\";\nexport class ValidateFileSizeService {\n  constructor(dataUtils) {\n    this.dataUtils = dataUtils;\n  }\n  valFileSize(max) {\n    return control => {\n      const val = control.value;\n      if (val) {\n        let bs = this.dataUtils.byteSize(val);\n        bs = bs.replace(/\\s/g, \"\");\n        bs = bs.slice(0, -5);\n        if (Number(bs) > max) {\n          return {\n            'maxFileSize': true\n          };\n        }\n      }\n      return null;\n    };\n  }\n}\nValidateFileSizeService.ɵfac = function ValidateFileSizeService_Factory(t) {\n  return new (t || ValidateFileSizeService)(i0.ɵɵinject(i1.JhiDataUtils));\n};\nValidateFileSizeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ValidateFileSizeService,\n  factory: ValidateFileSizeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAEpCC,YAAsBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;EAAkB;EAGjDC,WAAW,CAACC,GAAW;IACnB,OAAQC,OAAwB,IAA6B;MAE3D,MAAMC,GAAG,GAAWD,OAAO,CAACE,KAAK;MACjC,IAAGD,GAAG,EAAE;QACN,IAAIE,EAAE,GAAG,IAAI,CAACN,SAAS,CAACO,QAAQ,CAACH,GAAG,CAAC;QACrCE,EAAE,GAAGA,EAAE,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAC1BF,EAAE,GAAGA,EAAE,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,IAAIC,MAAM,CAACJ,EAAE,CAAC,GAAGJ,GAAG,EAAE;UACpB,OAAO;YAAE,aAAa,EAAE;UAAI,CAAE;;;MAGlC,OAAO,IAAI;IACb,CAAC;EACH;;;mBAnBWJ,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAAa,SAAvBb,uBAAuB;EAAAc,YAFtB;AAAM","names":["ValidateFileSizeService","constructor","dataUtils","valFileSize","max","control","val","value","bs","byteSize","replace","slice","Number","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/validators/ValidateFileSize.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { JhiDataUtils } from 'ng-jhipster';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateFileSizeService{\n\nconstructor(protected dataUtils: JhiDataUtils) { }\n\n\nvalFileSize(max: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const val: string = control.value;\n      if(val) {\n        let bs = this.dataUtils.byteSize(val);\n        bs = bs.replace(/\\s/g, \"\");\n        bs = bs.slice(0, -5);\n        if (Number(bs) > max) {\n          return { 'maxFileSize': true }\n        }\n      }\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}