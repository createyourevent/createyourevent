{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { BuyTicketDatatransComponent } from './buy-ticket-datatrans/buy-ticket-datatrans.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/general.service\";\nimport * as i4 from \"app/entities/event/service/event.service\";\nimport * as i5 from \"primeng/dynamicdialog\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../shared/language/translate.directive\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/toast\";\nexport class BuyTicketComponent {\n  constructor(messageService, route, generalService, eventService, dialogService) {\n    this.messageService = messageService;\n    this.route = route;\n    this.generalService = generalService;\n    this.eventService = eventService;\n    this.dialogService = dialogService;\n    this.allSelledTickets = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const eventId = params['eventId'];\n      this.eventService.find(eventId).subscribe(e => {\n        this.jhiEvent = e.body;\n        this.generalService.findWidthAuthorities().subscribe(u => {\n          this.user = u.body;\n        });\n        this.generalService.findTicketsByEventId(this.jhiEvent.id).subscribe(t => {\n          this.allSelledTickets = t.body;\n        });\n      });\n    });\n  }\n  totalTickets() {\n    let total = 0;\n    this.allSelledTickets.forEach(ticket => {\n      total += ticket.amount;\n    });\n    return total;\n  }\n  enoughtTickets() {\n    if (this.jhiEvent.placenumber - this.totalTickets() - this.amount < 0) {\n      return false;\n    }\n    return true;\n  }\n  changeAmount(e) {\n    if (this.jhiEvent.placenumber - this.totalTickets() - e < 0) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Not enought tickets to sell',\n        detail: 'There aren\\'t as many tickets left for this event as you\\'d like. We are sorry.'\n      });\n    }\n  }\n  openPayment() {\n    this.ref = this.dialogService.open(BuyTicketDatatransComponent, {\n      header: 'Datatrans-Terminal',\n      width: '70%',\n      contentStyle: {\n        \"max-height\": \"500px\",\n        \"overflow\": \"auto\"\n      },\n      baseZIndex: 10,\n      data: {\n        event: this.jhiEvent,\n        user: this.user,\n        type: 'buyTicket',\n        id: this.jhiEvent.id,\n        amount: this.amount\n      }\n    });\n  }\n}\nBuyTicketComponent.ɵfac = function BuyTicketComponent_Factory(t) {\n  return new (t || BuyTicketComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GeneralService), i0.ɵɵdirectiveInject(i4.EventService), i0.ɵɵdirectiveInject(i5.DialogService));\n};\nBuyTicketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BuyTicketComponent,\n  selectors: [[\"jhi-buy-ticket\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService, DialogService])],\n  decls: 23,\n  vars: 3,\n  consts: [[\"jhiTranslate\", \"buy-ticket.title\"], [\"jhiTranslate\", \"buy-ticket.info\"], [1, \"p-formgroup-inline\"], [1, \"p-field\"], [\"for\", \"amount\", 1, \"p-sr-only\"], [\"id\", \"amount\", \"type\", \"number\", \"pInputText\", \"\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Buy ticket\", 3, \"disabled\", \"click\"]],\n  template: function BuyTicketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵtext(1, \"\\n\");\n      i0.ɵɵelementStart(2, \"h1\")(3, \"span\", 0);\n      i0.ɵɵtext(4, \"Buy tickets for\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\\n\");\n      i0.ɵɵelementStart(7, \"p\", 1);\n      i0.ɵɵtext(8, \"\\n  Please insert how many tickets you will buy and press submit.\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n\\n\");\n      i0.ɵɵelementStart(10, \"div\", 2);\n      i0.ɵɵtext(11, \"\\n  \");\n      i0.ɵɵelementStart(12, \"div\", 3);\n      i0.ɵɵtext(13, \"\\n      \");\n      i0.ɵɵelementStart(14, \"label\", 4);\n      i0.ɵɵtext(15, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n      \");\n      i0.ɵɵelementStart(17, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function BuyTicketComponent_Template_input_change_17_listener($event) {\n        return ctx.changeAmount($event.target.value);\n      })(\"ngModelChange\", function BuyTicketComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.amount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n  \");\n      i0.ɵɵelementStart(20, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function BuyTicketComponent_Template_button_click_20_listener() {\n        return ctx.openPayment();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.jhiEvent.name, \"\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.amount);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.enoughtTickets());\n    }\n  },\n  dependencies: [i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.NgControlStatus, i6.NgModel, i7.TranslateDirective, i8.ButtonDirective, i9.Toast],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["MessageService","DialogService","BuyTicketDatatransComponent","BuyTicketComponent","constructor","messageService","route","generalService","eventService","dialogService","ngOnInit","params","subscribe","eventId","find","e","jhiEvent","body","findWidthAuthorities","u","user","findTicketsByEventId","id","t","allSelledTickets","totalTickets","total","forEach","ticket","amount","enoughtTickets","placenumber","changeAmount","add","severity","summary","detail","openPayment","ref","open","header","width","contentStyle","baseZIndex","data","event","type","selectors","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/buy-ticket/buy-ticket.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/views/buy-ticket/buy-ticket.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IEvent } from 'app/entities/event/event.model';\nimport { EventService } from 'app/entities/event/service/event.service';\nimport { Reservation } from 'app/entities/reservation/reservation.model';\nimport { ITicket } from 'app/entities/ticket/ticket.model';\nimport { IUser } from 'app/entities/user/user.model';\nimport { GeneralService } from 'app/general.service';\nimport dayjs from 'dayjs';\nimport { MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { BuyTicketDatatransComponent } from './buy-ticket-datatrans/buy-ticket-datatrans.component';\n\n@Component({\n  selector: 'jhi-buy-ticket',\n  templateUrl: './buy-ticket.component.html',\n  styleUrls: ['./buy-ticket.component.scss'],\n  providers:[MessageService, DialogService]\n})\nexport class BuyTicketComponent implements OnInit {\n\n  jhiEvent: IEvent;\n  user: IUser;\n\n  amount: number;\n\n  datatransTrxId: string;\n\n  ref: DynamicDialogRef;\n\n  allSelledTickets: ITicket[] = [];\n\n\n\n  constructor(private messageService: MessageService, private route: ActivatedRoute, private generalService: GeneralService, private eventService: EventService, public dialogService: DialogService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const eventId = params['eventId'];\n      this.eventService.find(eventId).subscribe(e => {\n        this.jhiEvent = e.body;\n        this.generalService.findWidthAuthorities().subscribe(u => {\n          this.user = u.body;\n        });\n\n        this.generalService.findTicketsByEventId(this.jhiEvent.id).subscribe(t => {\n          this.allSelledTickets = t.body;\n        });\n\n      });\n      });\n  }\n\n  totalTickets(): number {\n    let total = 0;\n    this.allSelledTickets.forEach(ticket => {\n      total += ticket.amount;\n    });\n    return total;\n  }\n\n  enoughtTickets(): boolean {\n    if((this.jhiEvent.placenumber - this.totalTickets()) - this.amount < 0) {\n      return false;\n    }\n    return true;\n  }\n\n  changeAmount(e: number): void {\n    if((this.jhiEvent.placenumber - this.totalTickets()) - e < 0) {\n      this.messageService.add({severity:'error', summary:'Not enought tickets to sell', detail:'There aren\\'t as many tickets left for this event as you\\'d like. We are sorry.'});\n    }\n  }\n\n  openPayment(): void {\n    this.ref = this.dialogService.open(BuyTicketDatatransComponent, {\n      header: 'Datatrans-Terminal',\n      width: '70%',\n      contentStyle: {\"max-height\": \"500px\", \"overflow\": \"auto\"},\n      baseZIndex: 10,\n      data: {\n        event: this.jhiEvent,\n        user: this.user,\n        type: 'buyTicket',\n        id: this.jhiEvent.id,\n        amount: this.amount\n      }\n    });\n  }\n\n}\n","<p-toast></p-toast>\n<h1><span jhiTranslate=\"buy-ticket.title\">Buy tickets for</span> {{ jhiEvent.name }}</h1>\n\n<p jhiTranslate=\"buy-ticket.info\">\n  Please insert how many tickets you will buy and press submit.\n</p>\n\n<div class=\"p-formgroup-inline\">\n  <div class=\"p-field\">\n      <label for=\"amount\" class=\"p-sr-only\">Amount</label>\n      <input (change)=\"changeAmount($event.target.value)\" id=\"amount\" [(ngModel)]=\"amount\" type=\"number\" pInputText>\n  </div>\n  <button pButton type=\"button\" (click)=\"openPayment()\" label=\"Buy ticket\" [disabled]=\"!enoughtTickets()\"></button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}