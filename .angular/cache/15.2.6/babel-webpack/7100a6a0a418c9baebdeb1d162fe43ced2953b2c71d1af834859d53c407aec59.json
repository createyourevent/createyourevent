{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { translationNotFoundMessage } from 'app/config/translation.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\n/**\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\n */\nexport class TranslateDirective {\n  constructor(el, translateService) {\n    this.el = el;\n    this.translateService = translateService;\n    this.directiveDestroyed = new Subject();\n  }\n  ngOnInit() {\n    this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(() => {\n      this.getTranslation();\n    });\n  }\n  ngOnChanges() {\n    this.getTranslation();\n  }\n  ngOnDestroy() {\n    this.directiveDestroyed.next();\n    this.directiveDestroyed.complete();\n  }\n  getTranslation() {\n    this.translateService.get(this.jhiTranslate, this.translateValues).pipe(takeUntil(this.directiveDestroyed)).subscribe(value => {\n      this.el.nativeElement.innerHTML = value;\n    }, () => `${translationNotFoundMessage}[${this.jhiTranslate}]`);\n  }\n}\nTranslateDirective.ɵfac = function TranslateDirective_Factory(t) {\n  return new (t || TranslateDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TranslateService));\n};\nTranslateDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: TranslateDirective,\n  selectors: [[\"\", \"jhiTranslate\", \"\"]],\n  inputs: {\n    jhiTranslate: \"jhiTranslate\",\n    translateValues: \"translateValues\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,SAASC,0BAA0B,QAAQ,+BAA+B;;;AAE1E;;;AAMA,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,EAAc,EAAUC,gBAAkC;IAA1D,OAAE,GAAFD,EAAE;IAAsB,qBAAgB,GAAhBC,gBAAgB;IAF3C,uBAAkB,GAAG,IAAIN,OAAO,EAAS;EAEuB;EAEjFO,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,YAAY,CAACC,IAAI,CAACR,SAAS,CAAC,IAAI,CAACS,kBAAkB,CAAC,CAAC,CAACC,SAAS,CAAC,MAAK;MACzF,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,CAACD,cAAc,EAAE;EACvB;EAEAE,WAAW;IACT,IAAI,CAACJ,kBAAkB,CAACK,IAAI,EAAE;IAC9B,IAAI,CAACL,kBAAkB,CAACM,QAAQ,EAAE;EACpC;EAEQJ,cAAc;IACpB,IAAI,CAACN,gBAAgB,CAClBW,GAAG,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,eAAe,CAAC,CAC5CV,IAAI,CAACR,SAAS,CAAC,IAAI,CAACS,kBAAkB,CAAC,CAAC,CACxCC,SAAS,CACRS,KAAK,IAAG;MACN,IAAI,CAACf,EAAE,CAACgB,aAAa,CAACC,SAAS,GAAGF,KAAK;IACzC,CAAC,EACD,MAAM,GAAGlB,0BAA0B,IAAI,IAAI,CAACgB,YAAY,GAAG,CAC5D;EACL;;;mBAjCWf,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAoB;EAAAC;IAAAN;IAAAC;EAAA;EAAAM;AAAA","names":["Subject","takeUntil","translationNotFoundMessage","TranslateDirective","constructor","el","translateService","ngOnInit","onLangChange","pipe","directiveDestroyed","subscribe","getTranslation","ngOnChanges","ngOnDestroy","next","complete","get","jhiTranslate","translateValues","value","nativeElement","innerHTML","selectors","inputs","features"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/shared/language/translate.directive.ts"],"sourcesContent":["import { Input, Directive, ElementRef, OnChanges, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { translationNotFoundMessage } from 'app/config/translation.config';\n\n/**\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\n */\n@Directive({\n  selector: '[jhiTranslate]',\n})\nexport class TranslateDirective implements OnChanges, OnInit, OnDestroy {\n  @Input() jhiTranslate!: string;\n  @Input() translateValues?: { [key: string]: unknown };\n\n  private readonly directiveDestroyed = new Subject<never>();\n\n  constructor(private el: ElementRef, private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(() => {\n      this.getTranslation();\n    });\n  }\n\n  ngOnChanges(): void {\n    this.getTranslation();\n  }\n\n  ngOnDestroy(): void {\n    this.directiveDestroyed.next();\n    this.directiveDestroyed.complete();\n  }\n\n  private getTranslation(): void {\n    this.translateService\n      .get(this.jhiTranslate, this.translateValues)\n      .pipe(takeUntil(this.directiveDestroyed))\n      .subscribe(\n        value => {\n          this.el.nativeElement.innerHTML = value;\n        },\n        () => `${translationNotFoundMessage}[${this.jhiTranslate}]`\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}