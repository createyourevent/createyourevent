{"ast":null,"code":"import { combineLatest } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./metrics.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@fortawesome/angular-fontawesome\";\nimport * as i4 from \"../../shared/language/translate.directive\";\nimport * as i5 from \"./blocks/jvm-memory/jvm-memory.component\";\nimport * as i6 from \"./blocks/jvm-threads/jvm-threads.component\";\nimport * as i7 from \"./blocks/metrics-cache/metrics-cache.component\";\nimport * as i8 from \"./blocks/metrics-datasource/metrics-datasource.component\";\nimport * as i9 from \"./blocks/metrics-endpoints-requests/metrics-endpoints-requests.component\";\nimport * as i10 from \"./blocks/metrics-garbagecollector/metrics-garbagecollector.component\";\nimport * as i11 from \"./blocks/metrics-request/metrics-request.component\";\nimport * as i12 from \"./blocks/metrics-system/metrics-system.component\";\nfunction MetricsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelement(2, \"jhi-jvm-memory\", 13);\n    i0.ɵɵtext(3, \"\\n\\n    \");\n    i0.ɵɵelement(4, \"jhi-jvm-threads\", 14);\n    i0.ɵɵtext(5, \"\\n\\n    \");\n    i0.ɵɵelement(6, \"jhi-metrics-system\", 15);\n    i0.ɵɵtext(7, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"updating\", ctx_r0.updatingMetrics)(\"jvmMemoryMetrics\", ctx_r0.metrics.jvm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"threads\", ctx_r0.threads);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"updating\", ctx_r0.updatingMetrics)(\"systemMetrics\", ctx_r0.metrics.processMetrics);\n  }\n}\nfunction MetricsComponent_jhi_metrics_garbagecollector_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jhi-metrics-garbagecollector\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"updating\", ctx_r1.updatingMetrics)(\"garbageCollectorMetrics\", ctx_r1.metrics.garbageCollector);\n  }\n}\nfunction MetricsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"Updating...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MetricsComponent_jhi_metrics_request_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jhi-metrics-request\", 18);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"updating\", ctx_r3.updatingMetrics)(\"requestMetrics\", ctx_r3.metrics[\"http.server.requests\"]);\n  }\n}\nfunction MetricsComponent_jhi_metrics_endpoints_requests_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jhi-metrics-endpoints-requests\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"updating\", ctx_r4.updatingMetrics)(\"endpointsRequestsMetrics\", ctx_r4.metrics.services);\n  }\n}\nfunction MetricsComponent_jhi_metrics_cache_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jhi-metrics-cache\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"updating\", ctx_r5.updatingMetrics)(\"cacheMetrics\", ctx_r5.metrics.cache);\n  }\n}\nfunction MetricsComponent_jhi_metrics_datasource_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jhi-metrics-datasource\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"updating\", ctx_r6.updatingMetrics)(\"datasourceMetrics\", ctx_r6.metrics.databases);\n  }\n}\nexport class MetricsComponent {\n  constructor(metricsService, changeDetector) {\n    this.metricsService = metricsService;\n    this.changeDetector = changeDetector;\n    this.updatingMetrics = true;\n  }\n  ngOnInit() {\n    this.refresh();\n  }\n  refresh() {\n    this.updatingMetrics = true;\n    combineLatest([this.metricsService.getMetrics(), this.metricsService.threadDump()]).subscribe(([metrics, threadDump]) => {\n      this.metrics = metrics;\n      this.threads = threadDump.threads;\n      this.updatingMetrics = false;\n      this.changeDetector.markForCheck();\n    });\n  }\n  metricsKeyExists(key) {\n    return Boolean(this.metrics?.[key]);\n  }\n  metricsKeyExistsAndObjectNotEmpty(key) {\n    return Boolean(this.metrics?.[key] && JSON.stringify(this.metrics[key]) !== '{}');\n  }\n}\nMetricsComponent.ɵfac = function MetricsComponent_Factory(t) {\n  return new (t || MetricsComponent)(i0.ɵɵdirectiveInject(i1.MetricsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nMetricsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MetricsComponent,\n  selectors: [[\"jhi-metrics\"]],\n  decls: 34,\n  vars: 7,\n  consts: [[\"id\", \"metrics-page-heading\", \"jhiTranslate\", \"metrics.title\", \"data-cy\", \"metricsPageHeading\"], [1, \"btn\", \"btn-primary\", \"float-right\", 3, \"click\"], [\"icon\", \"sync\"], [\"jhiTranslate\", \"metrics.refresh.button\"], [\"jhiTranslate\", \"metrics.jvm.title\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"updating\", \"garbageCollectorMetrics\", 4, \"ngIf\"], [\"class\", \"well well-lg\", \"jhiTranslate\", \"metrics.updating\", 4, \"ngIf\"], [3, \"updating\", \"requestMetrics\", 4, \"ngIf\"], [3, \"updating\", \"endpointsRequestsMetrics\", 4, \"ngIf\"], [3, \"updating\", \"cacheMetrics\", 4, \"ngIf\"], [3, \"updating\", \"datasourceMetrics\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-4\", 3, \"updating\", \"jvmMemoryMetrics\"], [1, \"col-md-4\", 3, \"threads\"], [1, \"col-md-4\", 3, \"updating\", \"systemMetrics\"], [3, \"updating\", \"garbageCollectorMetrics\"], [\"jhiTranslate\", \"metrics.updating\", 1, \"well\", \"well-lg\"], [3, \"updating\", \"requestMetrics\"], [3, \"updating\", \"endpointsRequestsMetrics\"], [3, \"updating\", \"cacheMetrics\"], [3, \"updating\", \"datasourceMetrics\"]],\n  template: function MetricsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"span\", 0);\n      i0.ɵɵtext(5, \"Application Metrics\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\\n    \");\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MetricsComponent_Template_button_click_7_listener() {\n        return ctx.refresh();\n      });\n      i0.ɵɵtext(8, \"\\n      \");\n      i0.ɵɵelement(9, \"fa-icon\", 2);\n      i0.ɵɵtext(10, \" \");\n      i0.ɵɵelementStart(11, \"span\", 3);\n      i0.ɵɵtext(12, \"Refresh\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n\\n  \");\n      i0.ɵɵelementStart(16, \"h3\", 4);\n      i0.ɵɵtext(17, \"JVM Metrics\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n\\n  \");\n      i0.ɵɵtemplate(19, MetricsComponent_div_19_Template, 8, 5, \"div\", 5);\n      i0.ɵɵtext(20, \"\\n\\n  \");\n      i0.ɵɵtemplate(21, MetricsComponent_jhi_metrics_garbagecollector_21_Template, 1, 2, \"jhi-metrics-garbagecollector\", 6);\n      i0.ɵɵtext(22, \"\\n\\n  \");\n      i0.ɵɵtemplate(23, MetricsComponent_div_23_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtext(24, \"\\n\\n  \");\n      i0.ɵɵtemplate(25, MetricsComponent_jhi_metrics_request_25_Template, 1, 2, \"jhi-metrics-request\", 8);\n      i0.ɵɵtext(26, \"\\n\\n  \");\n      i0.ɵɵtemplate(27, MetricsComponent_jhi_metrics_endpoints_requests_27_Template, 1, 2, \"jhi-metrics-endpoints-requests\", 9);\n      i0.ɵɵtext(28, \"\\n\\n  \");\n      i0.ɵɵtemplate(29, MetricsComponent_jhi_metrics_cache_29_Template, 1, 2, \"jhi-metrics-cache\", 10);\n      i0.ɵɵtext(30, \"\\n\\n  \");\n      i0.ɵɵtemplate(31, MetricsComponent_jhi_metrics_datasource_31_Template, 1, 2, \"jhi-metrics-datasource\", 11);\n      i0.ɵɵtext(32, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && !ctx.updatingMetrics);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && ctx.metricsKeyExists(\"garbageCollector\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.updatingMetrics);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && ctx.metricsKeyExists(\"http.server.requests\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && ctx.metricsKeyExists(\"services\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && ctx.metricsKeyExists(\"cache\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.metrics && ctx.metricsKeyExistsAndObjectNotEmpty(\"databases\"));\n    }\n  },\n  dependencies: [i2.NgIf, i3.FaIconComponent, i4.TranslateDirective, i5.JvmMemoryComponent, i6.JvmThreadsComponent, i7.MetricsCacheComponent, i8.MetricsDatasourceComponent, i9.MetricsEndpointsRequestsComponent, i10.MetricsGarbageCollectorComponent, i11.MetricsRequestComponent, i12.MetricsSystemComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,MAAM;;;;;;;;;;;;;;;;ICUlCC,+BAAqD;IACnDA;IAAAA,qCAAgH;IAEhHA;IAAAA,sCAAwE;IAExEA;IAAAA,yCAAgI;IAClIA;IAAAA,iBAAM;;;;IAL6BA,eAA4B;IAA5BA,iDAA4B;IAE3BA,eAAmB;IAAnBA,wCAAmB;IAEhBA,eAA4B;IAA5BA,iDAA4B;;;;;IAGnEA,mDAIgC;;;;IAF9BA,iDAA4B;;;;;IAI9BA,+BAAkF;IAAAA,2BAAW;IAAAA,iBAAM;;;;;IAEnGA,0CAIuB;;;;IAFrBA,iDAA4B;;;;;IAI9BA,qDAIkC;;;;IAFhCA,iDAA4B;;;;;IAI9BA,wCAIqB;;;;IAFnBA,iDAA4B;;;;;IAI9BA,6CAI0B;;;;IAFxBA,iDAA4B;;;ADpChC,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,cAA8B,EAAUC,cAAiC;IAAzE,mBAAc,GAAdD,cAAc;IAA0B,mBAAc,GAAdC,cAAc;IAF1E,oBAAe,GAAG,IAAI;EAE0E;EAEhGC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3BR,aAAa,CAAC,CAAC,IAAI,CAACI,cAAc,CAACK,UAAU,EAAE,EAAE,IAAI,CAACL,cAAc,CAACM,UAAU,EAAE,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,EAAEF,UAAU,CAAC,KAAI;MACtH,IAAI,CAACE,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,OAAO,GAAGH,UAAU,CAACG,OAAO;MACjC,IAAI,CAACL,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACH,cAAc,CAACS,YAAY,EAAE;IACpC,CAAC,CAAC;EACJ;EAEAC,gBAAgB,CAACC,GAAkB;IACjC,OAAOC,OAAO,CAAC,IAAI,CAACL,OAAO,GAAGI,GAAG,CAAC,CAAC;EACrC;EAEAE,iCAAiC,CAACF,GAAkB;IAClD,OAAOC,OAAO,CAAC,IAAI,CAACL,OAAO,GAAGI,GAAG,CAAC,IAAIG,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,OAAO,CAACI,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;EACnF;;;mBA3BWd,gBAAgB;AAAA;;QAAhBA,gBAAgB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BxB,2BAAK;MACHA;MAAAA,0BAAI;MACFA;MAAAA,+BAA0F;MAAAA,mCAAmB;MAAAA,iBAAO;MAEpHA;MAAAA,iCAAgE;MAApBA;QAAA,OAASyB,aAAS;MAAA,EAAC;MAC7DzB;MAAAA,6BAA+B;MAACA;MAAAA,gCAA4C;MAAAA,wBAAO;MAAAA,iBAAO;MAC5FA;MAAAA,iBAAS;MACXA;MAAAA,iBAAK;MAELA;MAAAA,8BAAqC;MAAAA,4BAAW;MAAAA,iBAAK;MAErDA;MAAAA,mEAMM;MAENA;MAAAA,qHAIgC;MAEhCA;MAAAA,mEAAmG;MAEnGA;MAAAA,mGAIuB;MAEvBA;MAAAA,yHAIkC;MAElCA;MAAAA,gGAIqB;MAErBA;MAAAA,0GAI0B;MAC5BA;MAAAA,iBAAM;MACNA;;;MAxCoBA,gBAAiC;MAAjCA,0DAAiC;MAShDA,eAAqD;MAArDA,8EAAqD;MAK7BA,eAAqB;MAArBA,0CAAqB;MAG7CA,eAAyD;MAAzDA,kFAAyD;MAMzDA,eAA6C;MAA7CA,sEAA6C;MAM7CA,eAA0C;MAA1CA,mEAA0C;MAM1CA,eAA+D;MAA/DA,wFAA+D","names":["combineLatest","i0","MetricsComponent","constructor","metricsService","changeDetector","ngOnInit","refresh","updatingMetrics","getMetrics","threadDump","subscribe","metrics","threads","markForCheck","metricsKeyExists","key","Boolean","metricsKeyExistsAndObjectNotEmpty","JSON","stringify","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/metrics/metrics.component.ts","/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/metrics/metrics.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { MetricsService } from './metrics.service';\nimport { Metrics, Thread } from './metrics.model';\n\n@Component({\n  selector: 'jhi-metrics',\n  templateUrl: './metrics.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MetricsComponent implements OnInit {\n  metrics?: Metrics;\n  threads?: Thread[];\n  updatingMetrics = true;\n\n  constructor(private metricsService: MetricsService, private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.updatingMetrics = true;\n    combineLatest([this.metricsService.getMetrics(), this.metricsService.threadDump()]).subscribe(([metrics, threadDump]) => {\n      this.metrics = metrics;\n      this.threads = threadDump.threads;\n      this.updatingMetrics = false;\n      this.changeDetector.markForCheck();\n    });\n  }\n\n  metricsKeyExists(key: keyof Metrics): boolean {\n    return Boolean(this.metrics?.[key]);\n  }\n\n  metricsKeyExistsAndObjectNotEmpty(key: keyof Metrics): boolean {\n    return Boolean(this.metrics?.[key] && JSON.stringify(this.metrics[key]) !== '{}');\n  }\n}\n","<div>\n  <h2>\n    <span id=\"metrics-page-heading\" jhiTranslate=\"metrics.title\" data-cy=\"metricsPageHeading\">Application Metrics</span>\n\n    <button class=\"btn btn-primary float-right\" (click)=\"refresh()\">\n      <fa-icon icon=\"sync\"></fa-icon> <span jhiTranslate=\"metrics.refresh.button\">Refresh</span>\n    </button>\n  </h2>\n\n  <h3 jhiTranslate=\"metrics.jvm.title\">JVM Metrics</h3>\n\n  <div class=\"row\" *ngIf=\"metrics && !updatingMetrics\">\n    <jhi-jvm-memory class=\"col-md-4\" [updating]=\"updatingMetrics\" [jvmMemoryMetrics]=\"metrics.jvm\"></jhi-jvm-memory>\n\n    <jhi-jvm-threads class=\"col-md-4\" [threads]=\"threads\"></jhi-jvm-threads>\n\n    <jhi-metrics-system class=\"col-md-4\" [updating]=\"updatingMetrics\" [systemMetrics]=\"metrics.processMetrics\"></jhi-metrics-system>\n  </div>\n\n  <jhi-metrics-garbagecollector\n    *ngIf=\"metrics && metricsKeyExists('garbageCollector')\"\n    [updating]=\"updatingMetrics\"\n    [garbageCollectorMetrics]=\"metrics.garbageCollector\"\n  ></jhi-metrics-garbagecollector>\n\n  <div class=\"well well-lg\" *ngIf=\"updatingMetrics\" jhiTranslate=\"metrics.updating\">Updating...</div>\n\n  <jhi-metrics-request\n    *ngIf=\"metrics && metricsKeyExists('http.server.requests')\"\n    [updating]=\"updatingMetrics\"\n    [requestMetrics]=\"metrics['http.server.requests']\"\n  ></jhi-metrics-request>\n\n  <jhi-metrics-endpoints-requests\n    *ngIf=\"metrics && metricsKeyExists('services')\"\n    [updating]=\"updatingMetrics\"\n    [endpointsRequestsMetrics]=\"metrics.services\"\n  ></jhi-metrics-endpoints-requests>\n\n  <jhi-metrics-cache\n    *ngIf=\"metrics && metricsKeyExists('cache')\"\n    [updating]=\"updatingMetrics\"\n    [cacheMetrics]=\"metrics.cache\"\n  ></jhi-metrics-cache>\n\n  <jhi-metrics-datasource\n    *ngIf=\"metrics && metricsKeyExistsAndObjectNotEmpty('databases')\"\n    [updating]=\"updatingMetrics\"\n    [datasourceMetrics]=\"metrics.databases\"\n  ></jhi-metrics-datasource>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}