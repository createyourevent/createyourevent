{"ast":null,"code":"import { SERVER_API_URL } from \"app/app.constants\";\nimport { createRequestOption } from \"app/core/request/request-util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrganisatorDashboardService {\n  constructor(http) {\n    this.http = http;\n    this.resourceUrl = SERVER_API_URL + 'api/events';\n  }\n  queryByUserAndActive(req) {\n    const options = createRequestOption(req);\n    return this.http.get(this.resourceUrl + '/user/active', {\n      params: options,\n      observe: 'response'\n    });\n  }\n}\nOrganisatorDashboardService.ɵfac = function OrganisatorDashboardService_Factory(t) {\n  return new (t || OrganisatorDashboardService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrganisatorDashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrganisatorDashboardService,\n  factory: OrganisatorDashboardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAASC,mBAAmB,QAAQ,+BAA+B;;;AAWnE,OAAM,MAAOC,2BAA2B;EAGtCC,YAAsBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFnB,gBAAW,GAAGJ,cAAc,GAAG,YAAY;EAET;EAEzCK,oBAAoB,CAACC,GAAS;IAC5B,MAAMC,OAAO,GAAGN,mBAAmB,CAACK,GAAG,CAAC;IACxC,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAAW,IAAI,CAACC,WAAW,GAAG,cAAc,EAAE;MAAEC,MAAM,EAAEH,OAAO;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EAC7G;;;mBARWT,2BAA2B;AAAA;;SAA3BA,2BAA2B;EAAAU,SAA3BV,2BAA2B;EAAAW,YAF1B;AAAM","names":["SERVER_API_URL","createRequestOption","OrganisatorDashboardService","constructor","http","queryByUserAndActive","req","options","get","resourceUrl","params","observe","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/organisator/dashboard_organisator/dashboard_organisator.service.ts"],"sourcesContent":["import { HttpResponse, HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { SERVER_API_URL } from \"app/app.constants\";\nimport { createRequestOption } from \"app/core/request/request-util\";\nimport { IEvent } from \"app/entities/event/event.model\";\nimport { Observable } from \"rxjs\";\n\n\ntype EntityResponseType = HttpResponse<IEvent>;\ntype EntityArrayResponseType = HttpResponse<IEvent[]>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganisatorDashboardService {\n  public resourceUrl = SERVER_API_URL + 'api/events';\n\n  constructor(protected http: HttpClient) {}\n\n  queryByUserAndActive(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IEvent[]>(this.resourceUrl + '/user/active', { params: options, observe: 'response' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}