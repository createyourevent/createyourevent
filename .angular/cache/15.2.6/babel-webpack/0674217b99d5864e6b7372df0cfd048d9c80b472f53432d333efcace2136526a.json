{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport class ConfigurationService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  getBeans() {\n    return this.http.get(this.applicationConfigService.getEndpointFor('management/configprops')).pipe(map(configProps => Object.values(Object.values(configProps.contexts).map(context => context.beans).reduce((allBeans, contextBeans) => ({\n      ...allBeans,\n      ...contextBeans\n    })))));\n  }\n  getPropertySources() {\n    return this.http.get(this.applicationConfigService.getEndpointFor('management/env')).pipe(map(env => env.propertySources));\n  }\n}\nConfigurationService.ɵfac = function ConfigurationService_Factory(t) {\n  return new (t || ConfigurationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nConfigurationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigurationService,\n  factory: ConfigurationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAMpC,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEnGC,QAAQ;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,wBAAwB,CAAC,CAAC,CAACC,IAAI,CAC5GR,GAAG,CAACS,WAAW,IACbC,MAAM,CAACC,MAAM,CACXD,MAAM,CAACC,MAAM,CAACF,WAAW,CAACG,QAAQ,CAAC,CAChCZ,GAAG,CAACa,OAAO,IAAIA,OAAO,CAACC,KAAK,CAAC,CAC7BC,MAAM,CAAC,CAACC,QAAe,EAAEC,YAAmB,MAAM;MAAE,GAAGD,QAAQ;MAAE,GAAGC;IAAY,CAAE,CAAC,CAAC,CACxF,CACF,CACF;EACH;EAEAC,kBAAkB;IAChB,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAACR,GAAG,CAACmB,GAAG,IAAIA,GAAG,CAACC,eAAe,CAAC,CAAC;EACjI;;;mBAjBWnB,oBAAoB;AAAA;;SAApBA,oBAAoB;EAAAoB,SAApBpB,oBAAoB;EAAAqB,YADP;AAAM","names":["map","ConfigurationService","constructor","http","applicationConfigService","getBeans","get","getEndpointFor","pipe","configProps","Object","values","contexts","context","beans","reduce","allBeans","contextBeans","getPropertySources","env","propertySources","factory","providedIn"],"sourceRoot":"","sources":["/home/ceo/mmmm/createyourevent/src/main/webapp/app/admin/configuration/configuration.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { Bean, Beans, ConfigProps, Env, PropertySource } from './configuration.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurationService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  getBeans(): Observable<Bean[]> {\n    return this.http.get<ConfigProps>(this.applicationConfigService.getEndpointFor('management/configprops')).pipe(\n      map(configProps =>\n        Object.values(\n          Object.values(configProps.contexts)\n            .map(context => context.beans)\n            .reduce((allBeans: Beans, contextBeans: Beans) => ({ ...allBeans, ...contextBeans }))\n        )\n      )\n    );\n  }\n\n  getPropertySources(): Observable<PropertySource[]> {\n    return this.http.get<Env>(this.applicationConfigService.getEndpointFor('management/env')).pipe(map(env => env.propertySources));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}